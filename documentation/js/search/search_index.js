var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,2.976,1,2.72]],["body/modules/AppModule.html",[0,2.987,1,5.555,2,1.443,3,1.318,4,1.609,5,1.609,6,1.318,7,3.331,8,1.609,9,1.609,10,1.609,11,2.545,12,0.017,13,3.214,14,3.214,15,3.214,16,3.214,17,3.214,18,3.214,19,3.214,20,3.214,21,3.214,22,3.214,23,3.214,24,3.214,25,3.214,26,3.214,27,3.214,28,3.214,29,2.194,30,3.015,31,2.545,32,2.545,33,3.214,34,3.214,35,3.214,36,3.214,37,3.015,38,3.214,39,2.418,40,2.628,41,1.609,42,1.609,43,0.069,44,0.069,45,0.061,46,1.861,47,1.857,48,2.73,49,2.73,50,2.73,51,2.73,52,0.32,53,3.04,54,0.222,55,3.04,56,1.609,57,1.861,58,1.861,59,1.861,60,1.861,61,1.861,62,1.861,63,4.903,64,4.238,65,5.79,66,5.261,67,3.853,68,3.801,69,2.525,70,1.861,71,2.525,72,1.861,73,2.525,74,1.861,75,2.525,76,1.861,77,1.861,78,1.861,79,4.238,80,1.861,81,1.857,82,3.331,83,1.609,84,2.154,85,1.861,86,2.525,87,1.861,88,1.861,89,1.771,90,1.771,91,1.609,92,1.609,93,1.609,94,1.861,95,5.551,96,5.551,97,1.609,98,0.069,99,0.019,100,0.006,101,0.006]],["title/controllers/CategoryController.html",[51,2.72,102,1.857]],["body/controllers/CategoryController.html",[12,0.016,13,2.878,18,2.878,21,2.878,24,2.878,33,2.878,43,0.094,44,0.094,45,0.082,47,1.544,51,2.745,52,0.283,54,0.301,79,4.922,98,0.094,99,0.026,100,0.008,101,0.008,102,1.222,103,2.185,104,1.79,105,2.527,106,0.071,107,0.367,108,0.951,109,3.874,110,3.874,111,5.28,112,3.874,113,4.71,114,2.527,115,4.256,116,2.391,117,2.185,118,1.292,119,2.745,120,2.527,121,0.239,122,2.527,123,0.531,124,0.629,125,0.292,126,0.5,127,1.691,128,0.539,129,1.246,130,2.527,131,2.025,132,2.185,133,2.403,134,5.406,135,3.337,136,0.818,137,5.694,138,2.527,139,2.185,140,3.874,141,2.527,142,2.527,143,2.185,144,2.527,145,2.527,146,4.256,147,2.185,148,1.409,149,2.527,150,2.527,151,2.538,152,1.79,153,2.538,154,1.656,155,1.79,156,4.256,157,3.741,158,3.651,159,0.961,160,1.79,161,1.222,162,3.874,163,1.222,164,1.222,165,1.448,166,1.615,167,1.105,168,2.527,169,2.527,170,0.369,171,2.617,172,0.831,173,4.034,174,2.527,175,0.791,176,0.831,177,2.527,178,2.527,179,1.959,180,2.527,181,2.527,182,1.959,183,2.527,184,2.527,185,1.959,186,1.959,187,2.527,188,2.527]],["title/injectables/CategoryRepository.html",[75,2.516,189,0.089]],["body/injectables/CategoryRepository.html",[12,0.016,31,2.918,43,0.123,44,0.123,45,0.108,52,0.253,54,0.395,75,3.107,98,0.123,99,0.035,100,0.01,101,0.01,106,0.093,107,0.449,108,0.996,118,1.581,121,0.278,123,0.641,124,0.641,125,0.267,126,0.604,127,1.334,128,0.604,136,0.748,148,1.725,170,0.484,172,0.484,175,0.838,176,0.931,189,0.109,190,0.508,191,2.87,192,2.295,193,1.803,194,2.293,195,2.175,196,3.32,197,2.559,198,4.098,199,5.764,200,3.32,201,2.511,202,3.32,203,1.803,204,0.846,205,3.32,206,2.293,207,3.32,208,1.803,209,3.32,210,1.452,211,2.175,212,3.107,213,3.32,214,1.902,215,0.79,216,3.32,217,3.32,218,3.32,219,3.32,220,3.32]],["title/injectables/CategoryService.html",[11,1.857,189,0.089]],["body/injectables/CategoryService.html",[11,2.388,12,0.016,43,0.131,44,0.131,45,0.114,52,0.207,54,0.418,75,3.234,98,0.131,99,0.037,100,0.01,101,0.01,106,0.098,107,0.467,108,1.005,118,1.646,121,0.283,123,0.655,124,0.655,125,0.273,126,0.617,127,1.742,128,0.617,133,2.519,134,3.038,136,0.698,148,2.076,170,0.72,171,1.615,172,0.513,175,0.86,176,0.72,189,0.114,190,0.538,192,2.354,193,1.877,201,2.541,203,1.877,204,0.858,208,1.337,212,4.055,221,3.038,222,3.514,223,3.514,224,4.936,225,1.903,226,3.514,227,3.234,228,3.514,229,3.514,230,3.514,231,3.514,232,2.303,233,3.514,234,3.514,235,3.514,236,4.936,237,3.514,238,3.514,239,3.514]],["title/classes/CreateCategoryDTO.html",[99,0.04,115,2.72]],["body/classes/CreateCategoryDTO.html",[12,0.016,43,0.196,44,0.196,45,0.172,52,0.27,98,0.196,99,0.067,100,0.013,101,0.013,106,0.148,115,4.571,116,2.101,121,0.221,125,0.221,131,1.975,159,2.008,161,3.12,240,2.426,241,4.092,242,2.69,243,3.201,244,3.025,245,4.564,246,3.12,247,3.12,248,2.426]],["title/injectables/CreateCategoryUseCase.html",[13,2.346,189,0.089]],["body/injectables/CreateCategoryUseCase.html",[11,3.568,12,0.016,13,3.693,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,127,1.339,128,0.45,129,1.04,164,3.214,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,215,1.132,225,1.87,249,2.906,250,1.565,251,3.116,252,3.116,253,4.283,254,3.116,255,3.116,256,4.756]],["title/classes/CreateOrderDTO.html",[99,0.04,257,2.516]],["body/classes/CreateOrderDTO.html",[12,0.016,43,0.152,44,0.152,45,0.133,52,0.23,98,0.152,99,0.064,100,0.011,101,0.011,106,0.114,116,2.46,121,0.259,125,0.277,131,1.678,136,0.461,159,1.557,161,3.192,204,0.819,225,1.543,240,1.881,242,2.286,243,1.881,246,3.669,247,2.989,248,1.881,257,3.591,258,2.682,259,3.335,260,5.342,261,4.79,262,3.539,263,4.093,264,4.093,265,4.093,266,4.093,267,3.54,268,3.781,269,2.345,270,2.519,271,2.345,272,2.345,273,2.209,274,2.345,275,2.089,276,2.089,277,1.791,278,2.345,279,2.345,280,2.209,281,2.209,282,2.345,283,2.209,284,2.345]],["title/injectables/CreateOrderUseCase.html",[14,2.346,189,0.089]],["body/injectables/CreateOrderUseCase.html",[12,0.016,14,3.655,29,3.063,43,0.174,44,0.174,45,0.152,52,0.276,54,0.557,89,2.15,98,0.174,99,0.049,100,0.012,101,0.012,106,0.131,107,0.566,108,0.871,121,0.251,123,0.601,124,0.601,125,0.251,126,0.566,127,1.317,128,0.443,129,1.023,164,3.19,170,0.683,172,0.683,175,0.65,176,0.683,189,0.138,190,0.716,215,1.114,225,1.856,250,1.549,253,4.238,285,3.315,286,2.525,287,4.045,288,4.679,289,2.525,290,3.627,291,4.679]],["title/injectables/CreatePaymentOrderUseCase.html",[15,2.346,189,0.089]],["body/injectables/CreatePaymentOrderUseCase.html",[12,0.016,15,3.226,29,2.905,30,4.085,39,3.277,43,0.144,44,0.144,45,0.126,52,0.27,54,0.461,81,3.67,98,0.144,99,0.04,100,0.011,101,0.011,106,0.108,107,0.5,108,0.794,121,0.221,123,0.531,124,0.531,125,0.221,126,0.5,128,0.367,129,0.847,136,0.437,164,2.906,170,0.771,171,2.761,172,0.877,175,0.734,176,0.877,189,0.122,190,0.593,204,0.715,250,1.367,259,2.091,261,3.002,285,2.744,286,2.091,289,2.091,292,3.873,293,2.426,294,3.873,295,3.348,296,2.366,297,4.657,298,3.348,299,3.348,300,3.873,301,3.348,302,4.564,303,2.366,304,3.226,305,3.873,306,3.873,307,3.348,308,4.564,309,3.348,310,3.002]],["title/classes/CreateProductDTO.html",[99,0.04,311,2.72]],["body/classes/CreateProductDTO.html",[12,0.016,43,0.15,44,0.15,45,0.131,52,0.228,98,0.15,99,0.056,100,0.011,101,0.011,106,0.113,116,2.726,121,0.287,125,0.287,131,2.009,159,1.535,161,3.411,204,0.781,240,1.855,242,2.264,243,2.82,244,3.111,246,3.411,247,2.968,248,1.855,267,3.111,268,3.515,269,2.313,271,2.313,272,3.111,273,2.931,274,3.111,275,2.77,276,2.77,277,2.375,278,3.111,279,2.313,280,3.312,281,3.312,282,2.313,283,3.312,284,3.515,311,3.847,312,3.129,313,2.645,314,4.036,315,4.036,316,4.036,317,2.645,318,2.645,319,4.036,320,2.645,321,3.489]],["title/injectables/CreateProductUseCase.html",[16,2.346,189,0.089]],["body/injectables/CreateProductUseCase.html",[12,0.016,16,3.662,32,3.556,43,0.175,44,0.175,45,0.153,52,0.277,54,0.559,98,0.175,99,0.049,100,0.012,101,0.012,106,0.131,107,0.567,108,0.873,121,0.251,123,0.603,124,0.603,125,0.251,126,0.567,127,1.321,128,0.444,129,1.027,164,3.194,170,0.685,172,0.685,175,0.652,189,0.138,190,0.719,215,1.117,225,1.859,250,1.552,253,4.247,270,2.157,322,2.868,323,3.076,324,4.058,325,4.058,326,3.076,327,3.326,328,4.694]],["title/classes/CreateUserDTO.html",[99,0.04,329,2.72]],["body/classes/CreateUserDTO.html",[12,0.016,43,0.149,44,0.149,45,0.131,52,0.227,98,0.149,99,0.056,100,0.011,101,0.011,106,0.112,116,2.721,121,0.287,125,0.287,131,2.156,159,1.527,161,3.406,204,0.779,240,1.844,242,2.256,243,2.812,244,3.099,246,3.406,247,2.959,248,1.844,267,3.099,268,3.505,269,2.3,271,2.3,272,3.099,273,2.92,274,3.099,275,2.76,276,2.76,277,2.366,278,3.099,279,2.3,280,3.302,281,3.302,282,2.3,283,3.302,284,3.505,313,2.63,317,2.63,318,2.63,320,2.63,329,3.832,330,3.111,331,4.014,332,4.014,333,4.014,334,3.47,335,4.014]],["title/injectables/CreateUserUseCase.html",[17,2.346,189,0.089]],["body/injectables/CreateUserUseCase.html",[12,0.016,17,3.701,39,3.393,43,0.177,44,0.177,45,0.155,52,0.254,54,0.568,98,0.177,99,0.05,100,0.012,101,0.012,106,0.133,107,0.573,108,0.88,121,0.254,123,0.609,124,0.609,125,0.254,126,0.573,127,1.343,128,0.452,129,1.044,164,3.219,170,0.696,172,0.696,175,0.663,189,0.14,190,0.731,215,1.136,225,1.873,250,1.568,253,4.292,296,2.915,336,2.915,337,3.127,338,3.127,339,3.127,340,4.772]],["title/injectables/DeleteCategoryUseCase.html",[18,2.346,189,0.089]],["body/injectables/DeleteCategoryUseCase.html",[11,3.568,12,0.016,18,3.693,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,128,0.45,129,1.04,136,0.536,165,3.807,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,204,0.791,215,1.132,249,2.906,250,1.565,251,3.116,252,3.116,254,3.116,255,3.116,293,2.778,341,4.756]],["title/injectables/DeleteProductUseCase.html",[19,2.346,189,0.089]],["body/injectables/DeleteProductUseCase.html",[12,0.016,19,3.693,32,3.568,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,128,0.45,129,1.04,136,0.536,165,3.807,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,204,0.791,215,1.132,250,1.565,293,2.778,322,2.906,323,3.116,326,3.116,342,3.687,343,3.687,344,4.756]],["title/injectables/DeleteUserUseCase.html",[20,2.346,189,0.089]],["body/injectables/DeleteUserUseCase.html",[12,0.016,20,3.693,39,3.39,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,128,0.45,129,1.04,136,0.536,165,3.807,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,204,0.791,215,1.132,250,1.565,293,2.778,296,2.906,336,2.906,337,3.116,338,3.116,339,3.116,345,4.756]],["title/injectables/GetAllCategoryUseCase.html",[21,2.346,189,0.089]],["body/injectables/GetAllCategoryUseCase.html",[11,3.596,12,0.016,21,3.764,43,0.182,44,0.182,45,0.159,52,0.258,54,0.584,98,0.182,99,0.051,100,0.013,101,0.013,106,0.137,107,0.583,108,0.891,121,0.258,123,0.493,124,0.493,125,0.205,126,0.464,128,0.464,129,1.072,166,2.81,170,0.715,172,0.715,175,0.681,176,0.715,189,0.142,190,0.751,215,1.167,249,2.995,250,1.83,251,3.212,252,3.212,254,3.212,255,3.212,346,4.902]],["title/injectables/GetAllProductUseCase.html",[22,2.346,189,0.089]],["body/injectables/GetAllProductUseCase.html",[12,0.016,22,3.764,32,3.596,43,0.182,44,0.182,45,0.159,52,0.258,54,0.584,98,0.182,99,0.051,100,0.013,101,0.013,106,0.137,107,0.583,108,0.891,121,0.258,123,0.493,124,0.493,125,0.205,126,0.464,128,0.464,129,1.072,166,2.81,170,0.715,172,0.715,175,0.681,176,0.715,189,0.142,190,0.751,215,1.167,250,1.83,322,2.995,323,3.212,326,3.212,342,3.8,343,3.8,347,4.902]],["title/injectables/GetAllUserUseCase.html",[23,2.346,189,0.089]],["body/injectables/GetAllUserUseCase.html",[12,0.016,23,3.764,39,3.417,43,0.182,44,0.182,45,0.159,52,0.258,54,0.584,98,0.182,99,0.051,100,0.013,101,0.013,106,0.137,107,0.583,108,0.891,121,0.258,123,0.493,124,0.493,125,0.205,126,0.464,128,0.464,129,1.072,166,2.81,170,0.715,172,0.715,175,0.681,176,0.715,189,0.142,190,0.751,215,1.167,250,1.83,296,2.995,336,2.995,337,3.212,338,3.212,339,3.212,348,4.902]],["title/injectables/GetCategoryUseCase.html",[24,2.346,189,0.089]],["body/injectables/GetCategoryUseCase.html",[11,3.568,12,0.016,24,3.693,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,128,0.45,129,1.04,136,0.536,166,2.771,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,204,0.791,215,1.132,249,2.906,250,1.565,251,3.116,252,3.116,254,3.116,255,3.116,293,2.778,349,4.756]],["title/injectables/GetPaymentOrderUseCase.html",[25,2.346,189,0.089]],["body/injectables/GetPaymentOrderUseCase.html",[12,0.016,25,3.323,29,2.943,30,4.132,43,0.151,44,0.151,45,0.132,52,0.258,54,0.482,81,4.187,89,2.5,98,0.151,99,0.042,100,0.011,101,0.011,106,0.113,107,0.515,108,0.812,121,0.228,123,0.547,124,0.547,125,0.228,126,0.515,128,0.383,129,0.885,136,0.456,166,2.562,170,0.794,171,2.5,172,0.794,175,0.756,176,0.794,189,0.126,190,0.62,204,0.731,250,1.408,285,2.868,286,2.185,287,3.499,289,2.185,293,2.5,295,3.499,297,4.763,298,3.499,299,3.499,301,3.499,302,4.702,303,2.473,307,3.499,308,4.702,309,3.499,310,3.137,350,4.047,351,4.047,352,4.047,353,2.652,354,4.047]],["title/injectables/GetProductUseCase.html",[26,2.346,189,0.089]],["body/injectables/GetProductUseCase.html",[12,0.016,26,3.693,32,3.568,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,128,0.45,129,1.04,136,0.536,166,2.771,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,204,0.791,215,1.132,250,1.565,293,2.778,322,2.906,323,3.116,326,3.116,342,3.687,343,3.687,355,4.756]],["title/injectables/GetQueueOrderUseCase.html",[27,2.346,189,0.089]],["body/injectables/GetQueueOrderUseCase.html",[12,0.016,27,3.764,29,3.1,43,0.182,44,0.182,45,0.159,52,0.258,54,0.584,98,0.182,99,0.051,100,0.013,101,0.013,106,0.137,107,0.583,108,0.891,121,0.258,123,0.493,124,0.493,125,0.205,126,0.464,128,0.464,129,1.072,166,2.81,170,0.715,172,0.715,175,0.681,176,0.715,189,0.142,190,0.751,215,1.167,250,1.83,286,2.646,289,2.646,356,4.237,357,4.902,358,4.902,359,4.902]],["title/injectables/GetUserUseCase.html",[28,2.346,189,0.089]],["body/injectables/GetUserUseCase.html",[12,0.016,28,3.693,39,3.39,43,0.177,44,0.177,45,0.155,52,0.253,54,0.566,98,0.177,99,0.049,100,0.012,101,0.012,106,0.133,107,0.572,108,0.878,121,0.253,123,0.608,124,0.608,125,0.253,126,0.572,128,0.45,129,1.04,136,0.536,166,2.771,170,0.694,172,0.694,175,0.661,176,0.694,189,0.14,190,0.728,204,0.791,215,1.132,250,1.565,293,2.778,296,2.906,336,2.906,337,3.116,338,3.116,339,3.116,360,4.756]],["title/interfaces/ICategory.html",[212,2.516,361,1.601]],["body/interfaces/ICategory.html",[12,0.016,43,0.156,44,0.156,45,0.137,52,0.176,98,0.156,100,0.011,101,0.011,106,0.117,107,0.528,118,1.859,121,0.291,123,0.67,124,0.67,125,0.28,126,0.631,128,0.657,136,0.706,148,2.029,192,2.536,193,2.121,194,2.697,198,4.821,199,5.38,201,2.631,203,2.121,204,0.891,206,2.697,208,2.121,210,1.838,212,3.654,225,2.008,361,1.752,362,2.267,363,3.632,364,4.201,365,4.201,366,4.201,367,4.201,368,4.201]],["title/interfaces/IOrder.html",[361,1.601,369,2.516]],["body/interfaces/IOrder.html",[12,0.016,43,0.148,44,0.148,45,0.129,52,0.167,90,1.829,98,0.148,100,0.011,101,0.011,106,0.111,107,0.509,118,1.793,121,0.294,123,0.685,124,0.685,125,0.286,126,0.645,128,0.665,131,1.865,136,0.687,148,1.957,192,2.482,193,2.046,194,2.602,201,2.648,203,2.046,204,0.881,206,2.602,208,2.046,210,1.741,225,1.977,361,1.66,362,2.148,369,3.524,370,3.441,371,4.169,372,4.65,373,3.98,374,4.164,375,3.98,376,4.169,377,3.98,378,3.98,379,3.98,380,3.98]],["title/interfaces/IPayment.html",[361,1.601,381,2.516]],["body/interfaces/IPayment.html",[12,0.016,43,0.156,44,0.156,45,0.137,52,0.176,98,0.156,100,0.011,101,0.011,106,0.117,107,0.528,118,1.859,121,0.291,123,0.67,124,0.67,125,0.28,126,0.631,128,0.657,136,0.706,148,2.029,192,2.536,193,2.121,194,2.697,201,2.631,203,2.121,204,0.891,206,2.697,208,2.121,210,1.838,225,2.008,353,4.548,361,1.752,362,2.267,381,3.654,382,3.632,383,4.821,384,4.201,385,4.201,386,4.201,387,4.201,388,4.201]],["title/interfaces/IPaymentProvider.html",[361,1.601,389,2.516]],["body/interfaces/IPaymentProvider.html",[12,0.016,43,0.181,44,0.181,45,0.158,98,0.181,100,0.013,101,0.013,106,0.136,107,0.581,118,2.24,121,0.257,123,0.617,124,0.617,125,0.257,126,0.581,128,0.581,131,2.057,136,0.549,201,2.455,204,0.916,304,4.104,361,2.03,362,2.628,389,4.02,390,4.209,391,4.209,392,4.759,393,4.868,394,4.347,395,5.303,396,4.868]],["title/interfaces/IProduct.html",[361,1.601,397,2.516]],["body/interfaces/IProduct.html",[12,0.016,43,0.156,44,0.156,45,0.137,52,0.176,98,0.156,100,0.011,101,0.011,106,0.117,107,0.528,118,1.859,121,0.291,123,0.67,124,0.67,125,0.28,126,0.631,128,0.657,136,0.706,148,2.029,192,2.536,193,2.121,194,2.697,201,2.631,203,2.121,204,0.891,206,2.697,208,2.121,210,1.838,225,2.008,361,1.752,362,2.267,374,3.824,397,3.654,398,3.632,399,4.821,400,4.201,401,3.951,402,4.201,403,4.201,404,4.201,405,4.201]],["title/interfaces/IUser.html",[361,1.601,406,2.516]],["body/interfaces/IUser.html",[12,0.016,43,0.156,44,0.156,45,0.137,52,0.176,98,0.156,100,0.011,101,0.011,106,0.117,107,0.528,118,1.859,121,0.291,123,0.67,124,0.67,125,0.28,126,0.631,128,0.657,136,0.706,148,2.029,192,2.536,193,2.121,194,2.697,201,2.631,203,2.121,204,0.891,206,2.697,208,2.121,210,1.838,225,2.008,361,1.752,362,2.267,374,3.824,406,3.654,407,3.632,408,4.821,409,4.201,410,4.323,411,4.201,412,4.201,413,4.201,414,4.201]],["title/injectables/MercadoPagoProvider.html",[84,2.72,189,0.089]],["body/injectables/MercadoPagoProvider.html",[12,0.016,43,0.125,44,0.125,45,0.109,52,0.233,54,0.4,84,3.387,98,0.125,99,0.035,100,0.01,101,0.01,106,0.094,107,0.452,108,0.88,118,1.856,119,3.387,121,0.269,123,0.481,124,0.481,125,0.2,126,0.452,128,0.527,131,1.704,136,0.379,175,0.664,176,0.698,189,0.11,190,0.514,201,2.111,204,0.849,214,1.924,242,1.993,277,2.091,297,2.603,303,2.052,304,3.915,389,3.132,391,2.903,392,4.719,394,3.387,395,4.132,415,2.903,416,6.661,417,5.566,418,5.924,419,5.758,420,3.358,421,3.358,422,3.358,423,3.358,424,4.132,425,4.78,426,4.78,427,4.78,428,4.78,429,3.358,430,3.358,431,3.358,432,3.358,433,3.358,434,3.358,435,3.358,436,3.358,437,3.358,438,3.358,439,3.358,440,3.358,441,3.358,442,4.78,443,3.358,444,4.78,445,4.78,446,4.78,447,4.78,448,4.78,449,4.78,450,3.358]],["title/controllers/OrderController.html",[48,2.72,102,1.857]],["body/controllers/OrderController.html",[12,0.016,14,2.339,15,2.339,25,2.339,27,2.339,34,2.339,35,2.339,36,2.339,37,2.194,43,0.069,44,0.069,45,0.06,47,1.127,48,2.138,52,0.269,54,0.22,68,1.43,81,1.843,82,3.31,83,1.594,89,1.76,90,1.76,91,1.594,92,1.594,93,1.594,98,0.069,99,0.019,100,0.006,101,0.006,102,0.892,104,1.307,106,0.052,107,0.286,108,0.956,116,2.297,121,0.242,123,0.556,124,0.657,125,0.294,126,0.523,127,1.475,128,0.546,129,1.262,131,2.274,135,1.307,136,0.34,151,1.977,152,1.307,153,1.977,154,1.208,155,1.307,156,4.231,157,3.918,159,0.701,160,1.307,161,0.892,163,0.892,164,1.459,166,1.258,167,1.935,170,0.269,171,2.652,172,0.842,173,4.088,175,0.802,176,0.842,225,1.078,257,2.899,259,1.629,277,2.902,353,1.977,374,3.844,394,5.128,451,1.594,452,1.844,453,3.017,454,3.017,455,3.017,456,3.017,457,3.017,458,4.424,459,3.017,460,3.829,461,1.844,462,1.844,463,2.608,464,2.608,465,1.844,466,1.844,467,1.844,468,3.825,469,2.339,470,1.844,471,1.844,472,1.844,473,4.424,474,3.825,475,1.844,476,1.844,477,1.844,478,1.844,479,1.844,480,1.844,481,1.844,482,1.844,483,3.017,484,2.138,485,4.061,486,3.829,487,1.844,488,1.844,489,2.608,490,2.608,491,1.844,492,1.844,493,1.844,494,3.017,495,2.608,496,1.844,497,1.844,498,1.844,499,2.608,500,2.608,501,1.844,502,1.594,503,1.307,504,1.594,505,3.017,506,1.208,507,1.844,508,1.844,509,1.844,510,1.844,511,1.844,512,1.844,513,1.844,514,1.844,515,1.844,516,1.844,517,1.844,518,1.844,519,1.844,520,1.844,521,1.43,522,1.844,523,1.844,524,1.844,525,1.594,526,1.844,527,1.844,528,1.844,529,1.844,530,1.844,531,1.844,532,1.844,533,1.844]],["title/injectables/OrderRepository.html",[73,2.516,189,0.089]],["body/injectables/OrderRepository.html",[12,0.016,31,2.798,43,0.113,44,0.113,45,0.099,52,0.27,54,0.361,73,2.91,89,1.394,90,2.041,98,0.113,99,0.032,100,0.009,101,0.009,106,0.085,107,0.42,108,1,118,1.481,121,0.279,123,0.647,124,0.647,125,0.27,126,0.609,127,1.25,128,0.609,136,0.725,148,1.616,170,0.443,172,0.443,175,0.856,176,0.939,189,0.103,190,0.464,192,2.2,193,1.689,194,2.148,195,1.987,197,2.397,201,2.522,203,1.689,204,0.828,206,2.148,208,1.689,210,1.327,211,1.987,214,1.738,215,0.722,290,2.351,369,2.91,371,3.443,372,3.839,374,4.47,376,3.443,534,2.622,535,3.033,536,3.033,537,3.033,538,5.255,539,3.033,540,3.033,541,3.033,542,3.033,543,3.033,544,3.033,545,3.033,546,3.033,547,4.441,548,3.033,549,3.033,550,3.033,551,3.033]],["title/injectables/OrderService.html",[29,1.601,189,0.089]],["body/injectables/OrderService.html",[12,0.016,29,1.955,43,0.121,44,0.121,45,0.106,52,0.23,54,0.389,73,3.071,89,2.154,90,1.501,98,0.121,99,0.034,100,0.01,101,0.01,106,0.091,107,0.444,108,1.01,118,1.563,121,0.285,123,0.663,124,0.663,125,0.277,126,0.625,127,1.686,128,0.625,131,1.678,133,2.392,136,0.675,148,1.994,170,0.684,171,1.501,172,0.477,175,0.881,176,0.684,189,0.108,190,0.5,192,2.278,193,1.783,201,2.559,203,1.783,204,0.843,208,1.243,225,1.858,227,3.071,232,2.141,290,2.532,369,3.924,371,3.633,376,3.633,552,2.824,553,3.267,554,3.267,555,4.687,556,3.267,557,3.267,558,3.267,559,3.267,560,3.267,561,3.267,562,3.267,563,3.267,564,3.267,565,3.267,566,4.687,567,3.267,568,3.267,569,3.267]],["title/injectables/PaymentRepository.html",[86,2.516,189,0.089]],["body/injectables/PaymentRepository.html",[12,0.016,31,2.918,43,0.123,44,0.123,45,0.108,52,0.253,54,0.395,86,3.107,98,0.123,99,0.035,100,0.01,101,0.01,106,0.093,107,0.449,108,0.996,118,1.581,121,0.278,123,0.641,124,0.641,125,0.267,126,0.604,127,1.334,128,0.604,136,0.748,148,1.725,170,0.484,172,0.484,175,0.838,176,0.931,189,0.109,190,0.508,192,2.295,193,1.803,194,2.293,195,2.175,197,2.559,201,2.511,203,1.803,204,0.846,206,2.293,208,1.803,210,1.452,211,2.175,214,1.902,215,0.79,353,4.872,381,3.107,383,4.098,570,2.87,571,3.32,572,3.32,573,3.32,574,3.32,575,3.32,576,3.32,577,3.32,578,3.32,579,3.32,580,3.32,581,3.32,582,3.32]],["title/injectables/PaymentService.html",[30,2.2,189,0.089]],["body/injectables/PaymentService.html",[12,0.016,30,2.487,43,0.109,44,0.109,45,0.096,52,0.216,54,0.35,81,1.796,86,2.844,97,4.461,98,0.109,99,0.031,100,0.009,101,0.009,106,0.082,107,0.411,108,1.008,118,1.447,121,0.283,123,0.662,124,0.662,125,0.276,126,0.623,127,1.604,128,0.623,129,0.95,131,1.58,133,2.215,136,0.685,148,1.877,170,0.634,171,1.995,172,0.634,175,0.884,176,0.832,189,0.1,190,0.45,192,2.167,193,1.651,201,2.442,203,1.651,204,0.896,208,1.118,225,1.791,227,2.844,232,1.926,304,3.481,381,3.734,389,3.734,392,4.037,394,2.083,583,2.541,584,4.341,585,4.341,586,2.94,587,2.94,588,4.341,589,2.94,590,4.341,591,2.94,592,2.94,593,2.94,594,2.94,595,4.341,596,2.94,597,2.94,598,2.94,599,2.94,600,2.94,601,2.94,602,2.94,603,2.94,604,2.94,605,4.341,606,2.94,607,2.94,608,2.94]],["title/injectables/PrismaHelper.html",[31,1.857,189,0.089]],["body/injectables/PrismaHelper.html",[12,0.016,31,3.079,43,0.192,44,0.192,45,0.168,52,0.267,54,0.615,98,0.192,99,0.054,100,0.013,101,0.013,106,0.144,107,0.602,108,0.912,121,0.217,128,0.489,176,0.754,189,0.147,190,0.791,210,2.26,214,2.96,419,6.511,609,4.465,610,6.365,611,5.965,612,5.165,613,5.165]],["title/classes/Product.html",[99,0.04,270,1.764]],["body/classes/Product.html",[12,0.016,43,0.137,44,0.137,45,0.12,52,0.214,98,0.137,99,0.061,100,0.01,101,0.01,106,0.103,116,2.734,121,0.288,125,0.295,131,1.936,136,0.661,159,1.405,161,3.405,204,0.838,225,1.04,240,1.698,242,2.131,243,2.693,244,2.929,246,3.567,247,2.835,248,1.698,257,2.421,258,2.421,259,1.994,260,3.194,261,2.864,267,3.358,268,3.624,269,2.117,270,2.693,271,2.117,272,2.929,273,2.759,274,2.929,275,2.608,276,2.608,277,2.236,278,2.929,279,2.117,280,3.163,281,3.163,282,2.117,283,3.163,284,3.358,313,3.349,317,2.421,318,2.421,320,2.421,614,3.194,615,3.194,616,3.194,617,3.194,618,3.194,619,3.194]],["title/classes/Product-1.html",[99,0.033,270,1.471,303,1.956]],["body/classes/Product-1.html",[12,0.016,43,0.139,44,0.139,45,0.121,52,0.216,98,0.139,99,0.061,100,0.011,101,0.011,106,0.104,116,2.742,121,0.289,125,0.296,126,0.487,131,1.945,136,0.664,159,1.42,163,3.415,204,0.82,225,1.051,240,1.715,242,2.147,243,2.708,244,2.95,246,3.479,247,2.85,248,1.715,258,2.446,259,2.015,267,2.95,268,3.64,269,2.139,270,2.708,271,2.139,272,2.95,273,2.779,274,2.95,275,2.627,276,2.627,277,2.252,278,2.95,279,2.139,280,3.181,281,3.181,282,2.139,283,3.181,284,3.376,313,3.373,317,2.446,318,2.446,320,2.446,506,2.446,614,3.227,615,3.227,616,3.227,617,3.227,618,3.227,619,3.227]],["title/controllers/ProductController.html",[49,2.72,102,1.857]],["body/controllers/ProductController.html",[12,0.016,16,2.813,19,2.813,22,2.813,26,2.813,37,2.159,43,0.091,44,0.091,45,0.079,47,1.489,49,2.669,52,0.274,54,0.29,68,4.342,98,0.091,99,0.025,100,0.008,101,0.008,102,1.179,104,1.727,106,0.068,107,0.357,108,0.945,116,2.229,117,2.107,121,0.235,123,0.521,124,0.621,125,0.29,126,0.49,127,1.667,128,0.53,129,1.225,131,2.167,132,2.107,133,1.244,135,3.263,136,0.813,139,2.107,143,2.107,147,2.107,151,2.469,152,1.727,153,2.469,154,1.597,155,1.727,156,4.195,157,3.671,158,3.57,159,0.927,160,1.727,161,1.179,163,1.179,164,1.179,165,1.397,166,1.571,167,1.066,170,0.356,171,2.574,172,0.817,173,3.968,175,0.778,176,0.817,179,1.889,182,1.889,185,1.889,186,1.889,259,2.033,277,2.79,311,4.195,401,4.374,463,3.257,464,3.257,468,4.478,469,4.59,499,3.257,502,2.107,503,3.263,504,2.107,620,2.107,621,2.437,622,3.767,623,3.767,624,5.181,625,3.767,626,3.767,627,2.437,628,2.437,629,2.437,630,2.437,631,3.767,632,2.437,633,3.257,634,2.437,635,2.437,636,2.437,637,2.437,638,4.195,639,2.437,640,2.437,641,3.767,642,2.437,643,2.437,644,2.437,645,2.437,646,2.437,647,2.437,648,2.437,649,2.437,650,2.437,651,2.437,652,2.437,653,2.437]],["title/injectables/ProductRepository.html",[71,2.516,189,0.089]],["body/injectables/ProductRepository.html",[12,0.016,31,2.918,43,0.123,44,0.123,45,0.108,52,0.253,54,0.395,71,3.107,98,0.123,99,0.035,100,0.01,101,0.01,106,0.093,107,0.449,108,0.996,118,1.581,121,0.278,123,0.641,124,0.641,125,0.267,126,0.604,127,1.334,128,0.604,136,0.748,148,1.725,170,0.484,172,0.484,175,0.838,176,0.931,189,0.109,190,0.508,192,2.295,193,1.803,194,2.293,195,2.175,197,2.559,201,2.511,203,1.803,204,0.846,206,2.293,208,1.803,210,1.452,211,2.175,214,1.902,215,0.79,397,3.107,399,4.098,401,5.268,654,2.87,655,3.32,656,3.32,657,3.32,658,3.32,659,3.32,660,3.32,661,3.32,662,3.32,663,3.32,664,3.32,665,3.32,666,3.32]],["title/injectables/ProductService.html",[32,1.857,189,0.089]],["body/injectables/ProductService.html",[12,0.016,32,2.367,43,0.129,44,0.129,45,0.113,52,0.238,54,0.413,71,3.207,98,0.129,99,0.036,100,0.01,101,0.01,106,0.097,107,0.463,108,1.003,118,1.632,121,0.282,123,0.652,124,0.652,125,0.272,126,0.614,127,1.733,128,0.614,133,2.497,136,0.694,148,2.062,170,0.714,171,1.595,172,0.507,175,0.855,176,0.714,189,0.113,190,0.532,192,2.341,193,1.862,201,2.535,203,1.862,204,0.855,208,1.32,225,1.895,227,3.207,232,2.275,270,2.249,327,2.46,397,4.033,667,3.001,668,3.472,669,3.472,670,4.894,671,3.472,672,3.472,673,3.472,674,3.472,675,3.472,676,3.472,677,3.472,678,3.472,679,4.894,680,3.472,681,3.472,682,3.472]],["title/classes/UpdateCategoryDTO.html",[99,0.04,146,2.72]],["body/classes/UpdateCategoryDTO.html",[12,0.016,43,0.196,44,0.196,45,0.172,52,0.27,98,0.196,99,0.067,100,0.013,101,0.013,106,0.148,116,2.101,121,0.221,125,0.221,131,1.975,146,4.571,159,2.008,163,3.12,240,2.426,241,4.092,242,2.69,243,3.201,244,3.025,245,4.564,246,3.12,247,3.12,248,2.426]],["title/injectables/UpdateCategoryUseCase.html",[33,2.346,189,0.089]],["body/injectables/UpdateCategoryUseCase.html",[11,3.538,12,0.016,33,3.617,43,0.171,44,0.171,45,0.15,52,0.248,54,0.548,98,0.171,99,0.048,100,0.012,101,0.012,106,0.129,107,0.56,108,0.865,121,0.248,123,0.595,124,0.595,125,0.29,126,0.56,127,1.842,128,0.436,129,1.007,136,0.667,167,2.863,170,0.672,172,0.672,175,0.64,176,0.672,189,0.137,190,0.705,204,0.548,215,1.096,225,1.296,249,2.813,250,1.694,251,3.017,252,3.017,254,3.017,255,3.017,683,3.262,684,4.195,685,4.604]],["title/classes/UpdateOrderProductsDTO.html",[99,0.04,506,2.516]],["body/classes/UpdateOrderProductsDTO.html",[12,0.016,43,0.165,44,0.165,45,0.144,52,0.242,98,0.165,99,0.067,100,0.012,101,0.012,106,0.124,116,1.765,121,0.186,125,0.242,131,1.769,136,0.5,159,1.686,163,2.795,204,0.765,225,1.626,240,2.038,242,2.409,243,2.038,246,3.617,247,3.109,248,2.038,258,2.905,259,3.469,262,3.833,267,3.311,268,3.902,269,2.54,270,2.655,271,2.54,272,2.54,273,2.393,274,2.54,275,2.262,276,2.262,277,1.939,278,2.54,279,2.54,280,2.393,281,2.393,282,2.54,283,2.393,284,2.54,506,3.786,686,4.434]],["title/injectables/UpdateOrderProductsUseCase.html",[189,0.089,687,2.976]],["body/injectables/UpdateOrderProductsUseCase.html",[12,0.016,29,3.033,43,0.167,44,0.167,45,0.146,52,0.271,54,0.536,89,2.976,98,0.167,99,0.047,100,0.012,101,0.012,106,0.126,107,0.552,108,0.856,121,0.245,123,0.587,124,0.587,125,0.287,126,0.552,127,1.823,128,0.426,129,0.985,136,0.658,167,2.833,170,0.657,172,0.657,175,0.626,176,0.657,189,0.135,190,0.689,204,0.536,215,1.072,250,1.676,270,2.069,286,2.431,289,2.431,327,3.19,683,3.19,684,4.135,687,4.524,688,3.893,689,4.503,690,4.503,691,4.503,692,3.19]],["title/injectables/UpdateOrderStatusDeliveredUseCase.html",[34,2.346,189,0.089]],["body/injectables/UpdateOrderStatusDeliveredUseCase.html",[12,0.016,29,3.05,34,3.617,43,0.171,44,0.171,45,0.15,52,0.248,54,0.548,89,3.007,90,3.175,98,0.171,99,0.048,100,0.012,101,0.012,106,0.129,107,0.56,108,0.865,121,0.248,123,0.595,124,0.595,125,0.248,126,0.56,128,0.436,129,1.007,136,0.519,167,2.863,170,0.672,172,0.672,175,0.64,176,0.672,189,0.137,190,0.705,204,0.779,215,1.096,250,1.533,286,2.485,289,2.485,293,2.721,692,3.262,693,3.98,694,4.604,695,4.604,696,4.604]],["title/injectables/UpdateOrderStatusPreparationUseCase.html",[35,2.346,189,0.089]],["body/injectables/UpdateOrderStatusPreparationUseCase.html",[12,0.016,29,3.05,35,3.617,43,0.171,44,0.171,45,0.15,52,0.248,54,0.548,89,3.007,90,3.175,98,0.171,99,0.048,100,0.012,101,0.012,106,0.129,107,0.56,108,0.865,121,0.248,123,0.595,124,0.595,125,0.248,126,0.56,128,0.436,129,1.007,136,0.519,167,2.863,170,0.672,172,0.672,175,0.64,176,0.672,189,0.137,190,0.705,204,0.779,215,1.096,250,1.533,286,2.485,289,2.485,293,2.721,692,3.262,697,3.98,698,4.604,699,4.604,700,4.604]],["title/injectables/UpdateOrderStatusReadyUseCase.html",[36,2.346,189,0.089]],["body/injectables/UpdateOrderStatusReadyUseCase.html",[12,0.016,29,3.05,36,3.617,43,0.171,44,0.171,45,0.15,52,0.248,54,0.548,89,3.007,90,3.175,98,0.171,99,0.048,100,0.012,101,0.012,106,0.129,107,0.56,108,0.865,121,0.248,123,0.595,124,0.595,125,0.248,126,0.56,128,0.436,129,1.007,136,0.519,167,2.863,170,0.672,172,0.672,175,0.64,176,0.672,189,0.137,190,0.705,204,0.779,215,1.096,250,1.533,286,2.485,289,2.485,293,2.721,521,3.569,692,3.262,701,3.98,702,4.604,703,4.604]],["title/classes/UpdateProductDTO.html",[99,0.04,638,2.72]],["body/classes/UpdateProductDTO.html",[12,0.016,43,0.143,44,0.143,45,0.125,52,0.221,98,0.143,99,0.055,100,0.011,101,0.011,106,0.108,116,2.769,121,0.292,125,0.292,131,1.971,136,0.675,159,1.465,163,3.444,204,0.828,240,1.77,242,2.194,243,2.753,244,3.014,246,3.444,247,2.898,248,1.77,267,3.014,268,3.688,269,2.207,271,2.207,272,3.014,273,2.84,274,3.014,275,2.684,276,2.684,277,2.301,278,3.014,279,2.207,280,3.234,281,3.234,282,2.207,283,3.234,284,3.432,312,2.986,313,2.524,317,2.524,318,2.524,320,2.524,321,3.33,638,3.727,704,3.852,705,3.852,706,3.852,707,3.852,708,3.852,709,3.852,710,5.261]],["title/injectables/UpdateProductsUseCase.html",[37,2.2,189,0.089]],["body/injectables/UpdateProductsUseCase.html",[12,0.016,32,3.523,37,3.358,43,0.168,44,0.168,45,0.147,52,0.272,54,0.539,98,0.168,99,0.047,100,0.012,101,0.012,106,0.127,107,0.555,108,0.858,121,0.246,123,0.589,124,0.589,125,0.288,126,0.555,127,1.828,128,0.429,129,0.991,136,0.661,167,2.841,170,0.661,172,0.661,175,0.63,176,0.661,189,0.135,190,0.694,204,0.539,215,1.079,225,1.275,250,1.681,270,2.082,322,2.768,323,2.969,324,3.917,325,3.917,326,2.969,327,3.211,683,3.211,684,4.152,711,4.531]],["title/classes/UpdateUserDTO.html",[99,0.04,712,2.72]],["body/classes/UpdateUserDTO.html",[12,0.016,43,0.136,44,0.136,45,0.119,52,0.245,98,0.136,99,0.061,100,0.01,101,0.01,106,0.102,116,2.323,121,0.245,125,0.245,131,2.151,159,1.394,163,3.049,240,1.685,242,2.12,243,3.229,246,3.049,247,2.459,248,2.336,273,3.792,275,2.594,276,2.594,304,4.292,330,2.842,334,3.169,484,5.074,712,3.602,713,6.073,714,5.837,715,7.162,716,5.311,717,5.922,718,6.851,719,3.666,720,5.084,721,3.666,722,3.666,723,3.666,724,4.395,725,3.666,726,3.666,727,5.084,728,3.169,729,5.084,730,6.303,731,5.837,732,5.084]],["title/injectables/UpdateUserUseCase.html",[38,2.346,189,0.089]],["body/injectables/UpdateUserUseCase.html",[12,0.016,38,3.617,39,3.362,43,0.171,44,0.171,45,0.15,52,0.248,54,0.548,98,0.171,99,0.048,100,0.012,101,0.012,106,0.129,107,0.56,108,0.865,121,0.248,123,0.595,124,0.595,125,0.29,126,0.56,127,1.842,128,0.436,129,1.007,136,0.667,167,2.863,170,0.672,172,0.672,175,0.64,176,0.672,189,0.137,190,0.705,204,0.548,215,1.096,225,1.296,250,1.694,296,2.813,336,2.813,337,3.017,338,3.017,339,3.017,683,3.262,684,4.195,733,4.604]],["title/controllers/UserController.html",[50,2.72,102,1.857]],["body/controllers/UserController.html",[12,0.016,17,2.475,20,2.475,23,2.475,28,2.475,38,2.475,43,0.074,44,0.074,45,0.065,47,1.224,50,2.286,52,0.258,54,0.238,64,4.403,90,2.825,98,0.074,99,0.021,100,0.007,101,0.007,102,0.969,104,1.419,106,0.056,107,0.305,108,0.906,116,2.028,121,0.214,123,0.467,124,0.575,125,0.276,126,0.44,127,1.532,128,0.482,129,1.114,131,1.882,133,1.022,135,2.871,136,0.781,151,2.114,152,1.419,153,2.114,154,1.313,155,1.419,156,3.857,157,3.292,158,3.141,159,0.762,161,0.969,163,0.969,164,0.969,165,1.148,166,1.346,167,0.876,170,0.292,171,2.341,172,0.743,173,3.609,175,0.708,176,0.743,179,1.553,182,1.553,185,1.553,186,1.553,204,0.482,277,2.605,329,3.609,484,1.419,485,2.501,503,2.286,633,2.79,712,3.609,716,3.601,734,1.732,735,2.003,736,3.227,737,3.227,738,4.646,739,3.227,740,3.227,741,2.003,742,5.094,743,2.79,744,2.003,745,2.003,746,3.227,747,6.103,748,6.151,749,3.227,750,5.455,751,4.646,752,4.646,753,5.094,754,2.003,755,2.003,756,2.003,757,3.227,758,4.706,759,3.227,760,3.227,761,3.227,762,4.646,763,2.003,764,2.003,765,4.646,766,2.003,767,5.444,768,3.227,769,4.052,770,3.227,771,2.003,772,2.003,773,2.003,774,3.227,775,2.003,776,2.003,777,2.003,778,2.79,779,2.003,780,2.003,781,3.227,782,2.003,783,2.003,784,6.311,785,3.227,786,2.003,787,2.003,788,2.003,789,2.003,790,2.003,791,1.732,792,4.403,793,3.227,794,2.003,795,2.003,796,2.003,797,3.227,798,2.003,799,2.003,800,2.003,801,2.003,802,2.003,803,2.003]],["title/injectables/UserRepository.html",[69,2.516,189,0.089]],["body/injectables/UserRepository.html",[12,0.016,31,2.918,43,0.123,44,0.123,45,0.108,52,0.253,54,0.395,69,3.107,98,0.123,99,0.035,100,0.01,101,0.01,106,0.093,107,0.449,108,0.996,118,1.581,121,0.278,123,0.641,124,0.641,125,0.267,126,0.604,127,1.334,128,0.604,136,0.748,148,1.725,170,0.484,172,0.484,175,0.838,176,0.931,189,0.109,190,0.508,192,2.295,193,1.803,194,2.293,195,2.175,197,2.559,201,2.511,203,1.803,204,0.846,206,2.293,208,1.803,210,1.452,211,2.175,214,1.902,215,0.79,406,3.107,408,4.098,410,5.764,804,2.87,805,3.32,806,3.32,807,3.32,808,3.32,809,3.32,810,3.32,811,3.32,812,3.32,813,3.32,814,3.32,815,3.32,816,3.32]],["title/injectables/UserService.html",[39,1.764,189,0.089]],["body/injectables/UserService.html",[12,0.016,39,2.268,43,0.131,44,0.131,45,0.114,52,0.207,54,0.418,69,3.234,98,0.131,99,0.037,100,0.01,101,0.01,106,0.098,107,0.467,108,1.005,118,1.646,121,0.283,123,0.655,124,0.655,125,0.273,126,0.617,127,1.742,128,0.617,133,2.519,136,0.698,148,2.076,170,0.72,171,1.615,172,0.513,175,0.86,176,0.72,189,0.114,190,0.538,192,2.354,193,1.877,201,2.541,203,1.877,204,0.858,208,1.337,225,1.903,227,3.234,232,2.303,406,4.055,817,3.038,818,3.514,819,3.514,820,4.936,821,3.514,822,3.514,823,3.514,824,3.514,825,3.514,826,3.514,827,3.514,828,3.514,829,3.514,830,4.936,831,3.514,832,3.514,833,3.514]],["title/coverage.html",[834,4.537]],["body/coverage.html",[6,1.617,11,1.104,12,0.016,13,1.395,14,1.395,15,1.395,16,1.395,17,1.395,18,1.395,19,1.395,20,1.395,21,1.395,22,1.395,23,1.395,24,1.395,25,1.395,26,1.395,27,1.395,28,1.395,29,0.952,30,1.308,31,1.104,32,1.104,33,1.395,34,1.395,35,1.395,36,1.395,37,1.308,38,1.395,39,1.049,45,0.074,48,1.617,49,1.617,50,1.617,51,1.617,69,1.496,71,1.496,73,1.496,75,1.496,81,2.187,84,1.617,86,1.496,89,2.298,90,2.03,99,0.068,100,0.007,101,0.007,102,2.419,103,1.973,115,1.617,119,1.617,125,0.096,146,1.617,161,2.627,163,2.627,164,2.627,165,2.53,166,2.602,167,2.636,189,0.178,191,1.973,197,1.232,212,1.496,221,1.973,241,2.775,249,3.319,257,1.496,258,3.277,270,1.645,285,3.129,310,6.149,311,1.617,312,2.775,322,3.319,329,1.617,330,2.775,336,3.319,356,1.973,361,2.403,363,1.973,369,1.496,370,1.973,381,1.496,382,1.973,389,1.496,390,1.973,397,1.496,398,1.973,406,1.496,407,1.973,415,1.973,451,1.973,506,1.496,534,1.973,552,1.973,570,1.973,583,1.973,609,1.973,620,1.973,638,1.617,654,1.973,667,1.973,687,1.77,688,1.973,693,1.973,697,1.973,701,1.973,712,1.617,734,1.973,804,1.973,817,1.973,834,1.973,835,2.283,836,2.283,837,2.283,838,2.775,839,3.58,840,1.973,841,4.416,842,2.283,843,6.564,844,3.58,845,5.001,846,6.691,847,3.58,848,3.58,849,7.472,850,1.973,851,2.283,852,2.283]],["title/dependencies.html",[3,3.273,853,2.768]],["body/dependencies.html",[3,3.558,12,0.016,54,0.598,56,4.341,99,0.071,100,0.013,101,0.013,159,1.91,197,2.71,210,2.196,248,2.874,418,4.341,728,4.341,854,6.813,855,5.021,856,5.021,857,5.021,858,6.255,859,5.021,860,5.021,861,5.021,862,5.021,863,5.021,864,5.021,865,5.021,866,5.021,867,5.021,868,5.021,869,5.021,870,5.021,871,5.021,872,5.021,873,5.021,874,5.021,875,5.021,876,5.021]],["title/miscellaneous/functions.html",[877,2.269,878,3.994]],["body/miscellaneous/functions.html",[6,5.169,12,0.014,100,0.014,101,0.014,106,0.164,838,4.56,840,6.307,850,5.086,877,4.168,878,5.086,879,5.883,880,5.086]],["title/index.html",[106,0.09,881,3.202,882,3.202]],["body/index.html",[12,0.014,90,0.679,100,0.005,101,0.005,102,0.714,131,1.834,133,0.754,136,0.368,151,2.826,153,2.523,154,2.826,160,1.047,199,2.985,204,0.389,243,1.982,250,0.382,259,2.078,275,0.754,276,3.182,277,2.774,280,1.353,281,1.353,283,1.353,303,1.996,304,0.902,353,0.968,362,0.797,374,3.349,401,2.728,410,1.145,469,1.145,474,3.728,484,4.621,485,5.715,489,3.329,490,4.739,495,2.168,500,5.05,503,4.139,521,1.944,525,2.168,713,2.824,716,3.634,717,4.052,724,3.728,743,2.824,748,2.824,750,4.052,758,4.052,778,1.277,791,4.052,792,1.277,883,2.508,884,1.477,885,1.477,886,1.477,887,1.477,888,1.477,889,1.477,890,1.477,891,1.477,892,1.477,893,1.477,894,1.477,895,1.477,896,1.477,897,1.477,898,1.477,899,1.477,900,1.477,901,1.477,902,4.313,903,1.477,904,1.477,905,2.508,906,2.508,907,3.851,908,1.477,909,5.674,910,3.267,911,1.477,912,1.477,913,3.267,914,1.477,915,1.477,916,1.477,917,6.672,918,3.851,919,4.998,920,3.267,921,1.477,922,2.508,923,4.313,924,1.477,925,1.477,926,2.508,927,1.477,928,3.267,929,1.477,930,1.477,931,1.477,932,1.477,933,1.477,934,1.477,935,1.477,936,1.477,937,1.477,938,1.477,939,2.508,940,1.477,941,1.477,942,1.477,943,1.477,944,2.508,945,1.477,946,1.477,947,1.477,948,2.508,949,1.477,950,1.477,951,2.508,952,1.477,953,2.508,954,1.477,955,3.267,956,3.267,957,3.267,958,1.477,959,1.477,960,1.477,961,2.508,962,1.477,963,1.477,964,1.477,965,1.477,966,2.508,967,1.477,968,1.477,969,6.6,970,1.477,971,1.477,972,2.508,973,1.477,974,1.477,975,1.477,976,1.477,977,1.477,978,2.508,979,1.477,980,1.477,981,1.477,982,1.477,983,1.477,984,1.477,985,1.477,986,1.477,987,1.477,988,1.477,989,1.477,990,1.477,991,1.477,992,1.477,993,1.477,994,1.477,995,1.477,996,1.477,997,1.477,998,1.477,999,1.477,1000,1.477,1001,1.477,1002,3.267,1003,2.508,1004,1.477,1005,2.508,1006,2.508,1007,3.267,1008,1.477,1009,1.477,1010,1.477,1011,1.477,1012,4.998,1013,1.477,1014,1.477,1015,1.477,1016,2.508,1017,1.477,1018,1.477,1019,1.477,1020,1.477,1021,1.477,1022,1.477,1023,4.313,1024,2.508,1025,2.508,1026,1.477,1027,1.477,1028,1.477,1029,1.477,1030,1.477,1031,1.477,1032,1.477,1033,1.477,1034,3.267,1035,1.477,1036,1.477,1037,2.508,1038,1.477,1039,1.477,1040,1.477,1041,1.477,1042,1.477,1043,1.477,1044,4.998,1045,4.998,1046,1.477,1047,1.477,1048,1.477,1049,1.477,1050,1.477,1051,1.477,1052,1.477,1053,1.477,1054,1.477,1055,1.477,1056,1.477,1057,1.477,1058,1.477,1059,1.477,1060,1.477,1061,1.477,1062,1.477,1063,1.477,1064,2.508,1065,1.477,1066,3.267,1067,1.477,1068,1.477,1069,1.477,1070,1.477,1071,1.477,1072,1.477,1073,1.477,1074,1.477,1075,1.477,1076,3.267,1077,1.477,1078,1.477,1079,1.477,1080,1.477,1081,1.477,1082,1.477,1083,1.477,1084,1.477,1085,1.477,1086,1.477,1087,3.267,1088,1.477,1089,1.477,1090,1.477,1091,1.477,1092,1.477,1093,1.477,1094,1.477,1095,1.477,1096,1.477,1097,1.477,1098,1.477,1099,1.477,1100,1.477,1101,1.477,1102,1.477,1103,1.477,1104,3.267,1105,1.477,1106,3.267,1107,1.477,1108,2.508,1109,4.687,1110,1.477,1111,3.267,1112,3.267,1113,1.477,1114,2.508,1115,1.477,1116,1.477,1117,1.477,1118,1.477,1119,1.477,1120,1.477,1121,1.477,1122,2.508,1123,1.477,1124,2.508,1125,1.477,1126,1.477,1127,2.508,1128,1.477,1129,1.477,1130,1.477,1131,1.477,1132,2.508,1133,1.477,1134,1.477,1135,1.477,1136,1.477,1137,1.477,1138,1.477,1139,2.508,1140,2.508,1141,1.477,1142,2.508,1143,2.508,1144,1.477,1145,1.477,1146,2.508,1147,1.477,1148,1.477,1149,1.477,1150,1.477,1151,1.477,1152,1.477,1153,1.477,1154,1.477,1155,1.477,1156,1.477,1157,2.508,1158,1.477,1159,1.477,1160,1.477,1161,1.477,1162,1.477,1163,1.477,1164,1.477,1165,1.477,1166,1.477,1167,1.477,1168,1.477,1169,1.477,1170,1.477,1171,1.477,1172,2.508,1173,1.477,1174,1.477,1175,1.477,1176,1.477,1177,1.477,1178,2.508,1179,1.477,1180,1.477,1181,1.477,1182,1.477,1183,1.477,1184,1.477,1185,1.477,1186,1.477,1187,2.508,1188,1.477,1189,1.477,1190,1.477,1191,1.477,1192,1.477]],["title/modules.html",[2,4.068]],["body/modules.html",[1,4.291,2,4.695,12,0.014,100,0.014,101,0.014,1193,6.056,1194,6.056,1195,6.056,1196,6.056]],["title/overview.html",[1197,4.537]],["body/overview.html",[0,3.724,1,5.731,3,2.396,4,2.924,5,2.924,6,2.396,7,2.924,8,2.924,9,2.924,10,2.924,11,2.703,12,0.016,13,3.414,14,3.414,15,3.414,16,3.414,17,3.414,18,3.414,19,3.414,20,3.414,21,3.414,22,3.414,23,3.414,24,3.414,25,3.414,26,3.414,27,3.414,28,3.414,29,2.33,30,3.202,31,2.703,32,2.703,33,3.414,34,3.414,35,3.414,36,3.414,37,3.202,38,3.414,39,2.568,40,4.153,41,2.924,42,2.924,47,2.066,100,0.01,101,0.01,190,0.518,240,1.554,303,2.066,362,1.825,1197,2.924,1198,3.382,1199,3.382,1200,3.382,1201,3.382]],["title/properties.html",[242,1.927,853,2.768]],["body/properties.html",[12,0.016,100,0.014,101,0.014,242,2.474,747,5.128,1202,5.931,1203,5.931,1204,5.931,1205,5.931,1206,5.931]],["title/miscellaneous/variables.html",[877,2.269,1207,3.994]],["body/miscellaneous/variables.html",[12,0.015,100,0.014,101,0.014,106,0.165,119,4.185,197,3.724,392,4.185,424,5.107,611,5.107,838,4.579,877,4.185,880,5.107,1207,5.107]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":310,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1203,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":303,"title":{"classes/Product-1.html":{}},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"index.html":{},"overview.html":{}}}],["1.5.17",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1200,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":767,"title":{},"body":{"controllers/UserController.html":{}}}],["201",{"_index":746,"title":{},"body":{"controllers/UserController.html":{}}}],["204",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["3000",{"_index":1147,"title":{},"body":{"index.html":{}}}],["35",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["400",{"_index":752,"title":{},"body":{"controllers/UserController.html":{}}}],["404",{"_index":762,"title":{},"body":{"controllers/UserController.html":{}}}],["5.2.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":1160,"title":{},"body":{"index.html":{}}}],["6",{"_index":1201,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["7.1.10",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["acabar",{"_index":982,"title":{},"body":{"index.html":{}}}],["access_token",{"_index":417,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["accumulator",{"_index":309,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["acessada",{"_index":1156,"title":{},"body":{"index.html":{}}}],["acima",{"_index":1168,"title":{},"body":{"index.html":{}}}],["acompanhado",{"_index":935,"title":{},"body":{"index.html":{}}}],["adapters",{"_index":1070,"title":{},"body":{"index.html":{}}}],["adapters/controllers/category.controller",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/controllers/order.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/controllers/product.controller",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/controllers/user.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/database/helpers/prisma.helper",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/database/repositories/category.repository",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/database/repositories/order.repository",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/database/repositories/payment.repository",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/database/repositories/product.repository",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/database/repositories/user.repository",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["adapters/providers/mercadopago.provider",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["adequada",{"_index":979,"title":{},"body":{"index.html":{}}}],["adicionar",{"_index":1095,"title":{},"body":{"index.html":{}}}],["all_products",{"_index":299,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["all_products.reduce((accumulator",{"_index":307,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["altere",{"_index":1131,"title":{},"body":{"index.html":{}}}],["alunos",{"_index":888,"title":{},"body":{"index.html":{}}}],["além",{"_index":1149,"title":{},"body":{"index.html":{}}}],["ambiente",{"_index":1108,"title":{},"body":{"index.html":{}}}],["anotar",{"_index":940,"title":{},"body":{"index.html":{}}}],["aos",{"_index":922,"title":{},"body":{"index.html":{}}}],["apenas",{"_index":1034,"title":{},"body":{"index.html":{}}}],["api",{"_index":1066,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":158,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":156,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":742,"title":{},"body":{"controllers/UserController.html":{}}}],["apiparam",{"_index":157,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":246,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["apiproperty({type",{"_index":262,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/UpdateOrderProductsDTO.html":{}}}],["apiresponse",{"_index":784,"title":{},"body":{"controllers/UserController.html":{}}}],["apis",{"_index":1025,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":155,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags('categoria",{"_index":168,"title":{},"body":{"controllers/CategoryController.html":{}}}],["apitags('pedido",{"_index":507,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('produto",{"_index":642,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('usuário",{"_index":786,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":1012,"title":{},"body":{"index.html":{}}}],["app_interceptor",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["application/services/category.service",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["application/services/order.service",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["application/services/payment.service",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["application/services/product.service",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["application/services/user.service",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["application/usecases/create",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["application/usecases/delete",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["application/usecases/get",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["application/usecases/update",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apresentados",{"_index":1020,"title":{},"body":{"index.html":{}}}],["arquitetura",{"_index":1023,"title":{},"body":{"index.html":{}}}],["arquivo",{"_index":1132,"title":{},"body":{"index.html":{}}}],["async",{"_index":108,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["atendente",{"_index":939,"title":{},"body":{"index.html":{}}}],["atendentes",{"_index":952,"title":{},"body":{"index.html":{}}}],["atender",{"_index":972,"title":{},"body":{"index.html":{}}}],["atendimento",{"_index":921,"title":{},"body":{"index.html":{}}}],["atores",{"_index":1076,"title":{},"body":{"index.html":{}}}],["atrasos",{"_index":954,"title":{},"body":{"index.html":{}}}],["atualiza",{"_index":499,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["atualizado",{"_index":781,"title":{},"body":{"controllers/UserController.html":{}}}],["atualizar",{"_index":778,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["aulas",{"_index":1022,"title":{},"body":{"index.html":{}}}],["author",{"_index":1206,"title":{},"body":{"properties.html":{}}}],["autoatendimento",{"_index":991,"title":{},"body":{"index.html":{}}}],["await",{"_index":176,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":1014,"title":{},"body":{"index.html":{}}}],["bairro",{"_index":908,"title":{},"body":{"index.html":{}}}],["banco",{"_index":1044,"title":{},"body":{"index.html":{}}}],["base",{"_index":1174,"title":{},"body":{"index.html":{}}}],["batatas",{"_index":936,"title":{},"body":{"index.html":{}}}],["bebida",{"_index":938,"title":{},"body":{"index.html":{}}}],["body",{"_index":151,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brazilian",{"_index":728,"title":{},"body":{"classes/UpdateUserDTO.html":{},"dependencies.html":{}}}],["browse",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1142,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":1031,"title":{},"body":{"index.html":{}}}],["cadastro",{"_index":1026,"title":{},"body":{"index.html":{}}}],["camada",{"_index":1092,"title":{},"body":{"index.html":{}}}],["campo",{"_index":715,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["campos",{"_index":1136,"title":{},"body":{"index.html":{}}}],["caso",{"_index":1115,"title":{},"body":{"index.html":{}}}],["catch",{"_index":444,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["categoria",{"_index":199,"title":{},"body":{"injectables/CategoryRepository.html":{},"interfaces/ICategory.html":{},"index.html":{}}}],["categoria_id",{"_index":284,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["categories",{"_index":140,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category",{"_index":134,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["category'})@apibody({type",{"_index":120,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category.dto",{"_index":162,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category.dto.ts",{"_index":241,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/UpdateCategoryDTO.html":{},"coverage.html":{}}}],["category.dto.ts:7",{"_index":245,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/UpdateCategoryDTO.html":{}}}],["category.usecase",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{}}}],["category.usecase.ts",{"_index":249,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{},"coverage.html":{}}}],["category.usecase.ts:5",{"_index":252,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{}}}],["category.usecase.ts:8",{"_index":254,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{}}}],["categorycontroller",{"_index":51,"title":{"controllers/CategoryController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"coverage.html":{}}}],["categoryrepository",{"_index":75,"title":{"injectables/CategoryRepository.html":{}},"body":{"modules/AppModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["categoryservice",{"_index":11,"title":{"injectables/CategoryService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["caótico",{"_index":924,"title":{},"body":{"index.html":{}}}],["certifique",{"_index":1161,"title":{},"body":{"index.html":{}}}],["certo",{"_index":984,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":884,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":1033,"title":{},"body":{"index.html":{}}}],["class",{"_index":99,"title":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":240,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["cliente",{"_index":928,"title":{},"body":{"index.html":{}}}],["clientes",{"_index":923,"title":{},"body":{"index.html":{}}}],["clonado",{"_index":1130,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1123,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["com",{"_index":750,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["comando",{"_index":1139,"title":{},"body":{"index.html":{}}}],["como",{"_index":474,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["complexo",{"_index":930,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1140,"title":{},"body":{"index.html":{}}}],["composto",{"_index":994,"title":{},"body":{"index.html":{}}}],["compression",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["computador",{"_index":1125,"title":{},"body":{"index.html":{}}}],["condutor",{"_index":1081,"title":{},"body":{"index.html":{}}}],["condutores",{"_index":1075,"title":{},"body":{"index.html":{}}}],["conduzidos",{"_index":1086,"title":{},"body":{"index.html":{}}}],["configurado",{"_index":1053,"title":{},"body":{"index.html":{}}}],["confuso",{"_index":925,"title":{},"body":{"index.html":{}}}],["confusão",{"_index":950,"title":{},"body":{"index.html":{}}}],["conhecido",{"_index":1088,"title":{},"body":{"index.html":{}}}],["const",{"_index":297,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/MercadoPagoProvider.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["constructor(categoryrepository",{"_index":222,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(categoryservice",{"_index":251,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{}}}],["constructor(orderrepository",{"_index":553,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(orderservice",{"_index":286,"title":{},"body":{"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{}}}],["constructor(paymentrepository",{"_index":586,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(prisma",{"_index":195,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{}}}],["constructor(private",{"_index":215,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/ProductRepository.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UserRepository.html":{}}}],["constructor(productrepository",{"_index":668,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(productservice",{"_index":323,"title":{},"body":{"injectables/CreateProductUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/UpdateProductsUseCase.html":{}}}],["constructor(userrepository",{"_index":818,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":337,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["controle",{"_index":920,"title":{},"body":{"index.html":{}}}],["controller",{"_index":102,"title":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{},"index.html":{}}}],["controller('v1/category",{"_index":169,"title":{},"body":{"controllers/CategoryController.html":{}}}],["controller('v1/order",{"_index":508,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('v1/product",{"_index":643,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('v1/user",{"_index":787,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["corpo",{"_index":790,"title":{},"body":{"controllers/UserController.html":{}}}],["corretamente",{"_index":948,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":834,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cozinha",{"_index":944,"title":{},"body":{"index.html":{}}}],["cpf",{"_index":713,"title":{},"body":{"classes/UpdateUserDTO.html":{},"index.html":{}}}],["create",{"_index":118,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["create(categoria",{"_index":198,"title":{},"body":{"injectables/CategoryRepository.html":{},"interfaces/ICategory.html":{}}}],["create(category",{"_index":224,"title":{},"body":{"injectables/CategoryService.html":{}}}],["create(order",{"_index":555,"title":{},"body":{"injectables/OrderService.html":{}}}],["create(order_id",{"_index":391,"title":{},"body":{"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{}}}],["create(pagamento",{"_index":383,"title":{},"body":{"interfaces/IPayment.html":{},"injectables/PaymentRepository.html":{}}}],["create(payment",{"_index":588,"title":{},"body":{"injectables/PaymentService.html":{}}}],["create(pedido",{"_index":372,"title":{},"body":{"interfaces/IOrder.html":{},"injectables/OrderRepository.html":{}}}],["create(product",{"_index":670,"title":{},"body":{"injectables/ProductService.html":{}}}],["create(produto",{"_index":399,"title":{},"body":{"interfaces/IProduct.html":{},"injectables/ProductRepository.html":{}}}],["create(user",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["create(usuario",{"_index":408,"title":{},"body":{"interfaces/IUser.html":{},"injectables/UserRepository.html":{}}}],["createcategory",{"_index":109,"title":{},"body":{"controllers/CategoryController.html":{}}}],["createcategory(@body",{"_index":174,"title":{},"body":{"controllers/CategoryController.html":{}}}],["createcategory(data",{"_index":114,"title":{},"body":{"controllers/CategoryController.html":{}}}],["createcategorydto",{"_index":115,"title":{"classes/CreateCategoryDTO.html":{}},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDTO.html":{},"coverage.html":{}}}],["createcategoryusecase",{"_index":13,"title":{"injectables/CreateCategoryUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CreateCategoryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["createorder",{"_index":453,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorder(@body",{"_index":509,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorder(data",{"_index":461,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorderdto",{"_index":257,"title":{"classes/CreateOrderDTO.html":{}},"body":{"classes/CreateOrderDTO.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"coverage.html":{}}}],["createorderusecase",{"_index":14,"title":{"injectables/CreateOrderUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreateOrderUseCase.html":{},"controllers/OrderController.html":{},"coverage.html":{},"overview.html":{}}}],["createpayment",{"_index":584,"title":{},"body":{"injectables/PaymentService.html":{}}}],["createpayment(order_id",{"_index":590,"title":{},"body":{"injectables/PaymentService.html":{}}}],["createpaymentorderusecase",{"_index":15,"title":{"injectables/CreatePaymentOrderUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"controllers/OrderController.html":{},"coverage.html":{},"overview.html":{}}}],["createproduct",{"_index":622,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(@body",{"_index":645,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(data",{"_index":627,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproductdto",{"_index":311,"title":{"classes/CreateProductDTO.html":{}},"body":{"classes/CreateProductDTO.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["createproductusecase",{"_index":16,"title":{"injectables/CreateProductUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreateProductUseCase.html":{},"controllers/ProductController.html":{},"coverage.html":{},"overview.html":{}}}],["createuser",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":794,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(data",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":329,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createuserdto})@apiresponse({status",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserusecase",{"_index":17,"title":{"injectables/CreateUserUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreateUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["cria",{"_index":463,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["criado",{"_index":749,"title":{},"body":{"controllers/UserController.html":{}}}],["criar",{"_index":743,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["currentvalue",{"_index":308,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["da",{"_index":791,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["dados",{"_index":1045,"title":{},"body":{"index.html":{}}}],["dando",{"_index":983,"title":{},"body":{"index.html":{}}}],["data",{"_index":127,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["db",{"_index":1152,"title":{},"body":{"index.html":{}}}],["ddd",{"_index":1006,"title":{},"body":{"index.html":{}}}],["de",{"_index":485,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["decimal",{"_index":545,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoradores",{"_index":504,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["decorators",{"_index":116,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{}}}],["default",{"_index":424,"title":{},"body":{"injectables/MercadoPagoProvider.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":121,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["definidos",{"_index":1078,"title":{},"body":{"index.html":{}}}],["deletar",{"_index":1181,"title":{},"body":{"index.html":{}}}],["delete",{"_index":133,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["delete(':id",{"_index":186,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":132,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["delete(id",{"_index":227,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["deletecategory",{"_index":110,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletecategory(@param('id",{"_index":187,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletecategory(id",{"_index":130,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletecategoryusecase",{"_index":18,"title":{"injectables/DeleteCategoryUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/DeleteCategoryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["deleteproduct",{"_index":623,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(@param('id",{"_index":652,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":630,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproductusecase",{"_index":19,"title":{"injectables/DeleteProductUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/DeleteProductUseCase.html":{},"controllers/ProductController.html":{},"coverage.html":{},"overview.html":{}}}],["deleteuser",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(@param('id",{"_index":802,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":756,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuserusecase",{"_index":20,"title":{"injectables/DeleteUserUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["delivered.usecase",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{}}}],["delivered.usecase.ts",{"_index":693,"title":{},"body":{"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"coverage.html":{}}}],["delivered.usecase.ts:5",{"_index":694,"title":{},"body":{"injectables/UpdateOrderStatusDeliveredUseCase.html":{}}}],["delivered.usecase.ts:8",{"_index":695,"title":{},"body":{"injectables/UpdateOrderStatusDeliveredUseCase.html":{}}}],["dentro",{"_index":1137,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desativar",{"_index":1169,"title":{},"body":{"index.html":{}}}],["descricao",{"_index":281,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"index.html":{}}}],["description",{"_index":747,"title":{},"body":{"controllers/UserController.html":{},"properties.html":{}}}],["desenvolvido",{"_index":1017,"title":{},"body":{"index.html":{}}}],["desenvolvimento",{"_index":1122,"title":{},"body":{"index.html":{}}}],["design",{"_index":1102,"title":{},"body":{"index.html":{}}}],["dessa",{"_index":1065,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1150,"title":{},"body":{"index.html":{}}}],["deve",{"_index":275,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"index.html":{}}}],["dever",{"_index":1016,"title":{},"body":{"index.html":{}}}],["deveremos",{"_index":1049,"title":{},"body":{"index.html":{}}}],["devido",{"_index":912,"title":{},"body":{"index.html":{}}}],["diretório",{"_index":1126,"title":{},"body":{"index.html":{}}}],["dispositivos",{"_index":996,"title":{},"body":{"index.html":{}}}],["dividida",{"_index":1072,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1109,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1052,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":1005,"title":{},"body":{"index.html":{}}}],["domain",{"_index":1100,"title":{},"body":{"index.html":{}}}],["domínio",{"_index":1096,"title":{},"body":{"index.html":{}}}],["dos",{"_index":902,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1171,"title":{},"body":{"index.html":{}}}],["driven",{"_index":1101,"title":{},"body":{"index.html":{}}}],["duas",{"_index":1073,"title":{},"body":{"index.html":{}}}],["e",{"_index":917,"title":{},"body":{"index.html":{}}}],["editar",{"_index":1029,"title":{},"body":{"index.html":{}}}],["eficiente",{"_index":974,"title":{},"body":{"index.html":{}}}],["ele",{"_index":980,"title":{},"body":{"index.html":{}}}],["em",{"_index":500,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["em_preparo",{"_index":700,"title":{},"body":{"injectables/UpdateOrderStatusPreparationUseCase.html":{}}}],["email",{"_index":304,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/PaymentService.html":{},"classes/UpdateUserDTO.html":{},"index.html":{}}}],["encontrado",{"_index":797,"title":{},"body":{"controllers/UserController.html":{}}}],["encontrado'})@delete(':id",{"_index":763,"title":{},"body":{"controllers/UserController.html":{}}}],["encontrado'})@get(':id",{"_index":775,"title":{},"body":{"controllers/UserController.html":{}}}],["endpoints",{"_index":1172,"title":{},"body":{"index.html":{}}}],["entre",{"_index":951,"title":{},"body":{"index.html":{}}}],["entreg",{"_index":942,"title":{},"body":{"index.html":{}}}],["entrega",{"_index":956,"title":{},"body":{"index.html":{}}}],["entregue",{"_index":525,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["entregue'})@apiparam({name",{"_index":475,"title":{},"body":{"controllers/OrderController.html":{}}}],["entregue/:pedido_id",{"_index":1188,"title":{},"body":{"index.html":{}}}],["enums",{"_index":543,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["env",{"_index":1134,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":1133,"title":{},"body":{"index.html":{}}}],["enviar",{"_index":1035,"title":{},"body":{"index.html":{}}}],["erro",{"_index":448,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["error",{"_index":445,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["escalável",{"_index":1038,"title":{},"body":{"index.html":{}}}],["escolha",{"_index":1047,"title":{},"body":{"index.html":{}}}],["escolhidos",{"_index":1036,"title":{},"body":{"index.html":{}}}],["especifique",{"_index":788,"title":{},"body":{"controllers/UserController.html":{}}}],["específicos",{"_index":934,"title":{},"body":{"index.html":{}}}],["esquecidos",{"_index":962,"title":{},"body":{"index.html":{}}}],["esquema",{"_index":1099,"title":{},"body":{"index.html":{}}}],["essa",{"_index":1071,"title":{},"body":{"index.html":{}}}],["essencial",{"_index":968,"title":{},"body":{"index.html":{}}}],["est",{"_index":910,"title":{},"body":{"index.html":{}}}],["esta",{"_index":1154,"title":{},"body":{"index.html":{}}}],["estar",{"_index":718,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["este",{"_index":1106,"title":{},"body":{"index.html":{}}}],["estoques",{"_index":977,"title":{},"body":{"index.html":{}}}],["etapaspedido",{"_index":1190,"title":{},"body":{"index.html":{}}}],["exclui",{"_index":631,"title":{},"body":{"controllers/ProductController.html":{}}}],["excluir",{"_index":757,"title":{},"body":{"controllers/UserController.html":{}}}],["excluído",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["execut",{"_index":1054,"title":{},"body":{"index.html":{}}}],["executado",{"_index":1107,"title":{},"body":{"index.html":{}}}],["executar",{"_index":1064,"title":{},"body":{"index.html":{}}}],["execute",{"_index":250,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"index.html":{}}}],["execute(data",{"_index":253,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{}}}],["execute(id",{"_index":293,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{}}}],["execute(undefined",{"_index":683,"title":{},"body":{"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["exemplo",{"_index":926,"title":{},"body":{"index.html":{}}}],["exemplos",{"_index":1097,"title":{},"body":{"index.html":{}}}],["existam",{"_index":1163,"title":{},"body":{"index.html":{}}}],["expandindo",{"_index":911,"title":{},"body":{"index.html":{}}}],["expandir",{"_index":981,"title":{},"body":{"index.html":{}}}],["expansão",{"_index":916,"title":{},"body":{"index.html":{}}}],["expor",{"_index":1145,"title":{},"body":{"index.html":{}}}],["export",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["expõe",{"_index":1173,"title":{},"body":{"index.html":{}}}],["extends",{"_index":610,"title":{},"body":{"injectables/PrismaHelper.html":{}}}],["externas",{"_index":1098,"title":{},"body":{"index.html":{}}}],["fake",{"_index":1032,"title":{},"body":{"index.html":{}}}],["fase",{"_index":1004,"title":{},"body":{"index.html":{}}}],["fast",{"_index":992,"title":{},"body":{"index.html":{}}}],["fazer",{"_index":999,"title":{},"body":{"index.html":{}}}],["faça",{"_index":929,"title":{},"body":{"index.html":{}}}],["fiap",{"_index":887,"title":{},"body":{"index.html":{}}}],["fila",{"_index":489,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["file",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":192,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbystatus",{"_index":371,"title":{},"body":{"interfaces/IOrder.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["findbystatus(status",{"_index":376,"title":{},"body":{"interfaces/IOrder.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["findone",{"_index":193,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findone(id",{"_index":203,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["fluxos",{"_index":1010,"title":{},"body":{"index.html":{}}}],["foi",{"_index":1129,"title":{},"body":{"index.html":{}}}],["food",{"_index":993,"title":{},"body":{"index.html":{}}}],["force_decimal",{"_index":271,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["forma",{"_index":978,"title":{},"body":{"index.html":{}}}],["franco",{"_index":900,"title":{},"body":{"index.html":{}}}],["fritas",{"_index":937,"title":{},"body":{"index.html":{}}}],["funcionalidades",{"_index":1003,"title":{},"body":{"index.html":{}}}],["function",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":878,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["garantia",{"_index":946,"title":{},"body":{"index.html":{}}}],["garantir",{"_index":970,"title":{},"body":{"index.html":{}}}],["gerenciando",{"_index":975,"title":{},"body":{"index.html":{}}}],["get('')@apioperation({summary",{"_index":139,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["get(':id",{"_index":179,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":143,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["get(':order_id",{"_index":511,"title":{},"body":{"controllers/OrderController.html":{}}}],["get(':order_id')@apioperation({summary",{"_index":467,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('queue",{"_index":532,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('queue')@apioperation({summary",{"_index":488,"title":{},"body":{"controllers/OrderController.html":{}}}],["get(id",{"_index":395,"title":{},"body":{"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{}}}],["getallcategory",{"_index":111,"title":{},"body":{"controllers/CategoryController.html":{}}}],["getallcategoryusecase",{"_index":21,"title":{"injectables/GetAllCategoryUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/GetAllCategoryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["getallproduct",{"_index":624,"title":{},"body":{"controllers/ProductController.html":{}}}],["getallproductusecase",{"_index":22,"title":{"injectables/GetAllProductUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetAllProductUseCase.html":{},"controllers/ProductController.html":{},"coverage.html":{},"overview.html":{}}}],["getalluser",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["getalluserusecase",{"_index":23,"title":{"injectables/GetAllUserUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetAllUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["getcategory",{"_index":112,"title":{},"body":{"controllers/CategoryController.html":{}}}],["getcategory(@param('id",{"_index":180,"title":{},"body":{"controllers/CategoryController.html":{}}}],["getcategory(id",{"_index":142,"title":{},"body":{"controllers/CategoryController.html":{}}}],["getcategoryusecase",{"_index":24,"title":{"injectables/GetCategoryUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/GetCategoryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["getorder",{"_index":454,"title":{},"body":{"controllers/OrderController.html":{}}}],["getorder(@param('order_id",{"_index":512,"title":{},"body":{"controllers/OrderController.html":{}}}],["getorder(order_id",{"_index":466,"title":{},"body":{"controllers/OrderController.html":{}}}],["getpayment",{"_index":585,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpayment(id",{"_index":595,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getpaymentorderusecase",{"_index":25,"title":{"injectables/GetPaymentOrderUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetPaymentOrderUseCase.html":{},"controllers/OrderController.html":{},"coverage.html":{},"overview.html":{}}}],["getproduct",{"_index":625,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproduct(@param('id",{"_index":648,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproduct(id",{"_index":635,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductusecase",{"_index":26,"title":{"injectables/GetProductUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProductUseCase.html":{},"controllers/ProductController.html":{},"coverage.html":{},"overview.html":{}}}],["getqueueorderusecase",{"_index":27,"title":{"injectables/GetQueueOrderUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetQueueOrderUseCase.html":{},"controllers/OrderController.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":881,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(@param('id",{"_index":798,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(id",{"_index":773,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserusecase",{"_index":28,"title":{"injectables/GetUserUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["gituhb",{"_index":1105,"title":{},"body":{"index.html":{}}}],["grande",{"_index":914,"title":{},"body":{"index.html":{}}}],["grandes",{"_index":1039,"title":{},"body":{"index.html":{}}}],["gustavo",{"_index":898,"title":{},"body":{"index.html":{}}}],["h",{"_index":906,"title":{},"body":{"index.html":{}}}],["hambúrguer",{"_index":931,"title":{},"body":{"index.html":{}}}],["haver",{"_index":949,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["helpers/prisma.helper",{"_index":211,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{}}}],["henrique",{"_index":890,"title":{},"body":{"index.html":{}}}],["hexagonal",{"_index":1024,"title":{},"body":{"index.html":{}}}],["horários",{"_index":1042,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":1158,"title":{},"body":{"index.html":{}}}],["icategory",{"_index":212,"title":{"interfaces/ICategory.html":{}},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"coverage.html":{}}}],["id",{"_index":136,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"index.html":{}}}],["id'})@apiparam({name",{"_index":135,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["identificar",{"_index":1178,"title":{},"body":{"index.html":{}}}],["identificação",{"_index":1027,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["imagine",{"_index":927,"title":{},"body":{"index.html":{}}}],["impactando",{"_index":986,"title":{},"body":{"index.html":{}}}],["implements",{"_index":214,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/PrismaHelper.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{}}}],["import",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["importante",{"_index":1153,"title":{},"body":{"index.html":{}}}],["importe",{"_index":502,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":106,"title":{"index.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inesperado",{"_index":449,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["info",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["infraestrutura",{"_index":1061,"title":{},"body":{"index.html":{}}}],["infrasctructure",{"_index":1093,"title":{},"body":{"index.html":{}}}],["ingredientes",{"_index":933,"title":{},"body":{"index.html":{}}}],["inicia",{"_index":494,"title":{},"body":{"controllers/OrderController.html":{}}}],["inicialmente",{"_index":1048,"title":{},"body":{"index.html":{}}}],["iniciam",{"_index":1079,"title":{},"body":{"index.html":{}}}],["iniciar",{"_index":1185,"title":{},"body":{"index.html":{}}}],["inject",{"_index":232,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["inject('categoryrepository",{"_index":234,"title":{},"body":{"injectables/CategoryService.html":{}}}],["inject('orderrepository",{"_index":563,"title":{},"body":{"injectables/OrderService.html":{}}}],["inject('paymentprovider",{"_index":601,"title":{},"body":{"injectables/PaymentService.html":{}}}],["inject('paymentrepository",{"_index":600,"title":{},"body":{"injectables/PaymentService.html":{}}}],["inject('productrepository",{"_index":677,"title":{},"body":{"injectables/ProductService.html":{}}}],["inject('userrepository",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":189,"title":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":190,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1083,"title":{},"body":{"index.html":{}}}],["insatisfação",{"_index":964,"title":{},"body":{"index.html":{}}}],["insatisfeitos",{"_index":985,"title":{},"body":{"index.html":{}}}],["instalado",{"_index":1117,"title":{},"body":{"index.html":{}}}],["instalação",{"_index":1112,"title":{},"body":{"index.html":{}}}],["installments",{"_index":439,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["instruções",{"_index":1119,"title":{},"body":{"index.html":{}}}],["instância",{"_index":1062,"title":{},"body":{"index.html":{}}}],["instâncias",{"_index":1063,"title":{},"body":{"index.html":{}}}],["integer",{"_index":137,"title":{},"body":{"controllers/CategoryController.html":{}}}],["integer'})@apibody({type",{"_index":149,"title":{},"body":{"controllers/CategoryController.html":{}}}],["interagir",{"_index":1001,"title":{},"body":{"index.html":{}}}],["interação",{"_index":1080,"title":{},"body":{"index.html":{}}}],["interface",{"_index":361,"title":{"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":362,"title":{},"body":{"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"index.html":{},"overview.html":{}}}],["interfaces/category.repository.interface",{"_index":233,"title":{},"body":{"injectables/CategoryService.html":{}}}],["interfaces/order.repository.interface",{"_index":562,"title":{},"body":{"injectables/OrderService.html":{}}}],["interfaces/payment.provider.interface",{"_index":599,"title":{},"body":{"injectables/PaymentService.html":{}}}],["interfaces/payment.repository.interface",{"_index":598,"title":{},"body":{"injectables/PaymentService.html":{}}}],["interfaces/product.repository.interface",{"_index":676,"title":{},"body":{"injectables/ProductService.html":{}}}],["interfaces/user.repository.interface",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception",{"_index":431,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["internalservererrorexception('ocorreu",{"_index":447,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["interpretados",{"_index":960,"title":{},"body":{"index.html":{}}}],["investir",{"_index":990,"title":{},"body":{"index.html":{}}}],["inválida",{"_index":793,"title":{},"body":{"controllers/UserController.html":{}}}],["inválida'})@post",{"_index":754,"title":{},"body":{"controllers/UserController.html":{}}}],["inválida'})@put(':id",{"_index":782,"title":{},"body":{"controllers/UserController.html":{}}}],["inválido",{"_index":732,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["inválido'})@apiproperty",{"_index":720,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["iorder",{"_index":369,"title":{"interfaces/IOrder.html":{}},"body":{"interfaces/IOrder.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["ipayment",{"_index":381,"title":{"interfaces/IPayment.html":{}},"body":{"interfaces/IPayment.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["ipaymentprovider",{"_index":389,"title":{"interfaces/IPaymentProvider.html":{}},"body":{"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["iproduct",{"_index":397,"title":{"interfaces/IProduct.html":{}},"body":{"interfaces/IProduct.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["ir",{"_index":989,"title":{},"body":{"index.html":{}}}],["iscpf",{"_index":727,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["isdecimal",{"_index":267,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["isdecimal()@apiproperty",{"_index":264,"title":{},"body":{"classes/CreateOrderDTO.html":{}}}],["isdecimal({force_decimal",{"_index":317,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateProductDTO.html":{}}}],["isemail",{"_index":729,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["isint",{"_index":268,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["isint()@apiproperty",{"_index":313,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateProductDTO.html":{}}}],["isint()@apiproperty()@isoptional",{"_index":705,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["isint()@min(0)@apiproperty",{"_index":320,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateProductDTO.html":{}}}],["isnotempty",{"_index":730,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["isnotempty({message",{"_index":714,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["isoptional",{"_index":710,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["isstring",{"_index":247,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["isstring()@apiproperty",{"_index":244,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["item",{"_index":1192,"title":{},"body":{"index.html":{}}}],["iuser",{"_index":406,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jorge",{"_index":899,"title":{},"body":{"index.html":{}}}],["la",{"_index":1055,"title":{},"body":{"index.html":{}}}],["lanchonete",{"_index":907,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["levando",{"_index":963,"title":{},"body":{"index.html":{}}}],["license",{"_index":1204,"title":{},"body":{"properties.html":{}}}],["limitação",{"_index":1060,"title":{},"body":{"index.html":{}}}],["linguagem",{"_index":1008,"title":{},"body":{"index.html":{}}}],["lista",{"_index":768,"title":{},"body":{"controllers/UserController.html":{}}}],["listar",{"_index":1037,"title":{},"body":{"index.html":{}}}],["literal",{"_index":684,"title":{},"body":{"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["lo",{"_index":943,"title":{},"body":{"index.html":{}}}],["local",{"_index":1127,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":1148,"title":{},"body":{"index.html":{}}}],["localhost:3000",{"_index":1176,"title":{},"body":{"index.html":{}}}],["main",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mal",{"_index":959,"title":{},"body":{"index.html":{}}}],["maneira",{"_index":973,"title":{},"body":{"index.html":{}}}],["manual",{"_index":1114,"title":{},"body":{"index.html":{}}}],["marca",{"_index":473,"title":{},"body":{"controllers/OrderController.html":{}}}],["marcar",{"_index":1187,"title":{},"body":{"index.html":{}}}],["marins",{"_index":891,"title":{},"body":{"index.html":{}}}],["markasdeliveredorder",{"_index":455,"title":{},"body":{"controllers/OrderController.html":{}}}],["markasdeliveredorder(@param('order_id",{"_index":526,"title":{},"body":{"controllers/OrderController.html":{}}}],["markasdeliveredorder(order_id",{"_index":471,"title":{},"body":{"controllers/OrderController.html":{}}}],["markasreadyorder",{"_index":456,"title":{},"body":{"controllers/OrderController.html":{}}}],["markasreadyorder(@param('order_id",{"_index":522,"title":{},"body":{"controllers/OrderController.html":{}}}],["markasreadyorder(order_id",{"_index":477,"title":{},"body":{"controllers/OrderController.html":{}}}],["mas",{"_index":945,"title":{},"body":{"index.html":{}}}],["matching",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mercadopago",{"_index":418,"title":{},"body":{"injectables/MercadoPagoProvider.html":{},"dependencies.html":{}}}],["mercadopago.payment.create(payment_data",{"_index":443,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["mercadopago.payment.get(id",{"_index":450,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["mercadopagoprovider",{"_index":84,"title":{"injectables/MercadoPagoProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/MercadoPagoProvider.html":{},"coverage.html":{}}}],["message",{"_index":273,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["metadata",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":107,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["min",{"_index":269,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["min(0",{"_index":282,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["miro",{"_index":1103,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":877,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["monolito",{"_index":1015,"title":{},"body":{"index.html":{}}}],["motivo",{"_index":1110,"title":{},"body":{"index.html":{}}}],["na",{"_index":955,"title":{},"body":{"index.html":{}}}],["name",{"_index":124,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["nas",{"_index":1021,"title":{},"body":{"index.html":{}}}],["necessária",{"_index":1111,"title":{},"body":{"index.html":{}}}],["negativa",{"_index":987,"title":{},"body":{"index.html":{}}}],["negócios",{"_index":966,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":159,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":119,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/MercadoPagoProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nome",{"_index":243,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"index.html":{}}}],["nomecategoria",{"_index":1180,"title":{},"body":{"index.html":{}}}],["nos",{"_index":1041,"title":{},"body":{"index.html":{}}}],["notification_url",{"_index":440,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["novo",{"_index":464,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["number",{"_index":204,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"index.html":{}}}],["number'})@apibody({type",{"_index":779,"title":{},"body":{"controllers/UserController.html":{}}}],["number'})@apiresponse({status",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["number(id",{"_index":185,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["number(order_id",{"_index":531,"title":{},"body":{"controllers/OrderController.html":{}}}],["number(product.preco",{"_index":301,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["não",{"_index":716,"title":{},"body":{"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["número",{"_index":278,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["o",{"_index":484,"title":{},"body":{"controllers/OrderController.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["obter",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["obtém",{"_index":468,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["ocupando",{"_index":1166,"title":{},"body":{"index.html":{}}}],["oficial",{"_index":1121,"title":{},"body":{"index.html":{}}}],["onde",{"_index":1128,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":419,"title":{},"body":{"injectables/MercadoPagoProvider.html":{},"injectables/PrismaHelper.html":{}}}],["operacional",{"_index":1120,"title":{},"body":{"index.html":{}}}],["optional",{"_index":126,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["order",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"coverage.html":{}}}],["order.dto",{"_index":505,"title":{},"body":{"controllers/OrderController.html":{}}}],["order.dto.ts",{"_index":258,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"coverage.html":{}}}],["order.dto.ts:11",{"_index":617,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["order.dto.ts:18",{"_index":618,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["order.dto.ts:22",{"_index":615,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["order.dto.ts:27",{"_index":619,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["order.dto.ts:31",{"_index":614,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["order.dto.ts:36",{"_index":686,"title":{},"body":{"classes/UpdateOrderProductsDTO.html":{}}}],["order.dto.ts:37",{"_index":265,"title":{},"body":{"classes/CreateOrderDTO.html":{}}}],["order.dto.ts:40",{"_index":266,"title":{},"body":{"classes/CreateOrderDTO.html":{}}}],["order.dto.ts:43",{"_index":263,"title":{},"body":{"classes/CreateOrderDTO.html":{}}}],["order.dto.ts:7",{"_index":616,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["order.produtos.flatmap(product",{"_index":351,"title":{},"body":{"injectables/GetPaymentOrderUseCase.html":{}}}],["order.steps",{"_index":538,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["order.usecase",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{}}}],["order.usecase.ts",{"_index":285,"title":{},"body":{"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"coverage.html":{}}}],["order.usecase.ts:12",{"_index":350,"title":{},"body":{"injectables/GetPaymentOrderUseCase.html":{}}}],["order.usecase.ts:14",{"_index":294,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{}}}],["order.usecase.ts:6",{"_index":287,"title":{},"body":{"injectables/CreateOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["order.usecase.ts:7",{"_index":292,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{}}}],["order.usecase.ts:9",{"_index":288,"title":{},"body":{"injectables/CreateOrderUseCase.html":{}}}],["order_id",{"_index":394,"title":{},"body":{"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/PaymentService.html":{}}}],["ordercontroller",{"_index":48,"title":{"controllers/OrderController.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["orderrepository",{"_index":73,"title":{"injectables/OrderRepository.html":{}},"body":{"modules/AppModule.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["orderservice",{"_index":29,"title":{"injectables/OrderService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/OrderService.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["organizar",{"_index":1051,"title":{},"body":{"index.html":{}}}],["os",{"_index":503,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["ou",{"_index":961,"title":{},"body":{"index.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["outros",{"_index":1164,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1197,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":853,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrões",{"_index":1019,"title":{},"body":{"index.html":{}}}],["pagamento",{"_index":353,"title":{},"body":{"injectables/GetPaymentOrderUseCase.html":{},"interfaces/IPayment.html":{},"controllers/OrderController.html":{},"injectables/PaymentRepository.html":{},"index.html":{}}}],["pagar",{"_index":1183,"title":{},"body":{"index.html":{}}}],["pagar/:pedido_id",{"_index":1182,"title":{},"body":{"index.html":{}}}],["papel",{"_index":941,"title":{},"body":{"index.html":{}}}],["para",{"_index":969,"title":{},"body":{"index.html":{}}}],["param",{"_index":152,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":183,"title":{},"body":{"controllers/CategoryController.html":{}}}],["param('order_id",{"_index":529,"title":{},"body":{"controllers/OrderController.html":{}}}],["parameters",{"_index":123,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["parte",{"_index":1091,"title":{},"body":{"index.html":{}}}],["partes",{"_index":1074,"title":{},"body":{"index.html":{}}}],["partial",{"_index":225,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UserService.html":{}}}],["partir",{"_index":1157,"title":{},"body":{"index.html":{}}}],["path",{"_index":1177,"title":{},"body":{"index.html":{}}}],["payer",{"_index":438,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["payment",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"controllers/OrderController.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["payment_data",{"_index":434,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["payment_method_id",{"_index":436,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["paymentorder",{"_index":457,"title":{},"body":{"controllers/OrderController.html":{}}}],["paymentorder(@param('order_id",{"_index":515,"title":{},"body":{"controllers/OrderController.html":{}}}],["paymentorder(order_id",{"_index":481,"title":{},"body":{"controllers/OrderController.html":{}}}],["paymentprovider",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/PaymentService.html":{}}}],["paymentrepository",{"_index":86,"title":{"injectables/PaymentRepository.html":{}},"body":{"modules/AppModule.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["paymentservice",{"_index":30,"title":{"injectables/PaymentService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["pedido",{"_index":374,"title":{},"body":{"interfaces/IOrder.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"index.html":{}}}],["pedido'})@apiparam({name",{"_index":486,"title":{},"body":{"controllers/OrderController.html":{}}}],["pedido_id",{"_index":1189,"title":{},"body":{"index.html":{}}}],["pedidos",{"_index":490,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["pedro",{"_index":889,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":469,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"index.html":{}}}],["perda",{"_index":965,"title":{},"body":{"index.html":{}}}],["perdidos",{"_index":958,"title":{},"body":{"index.html":{}}}],["permitem",{"_index":997,"title":{},"body":{"index.html":{}}}],["personalizado",{"_index":932,"title":{},"body":{"index.html":{}}}],["pico",{"_index":1043,"title":{},"body":{"index.html":{}}}],["pix",{"_index":437,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["poc",{"_index":1057,"title":{},"body":{"index.html":{}}}],["pode",{"_index":717,"title":{},"body":{"classes/UpdateUserDTO.html":{},"index.html":{}}}],["podem",{"_index":957,"title":{},"body":{"index.html":{}}}],["por",{"_index":758,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["port(interface",{"_index":1085,"title":{},"body":{"index.html":{}}}],["porta",{"_index":1146,"title":{},"body":{"index.html":{}}}],["portas",{"_index":1167,"title":{},"body":{"index.html":{}}}],["ports",{"_index":1069,"title":{},"body":{"index.html":{}}}],["porém",{"_index":915,"title":{},"body":{"index.html":{}}}],["possa",{"_index":971,"title":{},"body":{"index.html":{}}}],["post",{"_index":153,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["post('')@apioperation({summary",{"_index":462,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('payment/:order_id",{"_index":514,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('payment/:order_id')@apioperation({summary",{"_index":482,"title":{},"body":{"controllers/OrderController.html":{}}}],["post()@apioperation({summary",{"_index":117,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["precisar",{"_index":1000,"title":{},"body":{"index.html":{}}}],["preco",{"_index":280,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"index.html":{}}}],["preencha",{"_index":1135,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":104,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["preparado",{"_index":947,"title":{},"body":{"index.html":{}}}],["preparation.usecase",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{}}}],["preparation.usecase.ts",{"_index":697,"title":{},"body":{"injectables/UpdateOrderStatusPreparationUseCase.html":{},"coverage.html":{}}}],["preparation.usecase.ts:5",{"_index":698,"title":{},"body":{"injectables/UpdateOrderStatusPreparationUseCase.html":{}}}],["preparation.usecase.ts:8",{"_index":699,"title":{},"body":{"injectables/UpdateOrderStatusPreparationUseCase.html":{}}}],["preparação",{"_index":495,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["preparo/:pedido_id",{"_index":1184,"title":{},"body":{"index.html":{}}}],["preço",{"_index":274,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["primários",{"_index":1077,"title":{},"body":{"index.html":{}}}],["princípios",{"_index":1068,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":197,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["prisma/.../seed.ts",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":210,"title":{},"body":{"injectables/CategoryRepository.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/PrismaHelper.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["prisma/client/runtime/library",{"_index":546,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["prisma/seed.ts",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":611,"title":{},"body":{"injectables/PrismaHelper.html":{},"miscellaneous/variables.html":{}}}],["prismahelper",{"_index":31,"title":{"injectables/PrismaHelper.html":{}},"body":{"modules/AppModule.html":{},"injectables/CategoryRepository.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/PrismaHelper.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":171,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["problema",{"_index":905,"title":{},"body":{"index.html":{}}}],["process.env.base_url}/v1/order/preparation/${order_id",{"_index":441,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["process.env.mp_access_token_hmg",{"_index":428,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["process.env.mp_access_token_prd",{"_index":427,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["process.env.node_env",{"_index":425,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["product",{"_index":270,"title":{"classes/Product.html":{},"classes/Product-1.html":{}},"body":{"classes/CreateOrderDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"injectables/ProductService.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"coverage.html":{}}}],["product.dto",{"_index":641,"title":{},"body":{"controllers/ProductController.html":{}}}],["product.dto.ts",{"_index":312,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/UpdateProductDTO.html":{},"coverage.html":{}}}],["product.dto.ts:12",{"_index":707,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["product.dto.ts:14",{"_index":319,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["product.dto.ts:18",{"_index":315,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["product.dto.ts:19",{"_index":708,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["product.dto.ts:23",{"_index":321,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["product.dto.ts:27",{"_index":314,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["product.dto.ts:28",{"_index":709,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["product.dto.ts:32",{"_index":704,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["product.dto.ts:7",{"_index":316,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["product.dto.ts:8",{"_index":706,"title":{},"body":{"classes/UpdateProductDTO.html":{}}}],["product.quantidade",{"_index":302,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["product.usecase",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["product.usecase.ts",{"_index":322,"title":{},"body":{"injectables/CreateProductUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"coverage.html":{}}}],["product.usecase.ts:5",{"_index":342,"title":{},"body":{"injectables/DeleteProductUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetProductUseCase.html":{}}}],["product.usecase.ts:6",{"_index":324,"title":{},"body":{"injectables/CreateProductUseCase.html":{},"injectables/UpdateProductsUseCase.html":{}}}],["product.usecase.ts:8",{"_index":343,"title":{},"body":{"injectables/DeleteProductUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetProductUseCase.html":{}}}],["product.usecase.ts:9",{"_index":325,"title":{},"body":{"injectables/CreateProductUseCase.html":{},"injectables/UpdateProductsUseCase.html":{}}}],["productcontroller",{"_index":49,"title":{"controllers/ProductController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["production",{"_index":426,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["productrepository",{"_index":71,"title":{"injectables/ProductRepository.html":{}},"body":{"modules/AppModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["products.usecase.ts",{"_index":688,"title":{},"body":{"injectables/UpdateOrderProductsUseCase.html":{},"coverage.html":{}}}],["products.usecase.ts:6",{"_index":689,"title":{},"body":{"injectables/UpdateOrderProductsUseCase.html":{}}}],["products.usecase.ts:9",{"_index":690,"title":{},"body":{"injectables/UpdateOrderProductsUseCase.html":{}}}],["productservice",{"_index":32,"title":{"injectables/ProductService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreateProductUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/ProductService.html":{},"injectables/UpdateProductsUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":401,"title":{},"body":{"interfaces/IProduct.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"index.html":{}}}],["produto'})@apibody({type",{"_index":628,"title":{},"body":{"controllers/ProductController.html":{}}}],["produtos",{"_index":259,"title":{},"body":{"classes/CreateOrderDTO.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/UpdateOrderProductsDTO.html":{},"index.html":{}}}],["produtos.flatmap(product",{"_index":300,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{}}}],["programada",{"_index":1155,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":1104,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["pronto",{"_index":521,"title":{},"body":{"controllers/OrderController.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"index.html":{}}}],["pronto'})@apiparam({name",{"_index":479,"title":{},"body":{"controllers/OrderController.html":{}}}],["pronto/:pedido_id",{"_index":1186,"title":{},"body":{"index.html":{}}}],["properties",{"_index":242,"title":{"properties.html":{}},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/MercadoPagoProvider.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"properties.html":{}}}],["protected",{"_index":416,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["provide",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["put",{"_index":154,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["put(':id",{"_index":182,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["put(':id')@apioperation({summary",{"_index":147,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["put('delivered/:order_id",{"_index":524,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('delivered/:order_id')@apioperation({summary",{"_index":472,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('preparation/:order_id",{"_index":517,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('preparation/:order_id')@apioperation({summary",{"_index":493,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('product/:order_id",{"_index":528,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('product/:order_id')@apioperation({summary",{"_index":498,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('ready/:order_id",{"_index":520,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('ready/:order_id')@apioperation({summary",{"_index":478,"title":{},"body":{"controllers/OrderController.html":{}}}],["pós",{"_index":885,"title":{},"body":{"index.html":{}}}],["quantidade",{"_index":283,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"index.html":{}}}],["que",{"_index":909,"title":{},"body":{"index.html":{}}}],["queryparams",{"_index":1179,"title":{},"body":{"index.html":{}}}],["queue.usecase",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{}}}],["queue.usecase.ts",{"_index":356,"title":{},"body":{"injectables/GetQueueOrderUseCase.html":{},"coverage.html":{}}}],["queue.usecase.ts:5",{"_index":357,"title":{},"body":{"injectables/GetQueueOrderUseCase.html":{}}}],["queue.usecase.ts:8",{"_index":358,"title":{},"body":{"injectables/GetQueueOrderUseCase.html":{}}}],["queueoforders",{"_index":458,"title":{},"body":{"controllers/OrderController.html":{}}}],["readonly",{"_index":172,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["ready.usecase",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{}}}],["ready.usecase.ts",{"_index":701,"title":{},"body":{"injectables/UpdateOrderStatusReadyUseCase.html":{},"coverage.html":{}}}],["ready.usecase.ts:5",{"_index":702,"title":{},"body":{"injectables/UpdateOrderStatusReadyUseCase.html":{}}}],["ready.usecase.ts:8",{"_index":703,"title":{},"body":{"injectables/UpdateOrderStatusReadyUseCase.html":{}}}],["realiza",{"_index":483,"title":{},"body":{"controllers/OrderController.html":{}}}],["realização",{"_index":1011,"title":{},"body":{"index.html":{}}}],["recebe",{"_index":1082,"title":{},"body":{"index.html":{}}}],["recebido",{"_index":696,"title":{},"body":{"injectables/UpdateOrderStatusDeliveredUseCase.html":{}}}],["record",{"_index":691,"title":{},"body":{"injectables/UpdateOrderProductsUseCase.html":{}}}],["recursos",{"_index":1165,"title":{},"body":{"index.html":{}}}],["redireciona",{"_index":1084,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":194,"title":{},"body":{"injectables/CategoryRepository.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{}}}],["remove(id",{"_index":206,"title":{},"body":{"injectables/CategoryRepository.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/PaymentRepository.html":{},"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{}}}],["remover",{"_index":1030,"title":{},"body":{"index.html":{}}}],["repositório",{"_index":1124,"title":{},"body":{"index.html":{}}}],["requisição",{"_index":753,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resultando",{"_index":953,"title":{},"body":{"index.html":{}}}],["results",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumo",{"_index":967,"title":{},"body":{"index.html":{}}}],["retorna",{"_index":1191,"title":{},"body":{"index.html":{}}}],["retornada",{"_index":770,"title":{},"body":{"controllers/UserController.html":{}}}],["retornado",{"_index":774,"title":{},"body":{"controllers/UserController.html":{}}}],["return",{"_index":175,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":128,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["rm348617",{"_index":893,"title":{},"body":{"index.html":{}}}],["rm349115",{"_index":897,"title":{},"body":{"index.html":{}}}],["rm349553",{"_index":904,"title":{},"body":{"index.html":{}}}],["rogério",{"_index":894,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["sampaio",{"_index":895,"title":{},"body":{"index.html":{}}}],["santos",{"_index":903,"title":{},"body":{"index.html":{}}}],["se",{"_index":1162,"title":{},"body":{"index.html":{}}}],["secundários",{"_index":1089,"title":{},"body":{"index.html":{}}}],["segue",{"_index":1067,"title":{},"body":{"index.html":{}}}],["seguindo",{"_index":1018,"title":{},"body":{"index.html":{}}}],["seguinte",{"_index":1059,"title":{},"body":{"index.html":{}}}],["seguintes",{"_index":1002,"title":{},"body":{"index.html":{}}}],["selecionar",{"_index":998,"title":{},"body":{"index.html":{}}}],["sem",{"_index":918,"title":{},"body":{"index.html":{}}}],["sendo",{"_index":1113,"title":{},"body":{"index.html":{}}}],["ser",{"_index":276,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"index.html":{}}}],["services/category.service",{"_index":255,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/UpdateCategoryUseCase.html":{}}}],["services/order.service",{"_index":289,"title":{},"body":{"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{}}}],["services/payment.service",{"_index":295,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["services/product.service",{"_index":326,"title":{},"body":{"injectables/CreateProductUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/UpdateProductsUseCase.html":{}}}],["services/user.service",{"_index":296,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["servidor",{"_index":1144,"title":{},"body":{"index.html":{}}}],["serviço",{"_index":1151,"title":{},"body":{"index.html":{}}}],["serviços",{"_index":1170,"title":{},"body":{"index.html":{}}}],["seu",{"_index":913,"title":{},"body":{"index.html":{}}}],["seus",{"_index":976,"title":{},"body":{"index.html":{}}}],["siga",{"_index":1118,"title":{},"body":{"index.html":{}}}],["silva",{"_index":892,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":919,"title":{},"body":{"index.html":{}}}],["soat",{"_index":886,"title":{},"body":{"index.html":{}}}],["solucionar",{"_index":988,"title":{},"body":{"index.html":{}}}],["source",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/PrismaHelper.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["src/.../main.ts",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/@types/order",{"_index":290,"title":{},"body":{"injectables/CreateOrderUseCase.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["src/@types/product",{"_index":327,"title":{},"body":{"injectables/CreateProductUseCase.html":{},"injectables/ProductService.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateProductsUseCase.html":{}}}],["src/adapters/controllers/category.controller.ts",{"_index":103,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/adapters/controllers/category.controller.ts:33",{"_index":122,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/adapters/controllers/category.controller.ts:39",{"_index":141,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/adapters/controllers/category.controller.ts:46",{"_index":144,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/adapters/controllers/category.controller.ts:54",{"_index":150,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/adapters/controllers/category.controller.ts:64",{"_index":138,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/adapters/controllers/order.controller.ts",{"_index":451,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/adapters/controllers/order.controller.ts:41",{"_index":465,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:48",{"_index":470,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:55",{"_index":487,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:62",{"_index":496,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:69",{"_index":480,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:76",{"_index":476,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:83",{"_index":501,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/order.controller.ts:92",{"_index":491,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/adapters/controllers/product.controller.ts",{"_index":620,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/adapters/controllers/product.controller.ts:38",{"_index":629,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/adapters/controllers/product.controller.ts:44",{"_index":634,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/adapters/controllers/product.controller.ts:51",{"_index":636,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/adapters/controllers/product.controller.ts:59",{"_index":640,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/adapters/controllers/product.controller.ts:66",{"_index":632,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/adapters/controllers/user.controller.ts",{"_index":734,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/adapters/controllers/user.controller.ts:41",{"_index":755,"title":{},"body":{"controllers/UserController.html":{}}}],["src/adapters/controllers/user.controller.ts:51",{"_index":772,"title":{},"body":{"controllers/UserController.html":{}}}],["src/adapters/controllers/user.controller.ts:60",{"_index":776,"title":{},"body":{"controllers/UserController.html":{}}}],["src/adapters/controllers/user.controller.ts:70",{"_index":783,"title":{},"body":{"controllers/UserController.html":{}}}],["src/adapters/controllers/user.controller.ts:79",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["src/adapters/database/helpers/prisma.helper.ts",{"_index":609,"title":{},"body":{"injectables/PrismaHelper.html":{},"coverage.html":{}}}],["src/adapters/database/helpers/prisma.helper.ts:6",{"_index":612,"title":{},"body":{"injectables/PrismaHelper.html":{}}}],["src/adapters/database/repositories/category.repository.ts",{"_index":191,"title":{},"body":{"injectables/CategoryRepository.html":{},"coverage.html":{}}}],["src/adapters/database/repositories/category.repository.ts:10",{"_index":202,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/adapters/database/repositories/category.repository.ts:14",{"_index":205,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/adapters/database/repositories/category.repository.ts:20",{"_index":200,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/adapters/database/repositories/category.repository.ts:26",{"_index":209,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/adapters/database/repositories/category.repository.ts:33",{"_index":207,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/adapters/database/repositories/category.repository.ts:7",{"_index":196,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts",{"_index":534,"title":{},"body":{"injectables/OrderRepository.html":{},"coverage.html":{}}}],["src/adapters/database/repositories/order.repository.ts:12",{"_index":539,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts:16",{"_index":537,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts:20",{"_index":540,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts:26",{"_index":536,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts:32",{"_index":542,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts:39",{"_index":541,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/order.repository.ts:9",{"_index":535,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/adapters/database/repositories/payment.repository.ts",{"_index":570,"title":{},"body":{"injectables/PaymentRepository.html":{},"coverage.html":{}}}],["src/adapters/database/repositories/payment.repository.ts:10",{"_index":573,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/adapters/database/repositories/payment.repository.ts:14",{"_index":574,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/adapters/database/repositories/payment.repository.ts:20",{"_index":572,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/adapters/database/repositories/payment.repository.ts:26",{"_index":576,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/adapters/database/repositories/payment.repository.ts:33",{"_index":575,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/adapters/database/repositories/payment.repository.ts:7",{"_index":571,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/adapters/database/repositories/product.repository.ts",{"_index":654,"title":{},"body":{"injectables/ProductRepository.html":{},"coverage.html":{}}}],["src/adapters/database/repositories/product.repository.ts:10",{"_index":657,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/adapters/database/repositories/product.repository.ts:14",{"_index":658,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/adapters/database/repositories/product.repository.ts:20",{"_index":656,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/adapters/database/repositories/product.repository.ts:26",{"_index":660,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/adapters/database/repositories/product.repository.ts:33",{"_index":659,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/adapters/database/repositories/product.repository.ts:7",{"_index":655,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/adapters/database/repositories/user.repository.ts",{"_index":804,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/adapters/database/repositories/user.repository.ts:10",{"_index":807,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/adapters/database/repositories/user.repository.ts:14",{"_index":808,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/adapters/database/repositories/user.repository.ts:20",{"_index":806,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/adapters/database/repositories/user.repository.ts:26",{"_index":810,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/adapters/database/repositories/user.repository.ts:33",{"_index":809,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/adapters/database/repositories/user.repository.ts:7",{"_index":805,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/adapters/providers/mercadopago.provider.ts",{"_index":415,"title":{},"body":{"injectables/MercadoPagoProvider.html":{},"coverage.html":{}}}],["src/adapters/providers/mercadopago.provider.ts:11",{"_index":429,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["src/adapters/providers/mercadopago.provider.ts:15",{"_index":430,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["src/adapters/providers/mercadopago.provider.ts:17",{"_index":422,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["src/adapters/providers/mercadopago.provider.ts:21",{"_index":420,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["src/adapters/providers/mercadopago.provider.ts:42",{"_index":421,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/application/dtos/create",{"_index":161,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/application/dtos/update",{"_index":163,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/application/interfaces/category.repository.interface",{"_index":213,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["src/application/interfaces/category.repository.interface.ts",{"_index":363,"title":{},"body":{"interfaces/ICategory.html":{},"coverage.html":{}}}],["src/application/interfaces/category.repository.interface.ts:4",{"_index":365,"title":{},"body":{"interfaces/ICategory.html":{}}}],["src/application/interfaces/category.repository.interface.ts:5",{"_index":366,"title":{},"body":{"interfaces/ICategory.html":{}}}],["src/application/interfaces/category.repository.interface.ts:6",{"_index":364,"title":{},"body":{"interfaces/ICategory.html":{}}}],["src/application/interfaces/category.repository.interface.ts:7",{"_index":368,"title":{},"body":{"interfaces/ICategory.html":{}}}],["src/application/interfaces/category.repository.interface.ts:8",{"_index":367,"title":{},"body":{"interfaces/ICategory.html":{}}}],["src/application/interfaces/order.repository.interface",{"_index":544,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/application/interfaces/order.repository.interface.ts",{"_index":370,"title":{},"body":{"interfaces/IOrder.html":{},"coverage.html":{}}}],["src/application/interfaces/order.repository.interface.ts:4",{"_index":377,"title":{},"body":{"interfaces/IOrder.html":{}}}],["src/application/interfaces/order.repository.interface.ts:5",{"_index":375,"title":{},"body":{"interfaces/IOrder.html":{}}}],["src/application/interfaces/order.repository.interface.ts:6",{"_index":378,"title":{},"body":{"interfaces/IOrder.html":{}}}],["src/application/interfaces/order.repository.interface.ts:7",{"_index":373,"title":{},"body":{"interfaces/IOrder.html":{}}}],["src/application/interfaces/order.repository.interface.ts:8",{"_index":380,"title":{},"body":{"interfaces/IOrder.html":{}}}],["src/application/interfaces/order.repository.interface.ts:9",{"_index":379,"title":{},"body":{"interfaces/IOrder.html":{}}}],["src/application/interfaces/payment.provider.interface",{"_index":432,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["src/application/interfaces/payment.provider.interface.ts",{"_index":390,"title":{},"body":{"interfaces/IPaymentProvider.html":{},"coverage.html":{}}}],["src/application/interfaces/payment.provider.interface.ts:2",{"_index":393,"title":{},"body":{"interfaces/IPaymentProvider.html":{}}}],["src/application/interfaces/payment.provider.interface.ts:7",{"_index":396,"title":{},"body":{"interfaces/IPaymentProvider.html":{}}}],["src/application/interfaces/payment.repository.interface",{"_index":577,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["src/application/interfaces/payment.repository.interface.ts",{"_index":382,"title":{},"body":{"interfaces/IPayment.html":{},"coverage.html":{}}}],["src/application/interfaces/payment.repository.interface.ts:4",{"_index":385,"title":{},"body":{"interfaces/IPayment.html":{}}}],["src/application/interfaces/payment.repository.interface.ts:5",{"_index":386,"title":{},"body":{"interfaces/IPayment.html":{}}}],["src/application/interfaces/payment.repository.interface.ts:6",{"_index":384,"title":{},"body":{"interfaces/IPayment.html":{}}}],["src/application/interfaces/payment.repository.interface.ts:7",{"_index":388,"title":{},"body":{"interfaces/IPayment.html":{}}}],["src/application/interfaces/payment.repository.interface.ts:8",{"_index":387,"title":{},"body":{"interfaces/IPayment.html":{}}}],["src/application/interfaces/product.repository.interface",{"_index":661,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/application/interfaces/product.repository.interface.ts",{"_index":398,"title":{},"body":{"interfaces/IProduct.html":{},"coverage.html":{}}}],["src/application/interfaces/product.repository.interface.ts:4",{"_index":402,"title":{},"body":{"interfaces/IProduct.html":{}}}],["src/application/interfaces/product.repository.interface.ts:5",{"_index":403,"title":{},"body":{"interfaces/IProduct.html":{}}}],["src/application/interfaces/product.repository.interface.ts:6",{"_index":400,"title":{},"body":{"interfaces/IProduct.html":{}}}],["src/application/interfaces/product.repository.interface.ts:7",{"_index":405,"title":{},"body":{"interfaces/IProduct.html":{}}}],["src/application/interfaces/product.repository.interface.ts:8",{"_index":404,"title":{},"body":{"interfaces/IProduct.html":{}}}],["src/application/interfaces/user.repository.interface",{"_index":811,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/application/interfaces/user.repository.interface.ts",{"_index":407,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/application/interfaces/user.repository.interface.ts:4",{"_index":411,"title":{},"body":{"interfaces/IUser.html":{}}}],["src/application/interfaces/user.repository.interface.ts:5",{"_index":412,"title":{},"body":{"interfaces/IUser.html":{}}}],["src/application/interfaces/user.repository.interface.ts:6",{"_index":409,"title":{},"body":{"interfaces/IUser.html":{}}}],["src/application/interfaces/user.repository.interface.ts:7",{"_index":414,"title":{},"body":{"interfaces/IUser.html":{}}}],["src/application/interfaces/user.repository.interface.ts:8",{"_index":413,"title":{},"body":{"interfaces/IUser.html":{}}}],["src/application/services/category.service.ts",{"_index":221,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/application/services/category.service.ts:11",{"_index":229,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/application/services/category.service.ts:15",{"_index":230,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/application/services/category.service.ts:19",{"_index":226,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/application/services/category.service.ts:23",{"_index":231,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/application/services/category.service.ts:31",{"_index":228,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/application/services/category.service.ts:5",{"_index":223,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/application/services/order.service.ts",{"_index":552,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/application/services/order.service.ts:12",{"_index":559,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/order.service.ts:16",{"_index":558,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/order.service.ts:20",{"_index":560,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/order.service.ts:24",{"_index":556,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/order.service.ts:28",{"_index":561,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/order.service.ts:36",{"_index":557,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/order.service.ts:6",{"_index":554,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/application/services/payment.service.ts",{"_index":583,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/application/services/payment.service.ts:14",{"_index":591,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:18",{"_index":596,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:22",{"_index":593,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:26",{"_index":594,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:30",{"_index":589,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:34",{"_index":597,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:42",{"_index":592,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/payment.service.ts:6",{"_index":587,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/application/services/product.service.ts",{"_index":667,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/application/services/product.service.ts:12",{"_index":673,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/application/services/product.service.ts:16",{"_index":674,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/application/services/product.service.ts:20",{"_index":671,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/application/services/product.service.ts:24",{"_index":675,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/application/services/product.service.ts:32",{"_index":672,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/application/services/product.service.ts:6",{"_index":669,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/application/services/user.service.ts",{"_index":817,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/application/services/user.service.ts:11",{"_index":824,"title":{},"body":{"injectables/UserService.html":{}}}],["src/application/services/user.service.ts:15",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["src/application/services/user.service.ts:19",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["src/application/services/user.service.ts:23",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["src/application/services/user.service.ts:31",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["src/application/services/user.service.ts:5",{"_index":819,"title":{},"body":{"injectables/UserService.html":{}}}],["src/application/usecases/create",{"_index":164,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/application/usecases/delete",{"_index":165,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/application/usecases/get",{"_index":166,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/application/usecases/update",{"_index":167,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":882,"title":{"index.html":{}},"body":{}}],["startpreparationorder",{"_index":459,"title":{},"body":{"controllers/OrderController.html":{}}}],["startpreparationorder(@param('order_id",{"_index":518,"title":{},"body":{"controllers/OrderController.html":{}}}],["startpreparationorder(order_id",{"_index":492,"title":{},"body":{"controllers/OrderController.html":{}}}],["statements",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IOrder.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{},"index.html":{}}}],["string",{"_index":131,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"interfaces/IOrder.html":{},"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["string'})@apibody({type",{"_index":639,"title":{},"body":{"controllers/ProductController.html":{}}}],["string'})@apiproperty",{"_index":725,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["stubs",{"_index":896,"title":{},"body":{"index.html":{}}}],["sua",{"_index":1046,"title":{},"body":{"index.html":{}}}],["subir",{"_index":1143,"title":{},"body":{"index.html":{}}}],["sucesso",{"_index":792,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["sucesso'})@apiresponse({status",{"_index":751,"title":{},"body":{"controllers/UserController.html":{}}}],["sucesso'})@get",{"_index":771,"title":{},"body":{"controllers/UserController.html":{}}}],["summary",{"_index":173,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["support",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":160,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"index.html":{}}}],["são",{"_index":1090,"title":{},"body":{"index.html":{}}}],["série",{"_index":995,"title":{},"body":{"index.html":{}}}],["table",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["também",{"_index":1087,"title":{},"body":{"index.html":{}}}],["tech",{"_index":883,"title":{},"body":{"index.html":{}}}],["teles",{"_index":901,"title":{},"body":{"index.html":{}}}],["temos",{"_index":1058,"title":{},"body":{"index.html":{}}}],["tenha",{"_index":1116,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":613,"title":{},"body":{"injectables/PrismaHelper.html":{}}}],["this.categoryrepository.create(category",{"_index":237,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.findall",{"_index":235,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.findone(id",{"_index":236,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.remove(id",{"_index":239,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.update(id",{"_index":238,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryservice.create(data",{"_index":256,"title":{},"body":{"injectables/CreateCategoryUseCase.html":{}}}],["this.categoryservice.delete(id",{"_index":341,"title":{},"body":{"injectables/DeleteCategoryUseCase.html":{}}}],["this.categoryservice.findall",{"_index":346,"title":{},"body":{"injectables/GetAllCategoryUseCase.html":{}}}],["this.categoryservice.findone(id",{"_index":349,"title":{},"body":{"injectables/GetCategoryUseCase.html":{}}}],["this.categoryservice.update(id",{"_index":685,"title":{},"body":{"injectables/UpdateCategoryUseCase.html":{}}}],["this.createcategoryusecase.execute(data",{"_index":177,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.createorderusecase.execute(data",{"_index":510,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.createpaymentorderusecase.execute(number(order_id",{"_index":516,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.createproductusecase.execute(data",{"_index":646,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.createuserusecase.execute(data",{"_index":795,"title":{},"body":{"controllers/UserController.html":{}}}],["this.deletecategoryusecase.execute(number(id",{"_index":188,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.deleteproductusecase.execute(number(id",{"_index":653,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.deleteuserusecase.execute(number(id",{"_index":803,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getallcategoryusecase.execute",{"_index":178,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.getallproductusecase.execute",{"_index":647,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.getalluserusecase.execute",{"_index":796,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getcategoryusecase.execute(number(id",{"_index":181,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.getpaymentorderusecase.execute(number(order_id",{"_index":513,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.getproductusecase.execute(number(id",{"_index":649,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.getqueueorderusecase.execute",{"_index":533,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.getuserusecase.execute(number(id",{"_index":799,"title":{},"body":{"controllers/UserController.html":{}}}],["this.mercadopago?.configurations.setaccesstoken(this.access_token",{"_index":433,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["this.orderrepository.create(order",{"_index":567,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.findall",{"_index":565,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.findbystatus(status",{"_index":564,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.findone(id",{"_index":566,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.remove(id",{"_index":569,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.update(id",{"_index":568,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderservice.create(data",{"_index":291,"title":{},"body":{"injectables/CreateOrderUseCase.html":{}}}],["this.orderservice.findbystatus('em_preparo",{"_index":359,"title":{},"body":{"injectables/GetQueueOrderUseCase.html":{}}}],["this.orderservice.findone(id",{"_index":298,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{}}}],["this.orderservice.update(id",{"_index":692,"title":{},"body":{"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{}}}],["this.paymentprovider.create(order_id",{"_index":602,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentprovider.get(id",{"_index":603,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.create(payment",{"_index":606,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.findall",{"_index":604,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.findone(id",{"_index":605,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.remove(id",{"_index":608,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.update(id",{"_index":607,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.createpayment(id",{"_index":306,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{}}}],["this.paymentservice.getpayment(number(order.pedido_id",{"_index":352,"title":{},"body":{"injectables/GetPaymentOrderUseCase.html":{}}}],["this.prisma.categoria.create",{"_index":218,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["this.prisma.categoria.delete",{"_index":220,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["this.prisma.categoria.findmany",{"_index":216,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["this.prisma.categoria.findunique",{"_index":217,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["this.prisma.categoria.update",{"_index":219,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["this.prisma.pagamento.create",{"_index":580,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["this.prisma.pagamento.delete",{"_index":582,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["this.prisma.pagamento.findmany",{"_index":578,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["this.prisma.pagamento.findunique",{"_index":579,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["this.prisma.pagamento.update",{"_index":581,"title":{},"body":{"injectables/PaymentRepository.html":{}}}],["this.prisma.pedido.create",{"_index":549,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.pedido.delete",{"_index":551,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.pedido.findmany",{"_index":547,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.pedido.findunique",{"_index":548,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.pedido.update",{"_index":550,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.produto.create",{"_index":664,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.produto.delete",{"_index":666,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.produto.findmany",{"_index":662,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.produto.findunique",{"_index":663,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.produto.update",{"_index":665,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.usuario.create",{"_index":814,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.prisma.usuario.delete",{"_index":816,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.prisma.usuario.findmany",{"_index":812,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.prisma.usuario.findunique",{"_index":813,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.prisma.usuario.update",{"_index":815,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.productrepository.create(product",{"_index":680,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findall",{"_index":678,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findone(id",{"_index":679,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.remove(id",{"_index":682,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.update(id",{"_index":681,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create(data",{"_index":328,"title":{},"body":{"injectables/CreateProductUseCase.html":{}}}],["this.productservice.delete(id",{"_index":344,"title":{},"body":{"injectables/DeleteProductUseCase.html":{}}}],["this.productservice.findall",{"_index":347,"title":{},"body":{"injectables/GetAllProductUseCase.html":{}}}],["this.productservice.findone(id",{"_index":355,"title":{},"body":{"injectables/GetProductUseCase.html":{}}}],["this.productservice.update(id",{"_index":711,"title":{},"body":{"injectables/UpdateProductsUseCase.html":{}}}],["this.updatecategoryusecase.execute",{"_index":184,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.updateorderstatusdeliveredusecase.execute(number(order_id",{"_index":527,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.updateorderstatuspreparationusecase.execute(number(order_id",{"_index":519,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.updateorderstatusreadyusecase.execute(number(order_id",{"_index":523,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.updateproductsusecase.execute",{"_index":530,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.updateproductusecase.execute",{"_index":651,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.updateuserusecase.execute",{"_index":801,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userrepository.create(user",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findall",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.remove(id",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(id",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(data",{"_index":340,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["this.userservice.delete(id",{"_index":345,"title":{},"body":{"injectables/DeleteUserUseCase.html":{}}}],["this.userservice.findall",{"_index":348,"title":{},"body":{"injectables/GetAllUserUseCase.html":{}}}],["this.userservice.findone(id",{"_index":360,"title":{},"body":{"injectables/GetUserUseCase.html":{}}}],["this.userservice.findone(usuario_id",{"_index":305,"title":{},"body":{"injectables/CreatePaymentOrderUseCase.html":{}}}],["this.userservice.update(id",{"_index":733,"title":{},"body":{"injectables/UpdateUserUseCase.html":{}}}],["throw",{"_index":446,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["tipo",{"_index":789,"title":{},"body":{"controllers/UserController.html":{}}}],["todo",{"_index":1013,"title":{},"body":{"index.html":{}}}],["todos",{"_index":633,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["total",{"_index":260,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/Product.html":{}}}],["total_produtos",{"_index":354,"title":{},"body":{"injectables/GetPaymentOrderUseCase.html":{}}}],["trabalhar",{"_index":1050,"title":{},"body":{"index.html":{}}}],["transaction_amount",{"_index":435,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["transformer",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":272,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["try",{"_index":442,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["type",{"_index":125,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDTO.html":{},"injectables/CreateCategoryUseCase.html":{},"classes/CreateOrderDTO.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/CreateProductDTO.html":{},"injectables/CreateProductUseCase.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IPaymentProvider.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/UpdateCategoryDTO.html":{},"injectables/UpdateCategoryUseCase.html":{},"classes/UpdateOrderProductsDTO.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"classes/UpdateProductDTO.html":{},"injectables/UpdateProductsUseCase.html":{},"classes/UpdateUserDTO.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types/compression",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["ubíqua",{"_index":1009,"title":{},"body":{"index.html":{}}}],["um",{"_index":277,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/MercadoPagoProvider.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["uma",{"_index":724,"title":{},"body":{"classes/UpdateUserDTO.html":{},"index.html":{}}}],["unknown",{"_index":129,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CreateCategoryUseCase.html":{},"injectables/CreateOrderUseCase.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateProductUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteCategoryUseCase.html":{},"injectables/DeleteProductUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllCategoryUseCase.html":{},"injectables/GetAllProductUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetCategoryUseCase.html":{},"injectables/GetPaymentOrderUseCase.html":{},"injectables/GetProductUseCase.html":{},"injectables/GetQueueOrderUseCase.html":{},"injectables/GetUserUseCase.html":{},"controllers/OrderController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/UpdateCategoryUseCase.html":{},"injectables/UpdateOrderProductsUseCase.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"injectables/UpdateProductsUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":1205,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1141,"title":{},"body":{"index.html":{}}}],["update",{"_index":148,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":208,"title":{},"body":{"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ICategory.html":{},"interfaces/IOrder.html":{},"interfaces/IPayment.html":{},"interfaces/IProduct.html":{},"interfaces/IUser.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PaymentRepository.html":{},"injectables/PaymentService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["updatecategory",{"_index":113,"title":{},"body":{"controllers/CategoryController.html":{}}}],["updatecategory(id",{"_index":145,"title":{},"body":{"controllers/CategoryController.html":{}}}],["updatecategorydto",{"_index":146,"title":{"classes/UpdateCategoryDTO.html":{}},"body":{"controllers/CategoryController.html":{},"classes/UpdateCategoryDTO.html":{},"coverage.html":{}}}],["updatecategoryusecase",{"_index":33,"title":{"injectables/UpdateCategoryUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"injectables/UpdateCategoryUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updateorderproductsdto",{"_index":506,"title":{"classes/UpdateOrderProductsDTO.html":{}},"body":{"controllers/OrderController.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"coverage.html":{}}}],["updateorderproductsusecase",{"_index":687,"title":{"injectables/UpdateOrderProductsUseCase.html":{}},"body":{"injectables/UpdateOrderProductsUseCase.html":{},"coverage.html":{}}}],["updateorderstatusdeliveredusecase",{"_index":34,"title":{"injectables/UpdateOrderStatusDeliveredUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"injectables/UpdateOrderStatusDeliveredUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updateorderstatuspreparationusecase",{"_index":35,"title":{"injectables/UpdateOrderStatusPreparationUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"injectables/UpdateOrderStatusPreparationUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updateorderstatusreadyusecase",{"_index":36,"title":{"injectables/UpdateOrderStatusReadyUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"injectables/UpdateOrderStatusReadyUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updateproduct",{"_index":626,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproduct(@param('id",{"_index":650,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproduct(id",{"_index":637,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproductdto",{"_index":638,"title":{"classes/UpdateProductDTO.html":{}},"body":{"controllers/ProductController.html":{},"classes/UpdateProductDTO.html":{},"coverage.html":{}}}],["updateproductsorder",{"_index":460,"title":{},"body":{"controllers/OrderController.html":{}}}],["updateproductsorder(order_id",{"_index":497,"title":{},"body":{"controllers/OrderController.html":{}}}],["updateproductsusecase",{"_index":37,"title":{"injectables/UpdateProductsUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/UpdateProductsUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["updateproductusecase",{"_index":644,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateuser",{"_index":740,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@param('id",{"_index":800,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(id",{"_index":777,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserdto",{"_index":712,"title":{"classes/UpdateUserDTO.html":{}},"body":{"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updateuserdto})@apiresponse({status",{"_index":780,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserusecase",{"_index":38,"title":{"injectables/UpdateUserUseCase.html":{}},"body":{"modules/AppModule.html":{},"injectables/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":1175,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":785,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":334,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["user.dto.ts:18",{"_index":332,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:19",{"_index":722,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["user.dto.ts:23",{"_index":335,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:27",{"_index":331,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:7",{"_index":333,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:9",{"_index":726,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["user.usecase",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["user.usecase.ts",{"_index":336,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"coverage.html":{}}}],["user.usecase.ts:5",{"_index":338,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["user.usecase.ts:8",{"_index":339,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{}}}],["usercontroller",{"_index":50,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["userrepository",{"_index":69,"title":{"injectables/UserRepository.html":{}},"body":{"modules/AppModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice",{"_index":39,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteUserUseCase.html":{},"injectables/GetAllUserUseCase.html":{},"injectables/GetUserUseCase.html":{},"injectables/UpdateUserUseCase.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":410,"title":{},"body":{"interfaces/IUser.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["usuario_id",{"_index":261,"title":{},"body":{"classes/CreateOrderDTO.html":{},"injectables/CreatePaymentOrderUseCase.html":{},"classes/Product.html":{}}}],["usuário",{"_index":748,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["usuário'})@apibody({type",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários",{"_index":769,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@apiresponse({status",{"_index":766,"title":{},"body":{"controllers/UserController.html":{}}}],["utiliza",{"_index":1159,"title":{},"body":{"index.html":{}}}],["utilizados",{"_index":1094,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":1007,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":1138,"title":{},"body":{"index.html":{}}}],["v1/category",{"_index":105,"title":{},"body":{"controllers/CategoryController.html":{}}}],["v1/order",{"_index":452,"title":{},"body":{"controllers/OrderController.html":{}}}],["v1/product",{"_index":621,"title":{},"body":{"controllers/ProductController.html":{}}}],["v1/user",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":248,"title":{},"body":{"classes/CreateCategoryDTO.html":{},"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateCategoryDTO.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{},"classes/UpdateUserDTO.html":{},"dependencies.html":{}}}],["validação",{"_index":1056,"title":{},"body":{"index.html":{}}}],["value",{"_index":392,"title":{},"body":{"interfaces/IPaymentProvider.html":{},"injectables/MercadoPagoProvider.html":{},"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1207,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vazio",{"_index":731,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["vazio'})@iscpf({message",{"_index":719,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["vazio'})@isemail",{"_index":721,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["vazio'})@isstring({message",{"_index":723,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["version",{"_index":1202,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1028,"title":{},"body":{"index.html":{}}}],["void",{"_index":423,"title":{},"body":{"injectables/MercadoPagoProvider.html":{}}}],["volumes",{"_index":1040,"title":{},"body":{"index.html":{}}}],["válido",{"_index":279,"title":{},"body":{"classes/CreateOrderDTO.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateOrderProductsDTO.html":{},"classes/UpdateProductDTO.html":{}}}],["válido'})@apiproperty",{"_index":318,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateProductDTO.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryService->AppModule\n\n\n\n\n\nCreateCategoryUseCase\n\nCreateCategoryUseCase\n\nAppModule -->\n\nCreateCategoryUseCase->AppModule\n\n\n\n\n\nCreateOrderUseCase\n\nCreateOrderUseCase\n\nAppModule -->\n\nCreateOrderUseCase->AppModule\n\n\n\n\n\nCreatePaymentOrderUseCase\n\nCreatePaymentOrderUseCase\n\nAppModule -->\n\nCreatePaymentOrderUseCase->AppModule\n\n\n\n\n\nCreateProductUseCase\n\nCreateProductUseCase\n\nAppModule -->\n\nCreateProductUseCase->AppModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nAppModule -->\n\nCreateUserUseCase->AppModule\n\n\n\n\n\nDeleteCategoryUseCase\n\nDeleteCategoryUseCase\n\nAppModule -->\n\nDeleteCategoryUseCase->AppModule\n\n\n\n\n\nDeleteProductUseCase\n\nDeleteProductUseCase\n\nAppModule -->\n\nDeleteProductUseCase->AppModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nAppModule -->\n\nDeleteUserUseCase->AppModule\n\n\n\n\n\nGetAllCategoryUseCase\n\nGetAllCategoryUseCase\n\nAppModule -->\n\nGetAllCategoryUseCase->AppModule\n\n\n\n\n\nGetAllProductUseCase\n\nGetAllProductUseCase\n\nAppModule -->\n\nGetAllProductUseCase->AppModule\n\n\n\n\n\nGetAllUserUseCase\n\nGetAllUserUseCase\n\nAppModule -->\n\nGetAllUserUseCase->AppModule\n\n\n\n\n\nGetCategoryUseCase\n\nGetCategoryUseCase\n\nAppModule -->\n\nGetCategoryUseCase->AppModule\n\n\n\n\n\nGetPaymentOrderUseCase\n\nGetPaymentOrderUseCase\n\nAppModule -->\n\nGetPaymentOrderUseCase->AppModule\n\n\n\n\n\nGetProductUseCase\n\nGetProductUseCase\n\nAppModule -->\n\nGetProductUseCase->AppModule\n\n\n\n\n\nGetQueueOrderUseCase\n\nGetQueueOrderUseCase\n\nAppModule -->\n\nGetQueueOrderUseCase->AppModule\n\n\n\n\n\nGetUserUseCase\n\nGetUserUseCase\n\nAppModule -->\n\nGetUserUseCase->AppModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nAppModule -->\n\nOrderService->AppModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nAppModule -->\n\nPaymentService->AppModule\n\n\n\n\n\nPrismaHelper\n\nPrismaHelper\n\nAppModule -->\n\nPrismaHelper->AppModule\n\n\n\n\n\nProductService\n\nProductService\n\nAppModule -->\n\nProductService->AppModule\n\n\n\n\n\nUpdateCategoryUseCase\n\nUpdateCategoryUseCase\n\nAppModule -->\n\nUpdateCategoryUseCase->AppModule\n\n\n\n\n\nUpdateOrderStatusDeliveredUseCase\n\nUpdateOrderStatusDeliveredUseCase\n\nAppModule -->\n\nUpdateOrderStatusDeliveredUseCase->AppModule\n\n\n\n\n\nUpdateOrderStatusPreparationUseCase\n\nUpdateOrderStatusPreparationUseCase\n\nAppModule -->\n\nUpdateOrderStatusPreparationUseCase->AppModule\n\n\n\n\n\nUpdateOrderStatusReadyUseCase\n\nUpdateOrderStatusReadyUseCase\n\nAppModule -->\n\nUpdateOrderStatusReadyUseCase->AppModule\n\n\n\n\n\nUpdateProductsUseCase\n\nUpdateProductsUseCase\n\nAppModule -->\n\nUpdateProductsUseCase->AppModule\n\n\n\n\n\nUpdateUserUseCase\n\nUpdateUserUseCase\n\nAppModule -->\n\nUpdateUserUseCase->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                        \n                            CreateCategoryUseCase\n                        \n                        \n                            CreateOrderUseCase\n                        \n                        \n                            CreatePaymentOrderUseCase\n                        \n                        \n                            CreateProductUseCase\n                        \n                        \n                            CreateUserUseCase\n                        \n                        \n                            DeleteCategoryUseCase\n                        \n                        \n                            DeleteProductUseCase\n                        \n                        \n                            DeleteUserUseCase\n                        \n                        \n                            GetAllCategoryUseCase\n                        \n                        \n                            GetAllProductUseCase\n                        \n                        \n                            GetAllUserUseCase\n                        \n                        \n                            GetCategoryUseCase\n                        \n                        \n                            GetPaymentOrderUseCase\n                        \n                        \n                            GetProductUseCase\n                        \n                        \n                            GetQueueOrderUseCase\n                        \n                        \n                            GetUserUseCase\n                        \n                        \n                            OrderService\n                        \n                        \n                            PaymentService\n                        \n                        \n                            PrismaHelper\n                        \n                        \n                            ProductService\n                        \n                        \n                            UpdateCategoryUseCase\n                        \n                        \n                            UpdateOrderStatusDeliveredUseCase\n                        \n                        \n                            UpdateOrderStatusPreparationUseCase\n                        \n                        \n                            UpdateOrderStatusReadyUseCase\n                        \n                        \n                            UpdateProductsUseCase\n                        \n                        \n                            UpdateUserUseCase\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                        \n                            ProductController\n                        \n                        \n                            UserController\n                        \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { OrderController } from './adapters/controllers/order.controller';\nimport { ProductController } from './adapters/controllers/product.controller';\nimport { UserController } from './adapters/controllers/user.controller';\nimport { OrderService } from './application/services/order.service';\nimport { ProductService } from './application/services/product.service';\nimport { UserService } from './application/services/user.service';\nimport { CreateUserUseCase } from './application/usecases/create-user.usecase';\nimport { GetAllUserUseCase } from './application/usecases/get--all-user.usecase';\nimport { GetUserUseCase } from './application/usecases/get-user.usecase';\nimport { UpdateUserUseCase } from './application/usecases/update-user.usecase';\nimport { DeleteUserUseCase } from './application/usecases/delete-user.usecase';\nimport { CreateProductUseCase } from './application/usecases/create-product.usecase';\nimport { GetProductUseCase } from './application/usecases/get-product.usecase';\nimport { GetAllProductUseCase } from './application/usecases/get--all-product.usecase';\nimport { DeleteProductUseCase } from './application/usecases/delete-product.usecase';\nimport { UserRepository } from './adapters/database/repositories/user.repository';\nimport { ProductRepository } from './adapters/database/repositories/product.repository';\nimport { OrderRepository } from './adapters/database/repositories/order.repository';\nimport { CategoryRepository } from './adapters/database/repositories/category.repository';\nimport { PrismaHelper } from './adapters/database/helpers/prisma.helper';\nimport { CategoryController } from './adapters/controllers/category.controller';\nimport { CreateCategoryUseCase } from './application/usecases/create-category.usecase';\nimport { GetAllCategoryUseCase } from './application/usecases/get--all-category.usecase';\nimport { GetCategoryUseCase } from './application/usecases/get-category.usecase';\nimport { UpdateCategoryUseCase } from './application/usecases/update-category.usecase';\nimport { DeleteCategoryUseCase } from './application/usecases/delete-category.usecase';\nimport { CategoryService } from './application/services/category.service';\nimport { UpdateProductsUseCase } from './application/usecases/update-product.usecase';\nimport { GetPaymentOrderUseCase } from './application/usecases/get-payment-order.usecase';\nimport { CreatePaymentOrderUseCase } from './application/usecases/create-payment-order.usecase';\nimport { GetQueueOrderUseCase } from './application/usecases/get-queue.usecase';\nimport { MercadoPagoProvider } from './adapters/providers/mercadopago.provider';\nimport { PaymentRepository } from './adapters/database/repositories/payment.repository';\nimport { PaymentService } from './application/services/payment.service';\nimport { CreateOrderUseCase } from './application/usecases/create-order.usecase';\nimport { UpdateOrderStatusReadyUseCase } from './application/usecases/update-order-status-ready.usecase';\nimport { UpdateOrderStatusPreparationUseCase } from './application/usecases/update-order-status-preparation.usecase';\nimport { UpdateOrderStatusDeliveredUseCase } from './application/usecases/update-order-status-delivered.usecase';\n\n@Module({\n  imports: [],\n  controllers: [\n    OrderController,\n    ProductController,\n    UserController,\n    CategoryController,\n  ],\n  providers: [\n    PaymentService,\n    OrderService,\n    ProductService,\n    UserService,\n    CategoryService,\n    CreateUserUseCase,\n    GetAllUserUseCase,\n    GetUserUseCase,\n    UpdateUserUseCase,\n    DeleteUserUseCase,\n    CreateProductUseCase,\n    GetAllProductUseCase,\n    GetProductUseCase,\n    UpdateProductsUseCase,\n    DeleteProductUseCase,\n    CreateCategoryUseCase,\n    GetAllCategoryUseCase,\n    GetCategoryUseCase,\n    UpdateCategoryUseCase,\n    DeleteCategoryUseCase,\n    GetPaymentOrderUseCase,\n    CreatePaymentOrderUseCase,\n    GetQueueOrderUseCase,\n    CreateOrderUseCase,\n    UpdateOrderStatusReadyUseCase,\n    UpdateOrderStatusPreparationUseCase,\n    UpdateOrderStatusDeliveredUseCase,\n    {\n      provide: 'UserRepository',\n      useClass: UserRepository,\n    },\n    {\n      provide: 'OrderRepository',\n      useClass: OrderRepository,\n    },\n    {\n      provide: 'ProductRepository',\n      useClass: ProductRepository,\n    },\n    {\n      provide: 'CategoryRepository',\n      useClass: CategoryRepository,\n    },\n    {\n      provide: 'PaymentRepository',\n      useClass: PaymentRepository,\n    },\n    {\n      provide: 'PaymentProvider',\n      useClass: MercadoPagoProvider\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: ClassSerializerInterceptor,\n    },\n    PrismaHelper\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/controllers/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createCategory\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllCategory\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getCategory\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCategory(data: CreateCategoryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new category'})@ApiBody({type: CreateCategoryDTO})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/category.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateCategoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCategory(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a category by ID'})@ApiParam({name: 'id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/category.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCategory()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@ApiOperation({summary: 'Get all categories'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/category.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategory(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a category by ID'})@ApiParam({name: 'id', type: 'integer'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/category.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCategory(id: string, data: UpdateCategoryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update a category by ID'})@ApiParam({name: 'id', type: 'integer'})@ApiBody({type: UpdateCategoryDTO})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/category.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateCategoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiParam, ApiBody } from '@nestjs/swagger'; // Import Swagger decorators\nimport { CreateCategoryDTO } from 'src/application/dtos/create-category.dto';\nimport { UpdateCategoryDTO } from 'src/application/dtos/update-category.dto';\nimport { CreateCategoryUseCase } from 'src/application/usecases/create-category.usecase';\nimport { DeleteCategoryUseCase } from 'src/application/usecases/delete-category.usecase';\nimport { GetAllCategoryUseCase } from 'src/application/usecases/get--all-category.usecase';\nimport { GetCategoryUseCase } from 'src/application/usecases/get-category.usecase';\nimport { UpdateCategoryUseCase } from 'src/application/usecases/update-category.usecase';\n\n@ApiTags('Categoria')\n@Controller('v1/category')\nexport class CategoryController {\n  constructor(\n    private readonly createCategoryUseCase: CreateCategoryUseCase,\n    private readonly getAllCategoryUseCase: GetAllCategoryUseCase,\n    private readonly getCategoryUseCase: GetCategoryUseCase,\n    private readonly updateCategoryUseCase: UpdateCategoryUseCase,\n    private readonly deleteCategoryUseCase: DeleteCategoryUseCase,\n  ) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new category' })\n  @ApiBody({ type: CreateCategoryDTO })\n  async createCategory(@Body() data: CreateCategoryDTO) {\n    return await this.createCategoryUseCase.execute(data);\n  }\n\n  @Get('')\n  @ApiOperation({ summary: 'Get all categories' })\n  async getAllCategory() {\n    return await this.getAllCategoryUseCase.execute();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get a category by ID' })\n  @ApiParam({ name: 'id', type: 'integer' })\n  async getCategory(@Param('id') id: string) {\n    return await this.getCategoryUseCase.execute(Number(id));\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update a category by ID' })\n  @ApiParam({ name: 'id', type: 'integer' })\n  @ApiBody({ type: UpdateCategoryDTO })\n  async updateCategory(\n    @Param('id') id: string,\n    @Body() data: UpdateCategoryDTO,\n  ) {\n    return await this.updateCategoryUseCase.execute({ id: Number(id), data });\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete a category by ID' })\n  @ApiParam({ name: 'id', type: 'integer' })\n  async deleteCategory(@Param('id') id: string) {\n    return await this.deleteCategoryUseCase.execute(Number(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryRepository.html":{"url":"injectables/CategoryRepository.html","title":"injectable - CategoryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/database/repositories/category.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaHelper)\n                    \n                \n                        \n                            \n                                Defined in src/adapters/database/repositories/category.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(categoria: Categoria)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/category.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoria\n                                    \n                                            Categoria\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/category.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/category.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/category.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, categoria: Categoria)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/category.repository.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoria\n                                    \n                                            Categoria\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Categoria } from '@prisma/client';\nimport { PrismaHelper } from '../helpers/prisma.helper';\nimport { ICategory } from 'src/application/interfaces/category.repository.interface';\n\n@Injectable()\nexport class CategoryRepository implements ICategory {\n  constructor(private readonly prisma: PrismaHelper) {}\n\n  async findAll(): Promise {\n    return await this.prisma.categoria.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.prisma.categoria.findUnique({\n      where: { id },\n    });\n  }\n\n  async create(categoria: Categoria): Promise {\n    return await this.prisma.categoria.create({\n      data: categoria,\n    });\n  }\n\n  async update(id: number, categoria: Categoria): Promise {\n    return await this.prisma.categoria.update({\n      where: { id },\n      data: categoria,\n    });\n  }\n\n  async remove(id: number): Promise {\n    await this.prisma.categoria.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepository: ICategory)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/category.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        ICategory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(category: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/category.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/category.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/category.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/category.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/category.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { ICategory } from '../interfaces/category.repository.interface';\n\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @Inject('CategoryRepository')\n    private readonly categoryRepository: ICategory,\n  ) {}\n\n  async findAll(): Promise {\n    return this.categoryRepository.findAll();\n  }\n\n  async findOne(id: number): Promise {\n    return this.categoryRepository.findOne(id);\n  }\n\n  async create(category: Partial): Promise {\n    return this.categoryRepository.create(category);\n  }\n\n  async update(\n    id: number,\n    data: Partial,\n  ): Promise {\n    await this.categoryRepository.update(id, data);\n    return this.categoryRepository.findOne(id);\n  }\n\n  async delete(id: number): Promise {\n    await this.categoryRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDTO.html":{"url":"classes/CreateCategoryDTO.html","title":"class - CreateCategoryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                nome\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-category.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class CreateCategoryDTO {\n  @IsString()\n  @ApiProperty()\n  nome: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCategoryUseCase.html":{"url":"injectables/CreateCategoryUseCase.html","title":"injectable - CreateCategoryUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCategoryUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/create-category.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/create-category.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/create-category.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CategoryService } from '../services/category.service';\n\n@Injectable()\nexport class CreateCategoryUseCase {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  async execute(data: Partial) {\n    return await this.categoryService.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDTO.html":{"url":"classes/CreateOrderDTO.html","title":"class - CreateOrderDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                produtos\n                            \n                            \n                                    \n                                    \n                                total\n                            \n                            \n                                    \n                                usuario_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usuario_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDecimal, IsInt, IsString, Min } from 'class-validator';\n\nclass Product {\n  @IsInt()\n  @ApiProperty()\n  id: number \n\n  @IsString()\n  @ApiProperty()\n  nome: string;\n\n  @IsDecimal(\n    { force_decimal: true },\n    { message: 'Preço deve ser um número válido' },\n  )\n  @ApiProperty()\n  preco: any;\n\n  @IsString()\n  @ApiProperty()\n  descricao: string;\n\n  @IsInt()\n  @Min(0)\n  @ApiProperty()\n  quantidade: number;\n\n  @IsInt()\n  @ApiProperty()\n  categoria_id: number;\n}\n\nexport class CreateOrderDTO {\n  @IsDecimal()\n  @ApiProperty()\n  total: any;\n\n  @ApiProperty()\n  usuario_id: number;\n\n  @ApiProperty({ type: () => [Product] })\n  produtos: Partial[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateOrderUseCase.html":{"url":"injectables/CreateOrderUseCase.html","title":"injectable - CreateOrderUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateOrderUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/create-order.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/create-order.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/create-order.usecase.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\nimport { Order } from 'src/@types/order';\n\n@Injectable()\nexport class CreateOrderUseCase {\n  constructor(private readonly orderService: OrderService) {}\n\n  async execute(data: Partial) {\n    return await this.orderService.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatePaymentOrderUseCase.html":{"url":"injectables/CreatePaymentOrderUseCase.html","title":"injectable - CreatePaymentOrderUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreatePaymentOrderUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/create-payment-order.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService, paymentService: PaymentService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/create-payment-order.usecase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/create-payment-order.usecase.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\nimport { PaymentService } from '../services/payment.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class CreatePaymentOrderUseCase {\n  constructor(\n    private readonly orderService: OrderService,\n    private readonly paymentService: PaymentService,\n    private readonly userService: UserService\n    ) {}\n\n  async execute(id: number) {\n    const { usuario_id, produtos } = await this.orderService.findOne(id)\n\n    const all_products = produtos.flatMap(product => {\n        return Number(product.preco) * (!product.quantidade ? 1 : product.quantidade)\n    })\n\n    const { email } = await this.userService.findOne(usuario_id)\n    return await this.paymentService.createPayment(id, all_products.reduce((accumulator, currentValue) => accumulator + currentValue, 0), email)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDTO.html":{"url":"classes/CreateProductDTO.html","title":"class - CreateProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categoria_id\n                            \n                            \n                                    \n                                    \n                                descricao\n                            \n                            \n                                    \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                preco\n                            \n                            \n                                    \n                                    \n                                    \n                                quantidade\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categoria_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal({force_decimal: true}, {message: 'Preço deve ser um número válido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-product.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsDecimal, IsInt, Min } from 'class-validator';\n\nexport class CreateProductDTO {\n  @IsString()\n  @ApiProperty()\n  nome: string;\n\n  @IsDecimal(\n    { force_decimal: true },\n    { message: 'Preço deve ser um número válido' },\n  )\n  @ApiProperty()\n  preco: any;\n\n  @IsString()\n  @ApiProperty()\n  descricao: string;\n\n  @IsInt()\n  @Min(0)\n  @ApiProperty()\n  quantidade: number;\n\n  @IsInt()\n  @ApiProperty()\n  categoria_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductUseCase.html":{"url":"injectables/CreateProductUseCase.html","title":"injectable - CreateProductUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/create-product.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/create-product.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/create-product.usecase.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProductService } from '../services/product.service';\nimport { Product } from 'src/@types/product';\n\n@Injectable()\nexport class CreateProductUseCase {\n  constructor(private readonly productService: ProductService) {}\n\n  async execute(data: Partial) {\n    return this.productService.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categoria_id\n                            \n                            \n                                    \n                                    \n                                descricao\n                            \n                            \n                                    \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                preco\n                            \n                            \n                                    \n                                    \n                                    \n                                quantidade\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categoria_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal({force_decimal: true}, {message: 'Preço deve ser um número válido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsDecimal, IsInt, Min } from 'class-validator';\n\nexport class CreateUserDTO {\n  @IsString()\n  @ApiProperty()\n  nome: string;\n\n  @IsDecimal(\n    { force_decimal: true },\n    { message: 'Preço deve ser um número válido' },\n  )\n  @ApiProperty()\n  preco: string;\n\n  @IsString()\n  @ApiProperty()\n  descricao: string;\n\n  @IsInt()\n  @Min(0)\n  @ApiProperty()\n  quantidade: number;\n\n  @IsInt()\n  @ApiProperty()\n  categoria_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserUseCase.html":{"url":"injectables/CreateUserUseCase.html","title":"injectable - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/create-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/create-user.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/create-user.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class CreateUserUseCase {\n  constructor(private readonly userService: UserService) {}\n\n  async execute(data: Partial) {\n    return this.userService.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteCategoryUseCase.html":{"url":"injectables/DeleteCategoryUseCase.html","title":"injectable - DeleteCategoryUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteCategoryUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/delete-category.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/delete-category.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/delete-category.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CategoryService } from '../services/category.service';\n\n@Injectable()\nexport class DeleteCategoryUseCase {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  async execute(id: number) {\n    return await this.categoryService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteProductUseCase.html":{"url":"injectables/DeleteProductUseCase.html","title":"injectable - DeleteProductUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteProductUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/delete-product.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/delete-product.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/delete-product.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProductService } from '../services/product.service';\n\n@Injectable()\nexport class DeleteProductUseCase {\n  constructor(private readonly productService: ProductService) {}\n\n  async execute(id: number) {\n    return await this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserUseCase.html":{"url":"injectables/DeleteUserUseCase.html","title":"injectable - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/delete-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/delete-user.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/delete-user.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class DeleteUserUseCase {\n  constructor(private readonly userService: UserService) {}\n\n  async execute(id: number) {\n    return await this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetAllCategoryUseCase.html":{"url":"injectables/GetAllCategoryUseCase.html","title":"injectable - GetAllCategoryUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetAllCategoryUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get--all-category.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get--all-category.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get--all-category.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CategoryService } from '../services/category.service';\n\n@Injectable()\nexport class GetAllCategoryUseCase {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  async execute() {\n    return await this.categoryService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetAllProductUseCase.html":{"url":"injectables/GetAllProductUseCase.html","title":"injectable - GetAllProductUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetAllProductUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get--all-product.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get--all-product.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get--all-product.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProductService } from '../services/product.service';\n\n@Injectable()\nexport class GetAllProductUseCase {\n  constructor(private readonly productService: ProductService) {}\n\n  async execute() {\n    return await this.productService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetAllUserUseCase.html":{"url":"injectables/GetAllUserUseCase.html","title":"injectable - GetAllUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetAllUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get--all-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get--all-user.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get--all-user.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class GetAllUserUseCase {\n  constructor(private readonly userService: UserService) {}\n\n  async execute() {\n    return await this.userService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetCategoryUseCase.html":{"url":"injectables/GetCategoryUseCase.html","title":"injectable - GetCategoryUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetCategoryUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get-category.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get-category.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get-category.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CategoryService } from '../services/category.service';\n\n@Injectable()\nexport class GetCategoryUseCase {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  async execute(id: number) {\n    return await this.categoryService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetPaymentOrderUseCase.html":{"url":"injectables/GetPaymentOrderUseCase.html","title":"injectable - GetPaymentOrderUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetPaymentOrderUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get-payment-order.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService, paymentService: PaymentService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get-payment-order.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get-payment-order.usecase.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\nimport { PaymentService } from '../services/payment.service';\n\n@Injectable()\nexport class GetPaymentOrderUseCase {\n  constructor(\n    private readonly orderService: OrderService,\n    private readonly paymentService: PaymentService,\n    ) {}\n\n  async execute(id: number) {\n    const order = await this.orderService.findOne(id)\n\n    const all_products = order.produtos.flatMap(product => {\n        return Number(product.preco) * (!product.quantidade ? 1 : product.quantidade)\n    })\n\n    const payment = await this.paymentService.getPayment(Number(order.pedido_id))\n  \n    return { ...order, pagamento: payment, total_produtos: all_products.reduce((accumulator, currentValue) => accumulator + currentValue, 0)}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProductUseCase.html":{"url":"injectables/GetProductUseCase.html","title":"injectable - GetProductUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetProductUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get-product.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get-product.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get-product.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProductService } from '../services/product.service';\n\n@Injectable()\nexport class GetProductUseCase {\n  constructor(private readonly productService: ProductService) {}\n\n  async execute(id: number) {\n    return await this.productService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetQueueOrderUseCase.html":{"url":"injectables/GetQueueOrderUseCase.html","title":"injectable - GetQueueOrderUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetQueueOrderUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get-queue.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get-queue.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get-queue.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\n\n@Injectable()\nexport class GetQueueOrderUseCase {\n  constructor(private readonly orderService: OrderService) {}\n\n  async execute() {\n    return await this.orderService.findByStatus('EM_PREPARO')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetUserUseCase.html":{"url":"injectables/GetUserUseCase.html","title":"injectable - GetUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/get-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/get-user.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/get-user.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class GetUserUseCase {\n  constructor(private readonly userService: UserService) {}\n\n  async execute(id: number) {\n    return await this.userService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICategory.html":{"url":"interfaces/ICategory.html","title":"interface - ICategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interfaces/category.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(categoria: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/category.repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoria\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/category.repository.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/category.repository.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/category.repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, categoria: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/category.repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoria\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Categoria } from '@prisma/client';\n\nexport interface ICategory {\n  findAll(): Promise;\n  findOne(id: number): Promise;\n  create(categoria: Partial): Promise;\n  update(id: number, categoria: Partial): Promise;\n  remove(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOrder.html":{"url":"interfaces/IOrder.html","title":"interface - IOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interfaces/order.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findByStatus\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(pedido: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/order.repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pedido\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/order.repository.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByStatus\n                        \n                    \n                \n            \n            \n                \nfindByStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/order.repository.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/order.repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/order.repository.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, pedido: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/order.repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pedido\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pedido } from '@prisma/client';\n\nexport interface IOrder {\n  findByStatus(status: string): Promise;\n  findAll(): Promise;\n  findOne(id: number): Promise;\n  create(pedido: Partial): Promise;\n  update(id: number, pedido: Partial): Promise;\n  remove(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPayment.html":{"url":"interfaces/IPayment.html","title":"interface - IPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interfaces/payment.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(pagamento: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pagamento\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.repository.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.repository.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, pagamento: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagamento\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pagamento } from '@prisma/client';\n\nexport interface IPayment {\n  findAll(): Promise;\n  findOne(id: number): Promise;\n  create(pagamento: Partial): Promise;\n  update(id: number, pagamento: Partial): Promise;\n  remove(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaymentProvider.html":{"url":"interfaces/IPaymentProvider.html","title":"interface - IPaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interfaces/payment.provider.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(order_id: number, value: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.provider.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/payment.provider.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IPaymentProvider {\n  create(\n    order_id: number,\n    value: number,\n    email: string,\n  ): Promise>;\n  get(id: number): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProduct.html":{"url":"interfaces/IProduct.html","title":"interface - IProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interfaces/product.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(produto: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/product.repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    produto\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/product.repository.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/product.repository.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/product.repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, pedido: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/product.repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pedido\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Produto } from '@prisma/client';\n\nexport interface IProduct {\n  findAll(): Promise;\n  findOne(id: number): Promise;\n  create(produto: Partial): Promise;\n  update(id: number, pedido: Partial): Promise;\n  remove(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interfaces/user.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(usuario: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/user.repository.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/user.repository.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/user.repository.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/user.repository.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, pedido: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/interfaces/user.repository.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pedido\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Usuario } from '@prisma/client';\n\nexport interface IUser {\n  findAll(): Promise;\n  findOne(id: number): Promise;\n  create(usuario: Partial): Promise;\n  update(id: number, pedido: Partial): Promise;\n  remove(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MercadoPagoProvider.html":{"url":"injectables/MercadoPagoProvider.html","title":"injectable - MercadoPagoProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MercadoPagoProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/providers/mercadopago.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                access_token\n                            \n                            \n                                    Protected\n                                mercadopago\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(order_id: number, value: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/providers/mercadopago.provider.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/providers/mercadopago.provider.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/providers/mercadopago.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV == 'production'\n      ? process.env.MP_ACCESS_TOKEN_PRD\n      : process.env.MP_ACCESS_TOKEN_HMG\n                    \n                \n                    \n                        \n                                Defined in src/adapters/providers/mercadopago.provider.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mercadopago\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mercadopago\n                    \n                \n                    \n                        \n                                Defined in src/adapters/providers/mercadopago.provider.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  InternalServerErrorException,\n  OnModuleInit,\n} from '@nestjs/common';\nimport mercadopago from 'mercadopago';\nimport { IPaymentProvider } from 'src/application/interfaces/payment.provider.interface';\n\n@Injectable()\nexport class MercadoPagoProvider implements IPaymentProvider, OnModuleInit {\n  protected access_token =\n    process.env.NODE_ENV == 'production'\n      ? process.env.MP_ACCESS_TOKEN_PRD\n      : process.env.MP_ACCESS_TOKEN_HMG;\n  protected mercadopago = mercadopago;\n\n  onModuleInit() {\n    this.mercadopago?.configurations.setAccessToken(this.access_token);\n  }\n\n  async create(\n    order_id: number,\n    value: number,\n    email: string,\n  ): Promise> {\n    const payment_data = {\n      transaction_amount: value,\n      payment_method_id: 'pix',\n      payer: {\n        email: email,\n      },\n      installments: 1,\n      notification_url: `${process.env.BASE_URL}/v1/order/preparation/${order_id}`\n    };\n    try {\n      return await mercadopago.payment.create(payment_data);\n    } catch (error) {\n      throw new InternalServerErrorException('Ocorreu um erro inesperado.');\n    }\n  }\n\n  async get(id: number): Promise> {\n    try {\n      return await mercadopago.payment.get(id);\n    } catch (error) {\n      throw new InternalServerErrorException('Ocorreu um erro inesperado.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/controllers/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                markAsDeliveredOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                markAsReadyOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                paymentOrder\n                            \n                            \n                                    \n                                    \n                                    Async\n                                queueOfOrders\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                startPreparationOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateProductsOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOrder(data: CreateOrderDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@ApiOperation({summary: 'Cria um novo pedido'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateOrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrder(order_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':order_id')@ApiOperation({summary: 'Obtém um pedido pelo ID'})@ApiParam({name: 'order_id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        markAsDeliveredOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    markAsDeliveredOrder(order_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('delivered/:order_id')@ApiOperation({summary: 'Marca um pedido como entregue'})@ApiParam({name: 'order_id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        markAsReadyOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    markAsReadyOrder(order_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('ready/:order_id')@ApiOperation({summary: 'Marca um pedido como pronto'})@ApiParam({name: 'order_id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        paymentOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentOrder(order_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('payment/:order_id')@ApiOperation({summary: 'Realiza o pagamento de um pedido'})@ApiParam({name: 'order_id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        queueOfOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    queueOfOrders()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('queue')@ApiOperation({summary: 'Obtém a fila de pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        startPreparationOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    startPreparationOrder(order_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('preparation/:order_id')@ApiOperation({summary: 'Inicia a preparação de um pedido'})@ApiParam({name: 'order_id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        updateProductsOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProductsOrder(order_id: string, data: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('product/:order_id')@ApiOperation({summary: 'Atualiza produtos em um pedido'})@ApiParam({name: 'order_id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/order.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiParam,\n} from '@nestjs/swagger'; // Importe os decoradores do Swagger\nimport { CreateOrderDTO } from 'src/application/dtos/create-order.dto';\nimport { UpdateOrderProductsDTO } from 'src/application/dtos/update-order.dto';\nimport { CreateOrderUseCase } from 'src/application/usecases/create-order.usecase';\nimport { CreatePaymentOrderUseCase } from 'src/application/usecases/create-payment-order.usecase';\nimport { GetPaymentOrderUseCase } from 'src/application/usecases/get-payment-order.usecase';\nimport { UpdateOrderStatusDeliveredUseCase } from 'src/application/usecases/update-order-status-delivered.usecase';\nimport { UpdateOrderStatusPreparationUseCase } from 'src/application/usecases/update-order-status-preparation.usecase';\nimport { UpdateOrderStatusReadyUseCase } from 'src/application/usecases/update-order-status-ready.usecase';\nimport { UpdateProductsUseCase } from 'src/application/usecases/update-product.usecase';\nimport { GetQueueOrderUseCase } from 'src/application/usecases/get-queue.usecase';\n\n@ApiTags('Pedido')\n@Controller('v1/order')\nexport class OrderController {\n  constructor(\n    private readonly createOrderUseCase: CreateOrderUseCase,\n    private readonly createPaymentOrderUseCase: CreatePaymentOrderUseCase,\n    private readonly getPaymentOrderUseCase: GetPaymentOrderUseCase,\n    private readonly updateOrderStatusReadyUseCase: UpdateOrderStatusReadyUseCase,\n    private readonly updateOrderStatusPreparationUseCase: UpdateOrderStatusPreparationUseCase,\n    private readonly updateOrderStatusDeliveredUseCase: UpdateOrderStatusDeliveredUseCase,\n    private readonly updateProductsUseCase: UpdateProductsUseCase,\n    private readonly getQueueOrderUseCase: GetQueueOrderUseCase\n  ) {}\n\n  @Post('')\n  @ApiOperation({ summary: 'Cria um novo pedido' })\n  async createOrder(@Body() data: CreateOrderDTO) {\n    return await this.createOrderUseCase.execute(data);\n  }\n\n  @Get(':order_id')\n  @ApiOperation({ summary: 'Obtém um pedido pelo ID' })\n  @ApiParam({ name: 'order_id', type: 'string' })\n  async getOrder(@Param('order_id') order_id: string) {\n    return await this.getPaymentOrderUseCase.execute(Number(order_id));\n  }\n\n  @Post('payment/:order_id')\n  @ApiOperation({ summary: 'Realiza o pagamento de um pedido' })\n  @ApiParam({ name: 'order_id', type: 'string' })\n  async paymentOrder(@Param('order_id') order_id: string) {\n    return await this.createPaymentOrderUseCase.execute(Number(order_id));\n  }\n\n  @Put('preparation/:order_id')\n  @ApiOperation({ summary: 'Inicia a preparação de um pedido' })\n  @ApiParam({ name: 'order_id', type: 'string' })\n  async startPreparationOrder(@Param('order_id') order_id: string) {\n    return await this.updateOrderStatusPreparationUseCase.execute(Number(order_id));\n  }\n\n  @Put('ready/:order_id')\n  @ApiOperation({ summary: 'Marca um pedido como pronto' })\n  @ApiParam({ name: 'order_id', type: 'string' })\n  async markAsReadyOrder(@Param('order_id') order_id: string) {\n    return await this.updateOrderStatusReadyUseCase.execute(Number(order_id));\n  }\n\n  @Put('delivered/:order_id')\n  @ApiOperation({ summary: 'Marca um pedido como entregue' })\n  @ApiParam({ name: 'order_id', type: 'string' })\n  async markAsDeliveredOrder(@Param('order_id') order_id: string) {\n    return await this.updateOrderStatusDeliveredUseCase.execute(Number(order_id));\n  }\n\n  @Put('product/:order_id')\n  @ApiOperation({ summary: 'Atualiza produtos em um pedido' })\n  @ApiParam({ name: 'order_id', type: 'string' })\n  async updateProductsOrder(\n    @Param('order_id') order_id: string,\n    @Body() data: Partial,\n  ) {\n    return await this.updateProductsUseCase.execute({ id: Number(order_id), data });\n  }\n\n  @Get('queue')\n  @ApiOperation({ summary: 'Obtém a fila de pedidos' })\n  async queueOfOrders() {\n    return await this.getQueueOrderUseCase.execute();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderRepository.html":{"url":"injectables/OrderRepository.html","title":"injectable - OrderRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/database/repositories/order.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByStatus\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaHelper)\n                    \n                \n                        \n                            \n                                Defined in src/adapters/database/repositories/order.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(pedido: Pedido)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/order.repository.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pedido\n                                    \n                                            Pedido\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/order.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByStatus(status: Order.Steps)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/order.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            Order.Steps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/order.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/order.repository.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, pedido: Pedido)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/order.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pedido\n                                    \n                                            Pedido\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { $Enums, Pedido } from '@prisma/client';\nimport { PrismaHelper } from '../helpers/prisma.helper';\nimport { IOrder } from 'src/application/interfaces/order.repository.interface';\nimport { Decimal } from '@prisma/client/runtime/library';\nimport { Order } from 'src/@types/order';\n\n@Injectable()\nexport class OrderRepository implements IOrder {\n  constructor(private readonly prisma: PrismaHelper) {}\n\n  async findByStatus(status: Order.Steps): Promise {\n    return await this.prisma.pedido.findMany({ where: { status }});\n  }\n\n  async findAll(): Promise {\n    return await this.prisma.pedido.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.prisma.pedido.findUnique({\n      where: { id },\n    });\n  }\n\n  async create(pedido: Pedido): Promise {\n    return await this.prisma.pedido.create({\n      data: pedido,\n    });\n  }\n\n  async update(id: number, pedido: Pedido): Promise {\n    return await this.prisma.pedido.update({\n      where: { id },\n      data: pedido,\n    });\n  }\n\n  async remove(id: number): Promise {\n    await this.prisma.pedido.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByStatus\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepository: IOrder)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/order.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepository\n                                                  \n                                                        \n                                                                        IOrder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(order: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/order.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/order.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/order.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/order.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/order.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/order.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { IOrder } from '../interfaces/order.repository.interface';\nimport { Order } from 'src/@types/order';\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    @Inject('OrderRepository')\n    private readonly orderRepository: IOrder,\n  ) {}\n\n  async findByStatus(status: string): Promise {\n    return this.orderRepository.findByStatus(status)\n  }\n\n  async findAll(): Promise {\n    return this.orderRepository.findAll();\n  }\n\n  async findOne(id: number): Promise {\n    return this.orderRepository.findOne(id);\n  }\n\n  async create(order: Partial): Promise {\n    return this.orderRepository.create(order);\n  }\n\n  async update(\n    id: number,\n    data: Partial,\n  ): Promise {\n    await this.orderRepository.update(id, data);\n    return this.orderRepository.findOne(id);\n  }\n\n  async delete(id: number): Promise {\n    await this.orderRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentRepository.html":{"url":"injectables/PaymentRepository.html","title":"injectable - PaymentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/database/repositories/payment.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaHelper)\n                    \n                \n                        \n                            \n                                Defined in src/adapters/database/repositories/payment.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(pagamento: Pagamento)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/payment.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pagamento\n                                    \n                                            Pagamento\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/payment.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/payment.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/payment.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, pagamento: Pagamento)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/payment.repository.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagamento\n                                    \n                                            Pagamento\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Pagamento } from '@prisma/client';\nimport { PrismaHelper } from '../helpers/prisma.helper';\nimport { IPayment } from 'src/application/interfaces/payment.repository.interface';\n\n@Injectable()\nexport class PaymentRepository implements IPayment {\n  constructor(private readonly prisma: PrismaHelper) {}\n\n  async findAll(): Promise {\n    return await this.prisma.pagamento.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.prisma.pagamento.findUnique({\n      where: { id },\n    });\n  }\n\n  async create(pagamento: Pagamento): Promise {\n    return await this.prisma.pagamento.create({\n      data: pagamento,\n    });\n  }\n\n  async update(id: number, pagamento: Pagamento): Promise {\n    return await this.prisma.pagamento.update({\n      where: { id },\n      data: pagamento,\n    });\n  }\n\n  async remove(id: number): Promise {\n    await this.prisma.pagamento.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createPayment\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getPayment\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: IPayment, paymentProvider: IPaymentProvider)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/payment.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        IPayment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentProvider\n                                                  \n                                                        \n                                                                        IPaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payment: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payment\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPayment\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPayment(order_id: number, value: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPayment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPayment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/payment.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { IPayment } from '../interfaces/payment.repository.interface';\nimport { IPaymentProvider } from '../interfaces/payment.provider.interface';\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @Inject('PaymentRepository')\n    private readonly paymentRepository: IPayment,\n    @Inject('PaymentProvider')\n    private readonly paymentProvider: IPaymentProvider\n  ) {}\n\n  async createPayment(order_id: number, value: number, email: string) {\n    return await this.paymentProvider.create(order_id, value, email)\n  }\n\n  async getPayment(id: number) {\n    return await this.paymentProvider.get(id)\n  }\n\n  async findAll(): Promise {\n    return this.paymentRepository.findAll();\n  }\n\n  async findOne(id: number): Promise {\n    return this.paymentRepository.findOne(id);\n  }\n\n  async create(payment: Partial): Promise {\n    return this.paymentRepository.create(payment);\n  }\n\n  async update(\n    id: number,\n    data: Partial,\n  ): Promise {\n    await this.paymentRepository.update(id, data);\n    return this.paymentRepository.findOne(id);\n  }\n\n  async delete(id: number): Promise {\n    await this.paymentRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaHelper.html":{"url":"injectables/PrismaHelper.html","title":"injectable - PrismaHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/database/helpers/prisma.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/helpers/prisma.helper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaHelper extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categoria_id\n                            \n                            \n                                    \n                                    \n                                descricao\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                preco\n                            \n                            \n                                    \n                                    \n                                    \n                                quantidade\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categoria_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal({force_decimal: true}, {message: 'Preço deve ser um número válido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/create-order.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDecimal, IsInt, IsString, Min } from 'class-validator';\n\nclass Product {\n  @IsInt()\n  @ApiProperty()\n  id: number \n\n  @IsString()\n  @ApiProperty()\n  nome: string;\n\n  @IsDecimal(\n    { force_decimal: true },\n    { message: 'Preço deve ser um número válido' },\n  )\n  @ApiProperty()\n  preco: any;\n\n  @IsString()\n  @ApiProperty()\n  descricao: string;\n\n  @IsInt()\n  @Min(0)\n  @ApiProperty()\n  quantidade: number;\n\n  @IsInt()\n  @ApiProperty()\n  categoria_id: number;\n}\n\nexport class CreateOrderDTO {\n  @IsDecimal()\n  @ApiProperty()\n  total: any;\n\n  @ApiProperty()\n  usuario_id: number;\n\n  @ApiProperty({ type: () => [Product] })\n  produtos: Partial[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product-1.html":{"url":"classes/Product-1.html","title":"class - Product-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categoria_id\n                            \n                            \n                                    \n                                    \n                                descricao\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                preco\n                            \n                            \n                                    \n                                    \n                                    \n                                quantidade\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categoria_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal({force_decimal: true}, {message: 'Preço deve ser um número válido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsString, IsDecimal, Min } from \"class-validator\";\n\nclass Product {\n    @IsInt()\n    @ApiProperty()\n    id?: number \n  \n    @IsString()\n    @ApiProperty()\n    nome: string;\n  \n    @IsDecimal(\n      { force_decimal: true },\n      { message: 'Preço deve ser um número válido' },\n    )\n    @ApiProperty()\n    preco: any;\n  \n    @IsString()\n    @ApiProperty()\n    descricao: string;\n  \n    @IsInt()\n    @Min(0)\n    @ApiProperty()\n    quantidade: number;\n  \n    @IsInt()\n    @ApiProperty()\n    categoria_id: number;\n  }\n\nexport class UpdateOrderProductsDTO {\n    @ApiProperty({ type: () => [Product] })\n    produtos: Partial[] \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/controllers/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(data: CreateProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cria um novo produto'})@ApiBody({type: CreateProductDTO})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Exclui um produto pelo ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/product.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProduct()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@ApiOperation({summary: 'Obtém todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/product.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Obtém um produto pelo ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/product.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, data: UpdateProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Atualiza um produto pelo ID'})@ApiParam({name: 'id', type: 'string'})@ApiBody({type: UpdateProductDTO})\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/product.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiParam,\n  ApiBody,\n} from '@nestjs/swagger'; // Importe os decoradores do Swagger\nimport { CreateProductDTO } from 'src/application/dtos/create-product.dto';\nimport { UpdateProductDTO } from 'src/application/dtos/update-product.dto';\nimport { CreateProductUseCase } from 'src/application/usecases/create-product.usecase';\nimport { DeleteProductUseCase } from 'src/application/usecases/delete-product.usecase';\nimport { GetAllProductUseCase } from 'src/application/usecases/get--all-product.usecase';\nimport { GetProductUseCase } from 'src/application/usecases/get-product.usecase';\nimport { UpdateProductsUseCase } from 'src/application/usecases/update-product.usecase';\n\n@ApiTags('Produto')\n@Controller('v1/product')\nexport class ProductController {\n  constructor(\n    private readonly createProductUseCase: CreateProductUseCase,\n    private readonly getAllProductUseCase: GetAllProductUseCase,\n    private readonly getProductUseCase: GetProductUseCase,\n    private readonly updateProductUseCase: UpdateProductsUseCase,\n    private readonly deleteProductUseCase: DeleteProductUseCase,\n  ) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Cria um novo produto' })\n  @ApiBody({ type: CreateProductDTO })\n  async createProduct(@Body() data: CreateProductDTO) {\n    return await this.createProductUseCase.execute(data);\n  }\n\n  @Get('')\n  @ApiOperation({ summary: 'Obtém todos os produtos' })\n  async getAllProduct() {\n    return await this.getAllProductUseCase.execute();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Obtém um produto pelo ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  async getProduct(@Param('id') id: string) {\n    return await this.getProductUseCase.execute(Number(id));\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Atualiza um produto pelo ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  @ApiBody({ type: UpdateProductDTO })\n  async updateProduct(@Param('id') id: string, @Body() data: UpdateProductDTO) {\n    return await this.updateProductUseCase.execute({ id: Number(id), data });\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Exclui um produto pelo ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  async deleteProduct(@Param('id') id: string) {\n    return await this.deleteProductUseCase.execute(Number(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductRepository.html":{"url":"injectables/ProductRepository.html","title":"injectable - ProductRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/database/repositories/product.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaHelper)\n                    \n                \n                        \n                            \n                                Defined in src/adapters/database/repositories/product.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(produto: Produto)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/product.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    produto\n                                    \n                                            Produto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/product.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/product.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/product.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, produto: Produto)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/product.repository.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    produto\n                                    \n                                            Produto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Produto } from '@prisma/client';\nimport { PrismaHelper } from '../helpers/prisma.helper';\nimport { IProduct } from 'src/application/interfaces/product.repository.interface';\n\n@Injectable()\nexport class ProductRepository implements IProduct {\n  constructor(private readonly prisma: PrismaHelper) {}\n\n  async findAll(): Promise {\n    return await this.prisma.produto.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.prisma.produto.findUnique({\n      where: { id },\n    });\n  }\n\n  async create(produto: Produto): Promise {\n    return await this.prisma.produto.create({\n      data: produto,\n    });\n  }\n\n  async update(id: number, produto: Produto): Promise {\n    return await this.prisma.produto.update({\n      where: { id },\n      data: produto,\n    });\n  }\n\n  async remove(id: number): Promise {\n    await this.prisma.produto.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: IProduct)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/product.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        IProduct\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(product: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/product.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/product.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/product.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/product.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IProduct } from '../interfaces/product.repository.interface';\nimport { Product } from 'src/@types/product';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @Inject('ProductRepository')\n    private readonly productRepository: IProduct,\n  ) {}\n\n  async findAll(): Promise {\n    return this.productRepository.findAll();\n  }\n\n  async findOne(id: number): Promise {\n    return this.productRepository.findOne(id);\n  }\n\n  async create(product: Partial): Promise {\n    return this.productRepository.create(product);\n  }\n\n  async update(\n    id: number,\n    data: Partial,\n  ): Promise {\n    await this.productRepository.update(id, data);\n    return this.productRepository.findOne(id);\n  }\n\n  async delete(id: number): Promise {\n    await this.productRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDTO.html":{"url":"classes/UpdateCategoryDTO.html","title":"class - UpdateCategoryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                nome\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-category.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateCategoryDTO {\n  @IsString()\n  @ApiProperty()\n  nome: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateCategoryUseCase.html":{"url":"injectables/UpdateCategoryUseCase.html","title":"injectable - UpdateCategoryUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateCategoryUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-category.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-category.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-category.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CategoryService } from '../services/category.service';\n\n@Injectable()\nexport class UpdateCategoryUseCase {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  async execute({ id, data }: { id: number; data: Partial }) {\n    return await this.categoryService.update(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderProductsDTO.html":{"url":"classes/UpdateOrderProductsDTO.html","title":"class - UpdateOrderProductsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderProductsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                produtos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-order.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsString, IsDecimal, Min } from \"class-validator\";\n\nclass Product {\n    @IsInt()\n    @ApiProperty()\n    id?: number \n  \n    @IsString()\n    @ApiProperty()\n    nome: string;\n  \n    @IsDecimal(\n      { force_decimal: true },\n      { message: 'Preço deve ser um número válido' },\n    )\n    @ApiProperty()\n    preco: any;\n  \n    @IsString()\n    @ApiProperty()\n    descricao: string;\n  \n    @IsInt()\n    @Min(0)\n    @ApiProperty()\n    quantidade: number;\n  \n    @IsInt()\n    @ApiProperty()\n    categoria_id: number;\n  }\n\nexport class UpdateOrderProductsDTO {\n    @ApiProperty({ type: () => [Product] })\n    produtos: Partial[] \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOrderProductsUseCase.html":{"url":"injectables/UpdateOrderProductsUseCase.html","title":"injectable - UpdateOrderProductsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOrderProductsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-order-products.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-order-products.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-order-products.usecase.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\nimport { Product } from 'src/@types/product';\n\n@Injectable()\nexport class UpdateOrderProductsUseCase {\n  constructor(private readonly orderService: OrderService) {}\n\n  async execute({ id, data }: { id: number, data: Record[]>}) {\n    return await this.orderService.update(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOrderStatusDeliveredUseCase.html":{"url":"injectables/UpdateOrderStatusDeliveredUseCase.html","title":"injectable - UpdateOrderStatusDeliveredUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOrderStatusDeliveredUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-order-status-delivered.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-order-status-delivered.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-order-status-delivered.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\n\n@Injectable()\nexport class UpdateOrderStatusDeliveredUseCase {\n  constructor(private readonly orderService: OrderService) {}\n\n  async execute(id: number) {\n    return await this.orderService.update(id, { status: 'RECEBIDO' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOrderStatusPreparationUseCase.html":{"url":"injectables/UpdateOrderStatusPreparationUseCase.html","title":"injectable - UpdateOrderStatusPreparationUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOrderStatusPreparationUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-order-status-preparation.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-order-status-preparation.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-order-status-preparation.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\n\n@Injectable()\nexport class UpdateOrderStatusPreparationUseCase {\n  constructor(private readonly orderService: OrderService) {}\n\n  async execute(id: number) {\n    return await this.orderService.update(id, { status: 'EM_PREPARO' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOrderStatusReadyUseCase.html":{"url":"injectables/UpdateOrderStatusReadyUseCase.html","title":"injectable - UpdateOrderStatusReadyUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOrderStatusReadyUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-order-status-ready.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-order-status-ready.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-order-status-ready.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\n\n@Injectable()\nexport class UpdateOrderStatusReadyUseCase {\n  constructor(private readonly orderService: OrderService) {}\n\n  async execute(id: number) {\n    return await this.orderService.update(id, { status: 'PRONTO' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDTO.html":{"url":"classes/UpdateProductDTO.html","title":"class - UpdateProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categoria_id\n                            \n                            \n                                    \n                                    \n                                descricao\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                preco\n                            \n                            \n                                    \n                                    \n                                    \n                                quantidade\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categoria_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-product.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-product.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal({force_decimal: true}, {message: 'Preço deve ser um número válido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-product.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsDecimal, IsInt, Min, IsOptional } from 'class-validator';\n\nexport class UpdateProductDTO {\n  @IsInt()\n  @ApiProperty()\n  @IsOptional()\n  id: number\n\n  @IsString()\n  @ApiProperty()\n  nome: string;\n\n  @IsDecimal(\n    { force_decimal: true },\n    { message: 'Preço deve ser um número válido' },\n  )\n  @ApiProperty()\n  preco: any;\n\n  @IsString()\n  @ApiProperty()\n  descricao: string;\n\n  @IsInt()\n  @Min(0)\n  @ApiProperty()\n  quantidade: number;\n\n  @IsInt()\n  @ApiProperty()\n  categoria_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductsUseCase.html":{"url":"injectables/UpdateProductsUseCase.html","title":"injectable - UpdateProductsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-product.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-product.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-product.usecase.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ProductService } from '../services/product.service';\nimport { Product } from 'src/@types/product';\n\n@Injectable()\nexport class UpdateProductsUseCase {\n  constructor(private readonly productService: ProductService) {}\n\n  async execute({ id, data }: { id: number; data: Partial }) {\n    return await this.productService.update(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDTO.html":{"url":"classes/UpdateUserDTO.html","title":"class - UpdateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/dtos/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                cpf\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                nome\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'O campo CPF não pode estar vazio'})@IsCPF({message: 'CPF inválido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'O campo email não pode estar vazio'})@IsEmail({}, {message: 'Email inválido'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'O campo nome não pode estar vazio'})@IsString({message: 'O campo nome deve ser uma string'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/application/dtos/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsCPF } from 'brazilian-class-validator';\nimport { IsString, IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDTO {\n  @IsNotEmpty({ message: 'O campo nome não pode estar vazio' })\n  @IsString({ message: 'O campo nome deve ser uma string' })\n  @ApiProperty()\n  nome: string;\n\n  @IsNotEmpty({ message: 'O campo CPF não pode estar vazio' })\n  @IsCPF({ message: 'CPF inválido' })\n  @ApiProperty()\n  cpf: string;\n\n  @IsNotEmpty({ message: 'O campo email não pode estar vazio' })\n  @IsEmail({}, { message: 'Email inválido' })\n  @ApiProperty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserUseCase.html":{"url":"injectables/UpdateUserUseCase.html","title":"injectable - UpdateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/usecases/update-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/usecases/update-user.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/application/usecases/update-user.usecase.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class UpdateUserUseCase {\n  constructor(private readonly userService: UserService) {}\n\n  async execute({ id, data }: { id: number; data: Partial }) {\n    return await this.userService.update(id, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAllUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Criar um usuário'})@ApiBody({type: CreateUserDTO})@ApiResponse({status: 201, description: 'Usuário criado com sucesso'})@ApiResponse({status: 400, description: 'Requisição inválida'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Excluir um usuário por ID'})@ApiParam({name: 'id', type: 'number'})@ApiResponse({status: 204, description: 'Usuário excluído com sucesso'})@ApiResponse({status: 404, description: 'Usuário não encontrado'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/user.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Obter todos os usuários'})@ApiResponse({status: 200, description: 'Lista de usuários retornada com sucesso'})@Get('')\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Obter um usuário por ID'})@ApiParam({name: 'id', type: 'number'})@ApiResponse({status: 200, description: 'Usuário retornado com sucesso'})@ApiResponse({status: 404, description: 'Usuário não encontrado'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/user.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, data: UpdateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Atualizar um usuário por ID'})@ApiParam({name: 'id', type: 'number'})@ApiBody({type: UpdateUserDTO})@ApiResponse({status: 200, description: 'Usuário atualizado com sucesso'})@ApiResponse({status: 400, description: 'Requisição inválida'})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/adapters/controllers/user.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateUserDTO } from 'src/application/dtos/create-user.dto';\nimport { UpdateUserDTO } from 'src/application/dtos/update-user.dto';\nimport { CreateUserUseCase } from 'src/application/usecases/create-user.usecase';\nimport { DeleteUserUseCase } from 'src/application/usecases/delete-user.usecase';\nimport { GetAllUserUseCase } from 'src/application/usecases/get--all-user.usecase';\nimport { GetUserUseCase } from 'src/application/usecases/get-user.usecase';\nimport { UpdateUserUseCase } from 'src/application/usecases/update-user.usecase';\n\n@ApiTags('Usuário')\n@Controller('v1/user')\nexport class UserController {\n  constructor(\n    private readonly createUserUseCase: CreateUserUseCase,\n    private readonly getAllUserUseCase: GetAllUserUseCase,\n    private readonly getUserUseCase: GetUserUseCase,\n    private readonly updateUserUseCase: UpdateUserUseCase,\n    private readonly deleteUserUseCase: DeleteUserUseCase,\n  ) {}\n\n  @ApiOperation({ summary: 'Criar um usuário' })\n  @ApiBody({ type: CreateUserDTO }) // Especifique o tipo do corpo da requisição\n  @ApiResponse({ status: 201, description: 'Usuário criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Requisição inválida' })\n  @Post()\n  async createUser(@Body() data: CreateUserDTO) {\n    return await this.createUserUseCase.execute(data);\n  }\n\n  @ApiOperation({ summary: 'Obter todos os usuários' })\n  @ApiResponse({\n    status: 200,\n    description: 'Lista de usuários retornada com sucesso',\n  })\n  @Get('')\n  async getAllUser() {\n    return await this.getAllUserUseCase.execute();\n  }\n\n  @ApiOperation({ summary: 'Obter um usuário por ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiResponse({ status: 200, description: 'Usuário retornado com sucesso' })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  @Get(':id')\n  async getUser(@Param('id') id: string) {\n    return await this.getUserUseCase.execute(Number(id));\n  }\n\n  @ApiOperation({ summary: 'Atualizar um usuário por ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiBody({ type: UpdateUserDTO })\n  @ApiResponse({ status: 200, description: 'Usuário atualizado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Requisição inválida' })\n  @Put(':id')\n  async updateUser(@Param('id') id: string, @Body() data: UpdateUserDTO) {\n    return await this.updateUserUseCase.execute({ id: Number(id), data });\n  }\n\n  @ApiOperation({ summary: 'Excluir um usuário por ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiResponse({ status: 204, description: 'Usuário excluído com sucesso' })\n  @ApiResponse({ status: 404, description: 'Usuário não encontrado' })\n  @Delete(':id')\n  async deleteUser(@Param('id') id: string) {\n    return await this.deleteUserUseCase.execute(Number(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adapters/database/repositories/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaHelper)\n                    \n                \n                        \n                            \n                                Defined in src/adapters/database/repositories/user.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/user.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                            Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/user.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/user.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/user.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/adapters/database/repositories/user.repository.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usuario\n                                    \n                                            Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Usuario } from '@prisma/client';\nimport { PrismaHelper } from '../helpers/prisma.helper';\nimport { IUser } from 'src/application/interfaces/user.repository.interface';\n\n@Injectable()\nexport class UserRepository implements IUser {\n  constructor(private readonly prisma: PrismaHelper) {}\n\n  async findAll(): Promise {\n    return await this.prisma.usuario.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.prisma.usuario.findUnique({\n      where: { id },\n    });\n  }\n\n  async create(usuario: Usuario): Promise {\n    return await this.prisma.usuario.create({\n      data: usuario,\n    });\n  }\n\n  async update(id: number, usuario: Usuario): Promise {\n    return await this.prisma.usuario.update({\n      where: { id },\n      data: usuario,\n    });\n  }\n\n  async remove(id: number): Promise {\n    await this.prisma.usuario.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: IUser)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/user.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        IUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/application/services/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IUser } from '../interfaces/user.repository.interface';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject('UserRepository')\n    private readonly userRepository: IUser,\n  ) {}\n\n  async findAll(): Promise {\n    return this.userRepository.findAll();\n  }\n\n  async findOne(id: number): Promise {\n    return this.userRepository.findOne(id);\n  }\n\n  async create(user: Partial): Promise {\n    return this.userRepository.create(user);\n  }\n\n  async update(\n    id: number,\n    data: Partial,\n  ): Promise {\n    await this.userRepository.update(id, data);\n    return this.userRepository.findOne(id);\n  }\n\n  async delete(id: number): Promise {\n    await this.userRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/adapters/controllers/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/adapters/controllers/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/adapters/controllers/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/adapters/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/adapters/database/helpers/prisma.helper.ts\n            \n            injectable\n            PrismaHelper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/adapters/database/repositories/category.repository.ts\n            \n            injectable\n            CategoryRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/adapters/database/repositories/order.repository.ts\n            \n            injectable\n            OrderRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/adapters/database/repositories/payment.repository.ts\n            \n            injectable\n            PaymentRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/adapters/database/repositories/product.repository.ts\n            \n            injectable\n            ProductRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/adapters/database/repositories/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/adapters/providers/mercadopago.provider.ts\n            \n            injectable\n            MercadoPagoProvider\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/dtos/create-order.dto.ts\n            \n            class\n            CreateOrderDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/dtos/create-order.dto.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/dtos/create-product.dto.ts\n            \n            class\n            CreateProductDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/dtos/update-category.dto.ts\n            \n            class\n            UpdateCategoryDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/dtos/update-order.dto.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/dtos/update-order.dto.ts\n            \n            class\n            UpdateOrderProductsDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/dtos/update-product.dto.ts\n            \n            class\n            UpdateProductDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/interfaces/category.repository.interface.ts\n            \n            interface\n            ICategory\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/interfaces/order.repository.interface.ts\n            \n            interface\n            IOrder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/interfaces/payment.provider.interface.ts\n            \n            interface\n            IPaymentProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/interfaces/payment.repository.interface.ts\n            \n            interface\n            IPayment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/interfaces/product.repository.interface.ts\n            \n            interface\n            IProduct\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/interfaces/user.repository.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/services/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/application/services/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/application/services/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/application/usecases/create-category.usecase.ts\n            \n            injectable\n            CreateCategoryUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/create-order.usecase.ts\n            \n            injectable\n            CreateOrderUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/create-payment-order.usecase.ts\n            \n            injectable\n            CreatePaymentOrderUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/create-product.usecase.ts\n            \n            injectable\n            CreateProductUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/create-user.usecase.ts\n            \n            injectable\n            CreateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/delete-category.usecase.ts\n            \n            injectable\n            DeleteCategoryUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/delete-product.usecase.ts\n            \n            injectable\n            DeleteProductUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/delete-user.usecase.ts\n            \n            injectable\n            DeleteUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get--all-category.usecase.ts\n            \n            injectable\n            GetAllCategoryUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get--all-product.usecase.ts\n            \n            injectable\n            GetAllProductUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get--all-user.usecase.ts\n            \n            injectable\n            GetAllUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get-category.usecase.ts\n            \n            injectable\n            GetCategoryUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get-payment-order.usecase.ts\n            \n            injectable\n            GetPaymentOrderUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get-product.usecase.ts\n            \n            injectable\n            GetProductUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get-queue.usecase.ts\n            \n            injectable\n            GetQueueOrderUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/get-user.usecase.ts\n            \n            injectable\n            GetUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-category.usecase.ts\n            \n            injectable\n            UpdateCategoryUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-order-products.usecase.ts\n            \n            injectable\n            UpdateOrderProductsUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-order-status-delivered.usecase.ts\n            \n            injectable\n            UpdateOrderStatusDeliveredUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-order-status-preparation.usecase.ts\n            \n            injectable\n            UpdateOrderStatusPreparationUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-order-status-ready.usecase.ts\n            \n            injectable\n            UpdateOrderStatusReadyUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-product.usecase.ts\n            \n            injectable\n            UpdateProductsUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/usecases/update-user.usecase.ts\n            \n            injectable\n            UpdateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.10\n        \n            @prisma/client : ^5.2.0\n        \n            @types/compression : ^1.7.2\n        \n            brazilian-class-validator : ^0.1.6\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            dotenv : ^16.3.1\n        \n            helmet : ^7.0.0\n        \n            mercadopago : ^1.5.17\n        \n            prisma : ^5.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTech Challenge - Pós-Tech SOAT - FIAP\nAlunos:\n\nPedro Henrique de Marins da Silva - RM348617\nRogério Sampaio Stubs -  RM349115\nGustavo Jorge Franco Teles dos Santos - RM349553\n\nO PROBLEMA\nHá uma lanchonete de bairro que está expandindo devido seu grande sucesso. Porém, com a expansão e sem um sistema de controle de pedidos, o atendimento aos clientes pode ser caótico e confuso. Por exemplo, imagine que um cliente faça um pedido complexo, como um hambúrguer personalizado com ingredientes específicos, acompanhado de batatas fritas e uma bebida. O atendente pode anotar o pedido em um papel e entregá-lo à cozinha, mas não há garantia de que o pedido será preparado corretamente.\nSem um sistema de controle de pedidos, pode haver confusão entre os atendentes e a cozinha, resultando em atrasos na preparação e entrega dos pedidos. Os pedidos podem ser perdidos, mal interpretados ou esquecidos, levando à insatisfação dos clientes e a perda de negócios.\nEm resumo, um sistema de controle de pedidos é essencial para garantir que a lanchonete possa atender os clientes de maneira eficiente, gerenciando seus pedidos e estoques de forma adequada. Sem ele, expandir a lanchonete pode acabar não dando certo, resultando em clientes insatisfeitos e impactando os negócios de forma negativa.\nPara solucionar o problema, a lanchonete irá investir em um sistema de autoatendimento de fast food, que é composto por uma série de dispositivos e interfaces que permitem aos clientes selecionar e fazer pedidos sem precisar interagir com um atendente, com as seguintes\nfuncionalidades:\nENTREGA FASE 1\n\nDocumentação do sistema (DDD) utilizando a linguagem ubíqua, dos seguintes fluxos:\nRealização do pedido e pagamento\nPreparação e entrega do pedido\n\n\nUma aplicação para todo sistema de backend (monolito) que deverá ser desenvolvido seguindo os padrões apresentados nas aulas:\nUtilizando arquitetura hexagonal\nAPIs:\nCadastro do Cliente\nIdentificação do Cliente via CPF\nCriar, editar e remover de produto\nBuscar produtos por categoria\nFake checkout, apenas enviar os produtos escolhidos para a fila\nListar os pedidos\n\n\nAplicação deverá ser escalável para atender grandes volumes nos horários de pico\nBanco de dados a sua escolha\nInicialmente deveremos trabalhar e organizar a fila dos pedidos apenas em banco de dados\nA aplicação deve ser entregue com um Dockerfile configurado para executá-la corretamente.\nPara validação da POC, temos a seguinte limitação de infraestrutura:\n1 instância para banco de dados\n1 instâncias para executar aplicação\n\n\n\n\n\nArquitetura\nA arquitetura dessa API segue os princípios de Arquitetura Hexagonal (Ports and Adapters). Essa arquitetura pode ser dividida em duas partes:\n\nCondutores: (ou atores primários): Podem ser definidos como atores que iniciam a interação. Por exemplo, um condutor pode ser um controller que recebe um input de um usuário e redireciona a aplicação utilizando uma Port(interface).\nConduzidos: (também conhecido como atores secundários): São parte da camada de infrasctructure da aplicação. Podem ser utilizados para adicionar funcionalidades para o domínio da aplicação. Exemplos: Banco de dados, APIs externas.\n\n\n\nEsquema de Domain Driven Design (DDD) no Miro\n\nProjeto\nGituhb\nEste projeto está pronto para ser executado em um ambiente Docker. Por este motivo, será necessária apenas a instalação do Docker, não sendo necessária a instalação manual do projeto. Também não será necessária a instalação manual do banco de dados.\nCaso não tenha o Docker instalado, siga as instruções para seu sistema operacional na documentação oficial do Docker.\nPara executar em ambiente de desenvolvimento:\n\nClone este repositório em seu computador;\nEntre no diretório local onde o repositório foi clonado;\nAltere o arquivo .env.example para .env \nPreencha os campos dentro arquivo\nUtilize o comando  docker compose up --build para \"build\" e subir o servidor local e expor a porta 3000 em localhost. Além de dev também subirá o serviço db com o banco de dados de desenvolvimento.\n\nIMPORTANTE: Esta API está programada para ser acessada a partir de http://localhost:3000 e o banco de dados utiliza a porta 5432. Certifique-se de que não existam outros recursos ocupando as portas acima.\nPara desativar os serviços, execute o comando docker-compose down.\nEndpoints\nA API expõe os seguintes endpoints a partir da base URL localhost:3000:\nSwagger Path\n/usuario\n\nPOST - Criar usuário\nBody\n\n{\n \"cpf\": \"string\",\n \"nome\": \"string\",\n \"email\": \"string\"\n}\nPOST /identificar/ - Identificar usuário\nBody\n\n{\n \"cpf\": \"string\"\n}\n\n/produto\n\nPOST - Criar produto\nBody\n\n{\n \"nome\": \"string\",\n \"preco\": \"number\",\n \"descricao\": \"string\",\n \"quantidade\": \"string\",\n \"categoria\": {\n   \"nome\": \"string\"\n }\n}\nGET - Listar produtos por categoria\nQueryParams - nomeCategoria\n\n\nDELETE /:id - Deletar produto\nPUT /:id\nBody\n\n{\n \"nome\": \"string\",\n \"preco\": \"number\",\n \"descricao\": \"string\",\n \"quantidade\": \"string\",\n \"categoria\": {\n   \"nome\": \"string\"\n }\n}\n\n/pedido\n\nPOST /pagar/:pedido_id - Pagar pedido pelo id\nPUT /preparo/:pedido_id - Iniciar pedido\nPUT /pronto/:pedido_id - Marcar como pronto\nPUT /entregue/:pedido_id - Marcar como entregue\nPUT /:pedido_id - Atualizar pedido\nBody\n\n{\n \"produtos\": [\"number\"],\n \"status\": \"EtapasPedido\",\n}\nGET /fila - Retorna o item na fila\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryService->AppModule\n\n\n\n\n\nCreateCategoryUseCase\n\nCreateCategoryUseCase\n\nAppModule -->\n\nCreateCategoryUseCase->AppModule\n\n\n\n\n\nCreateOrderUseCase\n\nCreateOrderUseCase\n\nAppModule -->\n\nCreateOrderUseCase->AppModule\n\n\n\n\n\nCreatePaymentOrderUseCase\n\nCreatePaymentOrderUseCase\n\nAppModule -->\n\nCreatePaymentOrderUseCase->AppModule\n\n\n\n\n\nCreateProductUseCase\n\nCreateProductUseCase\n\nAppModule -->\n\nCreateProductUseCase->AppModule\n\n\n\n\n\nCreateUserUseCase\n\nCreateUserUseCase\n\nAppModule -->\n\nCreateUserUseCase->AppModule\n\n\n\n\n\nDeleteCategoryUseCase\n\nDeleteCategoryUseCase\n\nAppModule -->\n\nDeleteCategoryUseCase->AppModule\n\n\n\n\n\nDeleteProductUseCase\n\nDeleteProductUseCase\n\nAppModule -->\n\nDeleteProductUseCase->AppModule\n\n\n\n\n\nDeleteUserUseCase\n\nDeleteUserUseCase\n\nAppModule -->\n\nDeleteUserUseCase->AppModule\n\n\n\n\n\nGetAllCategoryUseCase\n\nGetAllCategoryUseCase\n\nAppModule -->\n\nGetAllCategoryUseCase->AppModule\n\n\n\n\n\nGetAllProductUseCase\n\nGetAllProductUseCase\n\nAppModule -->\n\nGetAllProductUseCase->AppModule\n\n\n\n\n\nGetAllUserUseCase\n\nGetAllUserUseCase\n\nAppModule -->\n\nGetAllUserUseCase->AppModule\n\n\n\n\n\nGetCategoryUseCase\n\nGetCategoryUseCase\n\nAppModule -->\n\nGetCategoryUseCase->AppModule\n\n\n\n\n\nGetPaymentOrderUseCase\n\nGetPaymentOrderUseCase\n\nAppModule -->\n\nGetPaymentOrderUseCase->AppModule\n\n\n\n\n\nGetProductUseCase\n\nGetProductUseCase\n\nAppModule -->\n\nGetProductUseCase->AppModule\n\n\n\n\n\nGetQueueOrderUseCase\n\nGetQueueOrderUseCase\n\nAppModule -->\n\nGetQueueOrderUseCase->AppModule\n\n\n\n\n\nGetUserUseCase\n\nGetUserUseCase\n\nAppModule -->\n\nGetUserUseCase->AppModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nAppModule -->\n\nOrderService->AppModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nAppModule -->\n\nPaymentService->AppModule\n\n\n\n\n\nPrismaHelper\n\nPrismaHelper\n\nAppModule -->\n\nPrismaHelper->AppModule\n\n\n\n\n\nProductService\n\nProductService\n\nAppModule -->\n\nProductService->AppModule\n\n\n\n\n\nUpdateCategoryUseCase\n\nUpdateCategoryUseCase\n\nAppModule -->\n\nUpdateCategoryUseCase->AppModule\n\n\n\n\n\nUpdateOrderStatusDeliveredUseCase\n\nUpdateOrderStatusDeliveredUseCase\n\nAppModule -->\n\nUpdateOrderStatusDeliveredUseCase->AppModule\n\n\n\n\n\nUpdateOrderStatusPreparationUseCase\n\nUpdateOrderStatusPreparationUseCase\n\nAppModule -->\n\nUpdateOrderStatusPreparationUseCase->AppModule\n\n\n\n\n\nUpdateOrderStatusReadyUseCase\n\nUpdateOrderStatusReadyUseCase\n\nAppModule -->\n\nUpdateOrderStatusReadyUseCase->AppModule\n\n\n\n\n\nUpdateProductsUseCase\n\nUpdateProductsUseCase\n\nAppModule -->\n\nUpdateProductsUseCase->AppModule\n\n\n\n\n\nUpdateUserUseCase\n\nUpdateUserUseCase\n\nAppModule -->\n\nUpdateUserUseCase->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    35 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
